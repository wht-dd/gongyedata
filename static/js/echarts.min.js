! function(t, e) { "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e(t.echarts = {}) }(this, function(t) {
    "use strict";

    function e(t) {
        var e = {},
            n = {},
            i = t.match(/Firefox\/([\d.]+)/),
            a = t.match(/MSIE\s([\d.]+)/) || t.match(/Trident\/.+?rv:(([\d.]+))/),
            r = t.match(/Edge\/([\d.]+)/),
            o = /micromessenger/i.test(t);
        return i && (n.firefox = !0, n.version = i[1]), a && (n.ie = !0, n.version = a[1]), r && (n.edge = !0, n.version = r[1]), o && (n.weChat = !0), { browser: n, os: e, node: !1, canvasSupported: !!document.createElement("canvas").getContext, svgSupported: "undefined" != typeof SVGRect, touchEventsSupported: "ontouchstart" in window && !n.ie && !n.edge, pointerEventsSupported: "onpointerdown" in window && (n.edge || n.ie && n.version >= 11), domSupported: "undefined" != typeof document }
    }

    function n(t, e) { "createCanvas" === t && (B_ = null), z_[t] = e }

    function i(t) {
        if (null == t || "object" != typeof t) return t;
        var e = t,
            n = C_.call(t);
        if ("[object Array]" === n) { if (!z(t)) { e = []; for (var a = 0, r = t.length; r > a; a++) e[a] = i(t[a]) } } else if (A_[n]) {
            if (!z(t)) {
                var o = t.constructor;
                if (t.constructor.from) e = o.from(t);
                else { e = new o(t.length); for (var a = 0, r = t.length; r > a; a++) e[a] = i(t[a]) }
            }
        } else if (!T_[n] && !z(t) && !D(t)) { e = {}; for (var s in t) t.hasOwnProperty(s) && (e[s] = i(t[s])) }
        return e
    }

    function a(t, e, n) {
        if (!S(e) || !S(t)) return n ? i(e) : t;
        for (var r in e)
            if (e.hasOwnProperty(r)) {
                var o = t[r],
                    s = e[r];
                !S(s) || !S(o) || _(s) || _(o) || D(s) || D(o) || I(s) || I(o) || z(s) || z(o) ? !n && r in t || (t[r] = i(e[r], !0)) : a(o, s, n)
            }
        return t
    }

    function r(t, e) { for (var n = t[0], i = 1, r = t.length; r > i; i++) n = a(n, t[i], e); return n }

    function o(t, e) { for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]); return t }

    function s(t, e, n) { for (var i in e) e.hasOwnProperty(i) && (n ? null != e[i] : null == t[i]) && (t[i] = e[i]); return t }

    function l() { return B_ || (B_ = R_().getContext("2d")), B_ }

    function u(t, e) {
        if (t) {
            if (t.indexOf) return t.indexOf(e);
            for (var n = 0, i = t.length; i > n; n++)
                if (t[n] === e) return n
        }
        return -1
    }

    function h(t, e) {
        function n() {}
        var i = t.prototype;
        n.prototype = e.prototype, t.prototype = new n;
        for (var a in i) i.hasOwnProperty(a) && (t.prototype[a] = i[a]);
        t.prototype.constructor = t, t.superClass = e
    }

    function c(t, e, n) { t = "prototype" in t ? t.prototype : t, e = "prototype" in e ? e.prototype : e, s(t, e, n) }

    function d(t) { return t ? "string" == typeof t ? !1 : "number" == typeof t.length : void 0 }

    function f(t, e, n) {
        if (t && e)
            if (t.forEach && t.forEach === P_) t.forEach(e, n);
            else if (t.length === +t.length)
            for (var i = 0, a = t.length; a > i; i++) e.call(n, t[i], i, t);
        else
            for (var r in t) t.hasOwnProperty(r) && e.call(n, t[r], r, t)
    }

    function g(t, e, n) { if (t && e) { if (t.map && t.map === O_) return t.map(e, n); for (var i = [], a = 0, r = t.length; r > a; a++) i.push(e.call(n, t[a], a, t)); return i } }

    function p(t, e, n, i) { if (t && e) { if (t.reduce && t.reduce === E_) return t.reduce(e, n, i); for (var a = 0, r = t.length; r > a; a++) n = e.call(i, n, t[a], a, t); return n } }

    function m(t, e, n) { if (t && e) { if (t.filter && t.filter === k_) return t.filter(e, n); for (var i = [], a = 0, r = t.length; r > a; a++) e.call(n, t[a], a, t) && i.push(t[a]); return i } }

    function v(t, e, n) {
        if (t && e)
            for (var i = 0, a = t.length; a > i; i++)
                if (e.call(n, t[i], i, t)) return t[i]
    }

    function y(t, e) { var n = N_.call(arguments, 2); return function() { return t.apply(e, n.concat(N_.call(arguments))) } }

    function x(t) { var e = N_.call(arguments, 1); return function() { return t.apply(this, e.concat(N_.call(arguments))) } }

    function _(t) { return "[object Array]" === C_.call(t) }

    function w(t) { return "function" == typeof t }

    function b(t) { return "[object String]" === C_.call(t) }

    function S(t) { var e = typeof t; return "function" === e || !!t && "object" === e }

    function I(t) { return !!T_[C_.call(t)] }

    function M(t) { return !!A_[C_.call(t)] }

    function D(t) { return "object" == typeof t && "number" == typeof t.nodeType && "object" == typeof t.ownerDocument }

    function T(t) { return t !== t }

    function A() {
        for (var t = 0, e = arguments.length; e > t; t++)
            if (null != arguments[t]) return arguments[t]
    }

    function C(t, e) { return null != t ? t : e }

    function L(t, e, n) { return null != t ? t : null != e ? e : n }

    function P() { return Function.call.apply(N_, arguments) }

    function k(t) { if ("number" == typeof t) return [t, t, t, t]; var e = t.length; return 2 === e ? [t[0], t[1], t[0], t[1]] : 3 === e ? [t[0], t[1], t[2], t[1]] : t }

    function N(t, e) { if (!t) throw new Error(e) }

    function O(t) { return null == t ? null : "function" == typeof t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "") }

    function E(t) { t[V_] = !0 }

    function z(t) { return t[V_] }

    function R(t) {
        function e(t, e) { n ? i.set(t, e) : i.set(e, t) }
        var n = _(t);
        this.data = {};
        var i = this;
        t instanceof R ? t.each(e) : t && f(t, e)
    }

    function B(t) { return new R(t) }

    function V(t, e) { for (var n = new t.constructor(t.length + e.length), i = 0; i < t.length; i++) n[i] = t[i]; var a = t.length; for (i = 0; i < e.length; i++) n[i + a] = e[i]; return n }

    function G() {}

    function F(t, e) { var n = new F_(2); return null == t && (t = 0), null == e && (e = 0), n[0] = t, n[1] = e, n }

    function W(t, e) { return t[0] = e[0], t[1] = e[1], t }

    function H(t) { var e = new F_(2); return e[0] = t[0], e[1] = t[1], e }

    function X(t, e, n) { return t[0] = e, t[1] = n, t }

    function Y(t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t }

    function U(t, e, n, i) { return t[0] = e[0] + n[0] * i, t[1] = e[1] + n[1] * i, t }

    function j(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t }

    function Z(t) { return Math.sqrt(q(t)) }

    function q(t) { return t[0] * t[0] + t[1] * t[1] }

    function K(t, e, n) { return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t }

    function $(t, e, n) { return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t }

    function J(t, e) { return t[0] * e[0] + t[1] * e[1] }

    function Q(t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t }

    function te(t, e) { var n = Z(e); return 0 === n ? (t[0] = 0, t[1] = 0) : (t[0] = e[0] / n, t[1] = e[1] / n), t }

    function ee(t, e) { return Math.sqrt((t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1])) }

    function ne(t, e) { return (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]) }

    function ie(t, e) { return t[0] = -e[0], t[1] = -e[1], t }

    function ae(t, e, n, i) { return t[0] = e[0] + i * (n[0] - e[0]), t[1] = e[1] + i * (n[1] - e[1]), t }

    function re(t, e, n) {
        var i = e[0],
            a = e[1];
        return t[0] = n[0] * i + n[2] * a + n[4], t[1] = n[1] * i + n[3] * a + n[5], t
    }

    function oe(t, e, n) { return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t }

    function se(t, e, n) { return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t }

    function le() { this.on("mousedown", this._dragStart, this), this.on("mousemove", this._drag, this), this.on("mouseup", this._dragEnd, this), this.on("globalout", this._dragEnd, this) }

    function ue(t, e) { return { target: t, topTarget: e && e.topTarget } }

    function he(t, e) { var n = t._$eventProcessor; return null != e && n && n.normalizeQuery && (e = n.normalizeQuery(e)), e }

    function ce(t, e, n, i, a, r) {
        var o = t._$handlers;
        if ("function" == typeof n && (a = i, i = n, n = null), !i || !e) return t;
        n = he(t, n), o[e] || (o[e] = []);
        for (var s = 0; s < o[e].length; s++)
            if (o[e][s].h === i) return t;
        var l = { h: i, one: r, query: n, ctx: a || t, callAtLast: i.zrEventfulCallAtLast },
            u = o[e].length - 1,
            h = o[e][u];
        return h && h.callAtLast ? o[e].splice(u, 0, l) : o[e].push(l), t
    }

    function de(t, e, n, i, a, r) {
        var o = i + "-" + a,
            s = t.length;
        if (r.hasOwnProperty(o)) return r[o];
        if (1 === e) { var l = Math.round(Math.log((1 << s) - 1 & ~a) / q_); return t[n][l] }
        for (var u = i | 1 << n, h = n + 1; i & 1 << h;) h++;
        for (var c = 0, d = 0, f = 0; s > d; d++) {
            var g = 1 << d;
            g & a || (c += (f % 2 ? -1 : 1) * t[n][d] * de(t, e - 1, h, u, a | g, r), f++)
        }
        return r[o] = c, c
    }

    function fe(t, e) {
        var n = [
                [t[0], t[1], 1, 0, 0, 0, -e[0] * t[0], -e[0] * t[1]],
                [0, 0, 0, t[0], t[1], 1, -e[1] * t[0], -e[1] * t[1]],
                [t[2], t[3], 1, 0, 0, 0, -e[2] * t[2], -e[2] * t[3]],
                [0, 0, 0, t[2], t[3], 1, -e[3] * t[2], -e[3] * t[3]],
                [t[4], t[5], 1, 0, 0, 0, -e[4] * t[4], -e[4] * t[5]],
                [0, 0, 0, t[4], t[5], 1, -e[5] * t[4], -e[5] * t[5]],
                [t[6], t[7], 1, 0, 0, 0, -e[6] * t[6], -e[6] * t[7]],
                [0, 0, 0, t[6], t[7], 1, -e[7] * t[6], -e[7] * t[7]]
            ],
            i = {},
            a = de(n, 8, 0, 0, 0, i);
        if (0 !== a) {
            for (var r = [], o = 0; 8 > o; o++)
                for (var s = 0; 8 > s; s++) null == r[s] && (r[s] = 0), r[s] += ((o + s) % 2 ? -1 : 1) * de(n, 7, 0 === o ? 1 : 0, 1 << o, 1 << s, i) / a * e[o];
            return function(t, e, n) {
                var i = e * r[6] + n * r[7] + 1;
                t[0] = (e * r[0] + n * r[1] + r[2]) / i, t[1] = (e * r[3] + n * r[4] + r[5]) / i
            }
        }
    }

    function ge(t, e, n, i) { return n = n || {}, i || !D_.canvasSupported ? pe(t, e, n) : D_.browser.firefox && null != e.layerX && e.layerX !== e.offsetX ? (n.zrX = e.layerX, n.zrY = e.layerY) : null != e.offsetX ? (n.zrX = e.offsetX, n.zrY = e.offsetY) : pe(t, e, n), n }

    function pe(t, e, n) {
        if (t.getBoundingClientRect && D_.domSupported) {
            var i = e.clientX,
                a = e.clientY;
            if ("CANVAS" === t.nodeName.toUpperCase()) { var r = t.getBoundingClientRect(); return n.zrX = i - r.left, void(n.zrY = a - r.top) }
            var o = t[J_] || (t[J_] = {}),
                s = ve(me(t, o), o);
            if (s) return s(Q_, i, a), n.zrX = Q_[0], void(n.zrY = Q_[1])
        }
        n.zrX = n.zrY = 0
    }

    function me(t, e) {
        var n = e.markers;
        if (n) return n;
        n = e.markers = [];
        for (var i = ["left", "right"], a = ["top", "bottom"], r = 0; 4 > r; r++) {
            var o = document.createElement("div"),
                s = o.style,
                l = r % 2,
                u = (r >> 1) % 2;
            s.cssText = ["position:absolute", "visibility: hidden", "padding: 0", "margin: 0", "border-width: 0", "width:0", "height:0", i[l] + ":0", a[u] + ":0", i[1 - l] + ":auto", a[1 - u] + ":auto", ""].join("!important;"), t.appendChild(o), n.push(o)
        }
        return n
    }

    function ve(t, e) {
        for (var n = e.transformer, i = e.srcCoords, a = !0, r = [], o = [], s = 0; 4 > s; s++) {
            var l = t[s].getBoundingClientRect(),
                u = 2 * s,
                h = l.left,
                c = l.top;
            r.push(h, c), a &= i && h === i[u] && c === i[u + 1], o.push(t[s].offsetLeft, t[s].offsetTop)
        }
        return a ? n : (e.srcCoords = r, e.transformer = fe(r, o))
    }

    function ye(t, e, n) {
        if (e = e || window.event, null != e.zrX) return e;
        var i = e.type,
            a = i && i.indexOf("touch") >= 0;
        if (a) {
            var r = "touchend" !== i ? e.targetTouches[0] : e.changedTouches[0];
            r && ge(t, r, e, n)
        } else ge(t, e, e, n), e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;
        var o = e.button;
        return null == e.which && void 0 !== o && $_.test(e.type) && (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0), e
    }

    function xe(t, e, n) { K_ ? t.addEventListener(e, n) : t.attachEvent("on" + e, n) }

    function _e(t, e, n) { K_ ? t.removeEventListener(e, n) : t.detachEvent("on" + e, n) }

    function we(t) { return 2 === t.which || 3 === t.which }

    function be(t) {
        var e = t[1][0] - t[0][0],
            n = t[1][1] - t[0][1];
        return Math.sqrt(e * e + n * n)
    }

    function Se(t) { return [(t[0][0] + t[1][0]) / 2, (t[0][1] + t[1][1]) / 2] }

    function Ie(t, e, n) { return { type: t, event: n, target: e.target, topTarget: e.topTarget, cancelBubble: !1, offsetX: n.zrX, offsetY: n.zrY, gestureEvent: n.gestureEvent, pinchX: n.pinchX, pinchY: n.pinchY, pinchScale: n.pinchScale, wheelDelta: n.zrDelta, zrByTouch: n.zrByTouch, which: n.which, stop: Me } }

    function Me() { tw(this.event) }

    function De() {}

    function Te(t, e, n) {
        if (t[t.rectHover ? "rectContain" : "contain"](e, n)) {
            for (var i, a = t; a;) {
                if (a.clipPath && !a.clipPath.contain(e, n)) return !1;
                a.silent && (i = !0), a = a.parent
            }
            return i ? iw : !0
        }
        return !1
    }

    function Ae() { var t = new ow(6); return Ce(t), t }

    function Ce(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t }

    function Le(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t }

    function Pe(t, e, n) {
        var i = e[0] * n[0] + e[2] * n[1],
            a = e[1] * n[0] + e[3] * n[1],
            r = e[0] * n[2] + e[2] * n[3],
            o = e[1] * n[2] + e[3] * n[3],
            s = e[0] * n[4] + e[2] * n[5] + e[4],
            l = e[1] * n[4] + e[3] * n[5] + e[5];
        return t[0] = i, t[1] = a, t[2] = r, t[3] = o, t[4] = s, t[5] = l, t
    }

    function ke(t, e, n) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4] + n[0], t[5] = e[5] + n[1], t }

    function Ne(t, e, n) {
        var i = e[0],
            a = e[2],
            r = e[4],
            o = e[1],
            s = e[3],
            l = e[5],
            u = Math.sin(n),
            h = Math.cos(n);
        return t[0] = i * h + o * u, t[1] = -i * u + o * h, t[2] = a * h + s * u, t[3] = -a * u + h * s, t[4] = h * r + u * l, t[5] = h * l - u * r, t
    }

    function Oe(t, e, n) {
        var i = n[0],
            a = n[1];
        return t[0] = e[0] * i, t[1] = e[1] * a, t[2] = e[2] * i, t[3] = e[3] * a, t[4] = e[4] * i, t[5] = e[5] * a, t
    }

    function Ee(t, e) {
        var n = e[0],
            i = e[2],
            a = e[4],
            r = e[1],
            o = e[3],
            s = e[5],
            l = n * o - r * i;
        return l ? (l = 1 / l, t[0] = o * l, t[1] = -r * l, t[2] = -i * l, t[3] = n * l, t[4] = (i * s - o * a) * l, t[5] = (r * a - n * s) * l, t) : null
    }

    function ze(t) { var e = Ae(); return Le(e, t), e }

    function Re(t) { return t > uw || -uw > t }

    function Be(t) { this._target = t.target, this._life = t.life || 1e3, this._delay = t.delay || 0, this._initialized = !1, this.loop = null == t.loop ? !1 : t.loop, this.gap = t.gap || 0, this.easing = t.easing || "Linear", this.onframe = t.onframe, this.ondestroy = t.ondestroy, this.onrestart = t.onrestart, this._pausedTime = 0, this._paused = !1 }

    function Ve(t) { return t = Math.round(t), 0 > t ? 0 : t > 255 ? 255 : t }

    function Ge(t) { return t = Math.round(t), 0 > t ? 0 : t > 360 ? 360 : t }

    function Fe(t) { return 0 > t ? 0 : t > 1 ? 1 : t }

    function We(t) { return Ve(t.length && "%" === t.charAt(t.length - 1) ? parseFloat(t) / 100 * 255 : parseInt(t, 10)) }

    function He(t) { return Fe(t.length && "%" === t.charAt(t.length - 1) ? parseFloat(t) / 100 : parseFloat(t)) }

    function Xe(t, e, n) { return 0 > n ? n += 1 : n > 1 && (n -= 1), 1 > 6 * n ? t + (e - t) * n * 6 : 1 > 2 * n ? e : 2 > 3 * n ? t + (e - t) * (2 / 3 - n) * 6 : t }

    function Ye(t, e, n) { return t + (e - t) * n }

    function Ue(t, e, n, i, a) { return t[0] = e, t[1] = n, t[2] = i, t[3] = a, t }

    function je(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t }

    function Ze(t, e) { Sw && je(Sw, e), Sw = bw.put(t, Sw || e.slice()) }

    function qe(t, e) {
        if (t) {
            e = e || [];
            var n = bw.get(t);
            if (n) return je(e, n);
            t += "";
            var i = t.replace(/ /g, "").toLowerCase();
            if (i in ww) return je(e, ww[i]), Ze(t, e), e;
            if ("#" !== i.charAt(0)) {
                var a = i.indexOf("("),
                    r = i.indexOf(")");
                if (-1 !== a && r + 1 === i.length) {
                    var o = i.substr(0, a),
                        s = i.substr(a + 1, r - (a + 1)).split(","),
                        l = 1;
                    switch (o) {
                        case "rgba":
                            if (4 !== s.length) return void Ue(e, 0, 0, 0, 1);
                            l = He(s.pop());
                        case "rgb":
                            return 3 !== s.length ? void Ue(e, 0, 0, 0, 1) : (Ue(e, We(s[0]), We(s[1]), We(s[2]), l), Ze(t, e), e);
                        case "hsla":
                            return 4 !== s.length ? void Ue(e, 0, 0, 0, 1) : (s[3] = He(s[3]), Ke(s, e), Ze(t, e), e);
                        case "hsl":
                            return 3 !== s.length ? void Ue(e, 0, 0, 0, 1) : (Ke(s, e), Ze(t, e), e);
                        default:
                            return
                    }
                }
                Ue(e, 0, 0, 0, 1)
            } else { if (4 === i.length) { var u = parseInt(i.substr(1), 16); return u >= 0 && 4095 >= u ? (Ue(e, (3840 & u) >> 4 | (3840 & u) >> 8, 240 & u | (240 & u) >> 4, 15 & u | (15 & u) << 4, 1), Ze(t, e), e) : void Ue(e, 0, 0, 0, 1) } if (7 === i.length) { var u = parseInt(i.substr(1), 16); return u >= 0 && 16777215 >= u ? (Ue(e, (16711680 & u) >> 16, (65280 & u) >> 8, 255 & u, 1), Ze(t, e), e) : void Ue(e, 0, 0, 0, 1) } }
        }
    }

    function Ke(t, e) {
        var n = (parseFloat(t[0]) % 360 + 360) % 360 / 360,
            i = He(t[1]),
            a = He(t[2]),
            r = .5 >= a ? a * (i + 1) : a + i - a * i,
            o = 2 * a - r;
        return e = e || [], Ue(e, Ve(255 * Xe(o, r, n + 1 / 3)), Ve(255 * Xe(o, r, n)), Ve(255 * Xe(o, r, n - 1 / 3)), 1), 4 === t.length && (e[3] = t[3]), e
    }

    function $e(t) {
        if (t) {
            var e, n, i = t[0] / 255,
                a = t[1] / 255,
                r = t[2] / 255,
                o = Math.min(i, a, r),
                s = Math.max(i, a, r),
                l = s - o,
                u = (s + o) / 2;
            if (0 === l) e = 0, n = 0;
            else {
                n = .5 > u ? l / (s + o) : l / (2 - s - o);
                var h = ((s - i) / 6 + l / 2) / l,
                    c = ((s - a) / 6 + l / 2) / l,
                    d = ((s - r) / 6 + l / 2) / l;
                i === s ? e = d - c : a === s ? e = 1 / 3 + h - d : r === s && (e = 2 / 3 + c - h), 0 > e && (e += 1), e > 1 && (e -= 1)
            }
            var f = [360 * e, n, u];
            return null != t[3] && f.push(t[3]), f
        }
    }

    function Je(t, e) { var n = qe(t); if (n) { for (var i = 0; 3 > i; i++) n[i] = 0 > e ? n[i] * (1 - e) | 0 : (255 - n[i]) * e + n[i] | 0, n[i] > 255 ? n[i] = 255 : t[i] < 0 && (n[i] = 0); return rn(n, 4 === n.length ? "rgba" : "rgb") } }

    function Qe(t) { var e = qe(t); return e ? ((1 << 24) + (e[0] << 16) + (e[1] << 8) + +e[2]).toString(16).slice(1) : void 0 }

    function tn(t, e, n) {
        if (e && e.length && t >= 0 && 1 >= t) {
            n = n || [];
            var i = t * (e.length - 1),
                a = Math.floor(i),
                r = Math.ceil(i),
                o = e[a],
                s = e[r],
                l = i - a;
            return n[0] = Ve(Ye(o[0], s[0], l)), n[1] = Ve(Ye(o[1], s[1], l)), n[2] = Ve(Ye(o[2], s[2], l)), n[3] = Fe(Ye(o[3], s[3], l)), n
        }
    }

    function en(t, e, n) {
        if (e && e.length && t >= 0 && 1 >= t) {
            var i = t * (e.length - 1),
                a = Math.floor(i),
                r = Math.ceil(i),
                o = qe(e[a]),
                s = qe(e[r]),
                l = i - a,
                u = rn([Ve(Ye(o[0], s[0], l)), Ve(Ye(o[1], s[1], l)), Ve(Ye(o[2], s[2], l)), Fe(Ye(o[3], s[3], l))], "rgba");
            return n ? { color: u, leftIndex: a, rightIndex: r, value: i } : u
        }
    }

    function nn(t, e, n, i) { return t = qe(t), t ? (t = $e(t), null != e && (t[0] = Ge(e)), null != n && (t[1] = He(n)), null != i && (t[2] = He(i)), rn(Ke(t), "rgba")) : void 0 }

    function an(t, e) { return t = qe(t), t && null != e ? (t[3] = Fe(e), rn(t, "rgba")) : void 0 }

    function rn(t, e) { if (t && t.length) { var n = t[0] + "," + t[1] + "," + t[2]; return ("rgba" === e || "hsva" === e || "hsla" === e) && (n += "," + t[3]), e + "(" + n + ")" } }

    function on(t, e) { return t[e] }

    function sn(t, e, n) { t[e] = n }

    function ln(t, e, n) { return (e - t) * n + t }

    function un(t, e, n) { return n > .5 ? e : t }

    function hn(t, e, n, i, a) {
        var r = t.length;
        if (1 === a)
            for (var o = 0; r > o; o++) i[o] = ln(t[o], e[o], n);
        else
            for (var s = r && t[0].length, o = 0; r > o; o++)
                for (var l = 0; s > l; l++) i[o][l] = ln(t[o][l], e[o][l], n)
    }

    function cn(t, e, n) {
        var i = t.length,
            a = e.length;
        if (i !== a) {
            var r = i > a;
            if (r) t.length = a;
            else
                for (var o = i; a > o; o++) t.push(1 === n ? e[o] : Tw.call(e[o]))
        }
        for (var s = t[0] && t[0].length, o = 0; o < t.length; o++)
            if (1 === n) isNaN(t[o]) && (t[o] = e[o]);
            else
                for (var l = 0; s > l; l++) isNaN(t[o][l]) && (t[o][l] = e[o][l])
    }

    function dn(t, e, n) {
        if (t === e) return !0;
        var i = t.length;
        if (i !== e.length) return !1;
        if (1 === n) {
            for (var a = 0; i > a; a++)
                if (t[a] !== e[a]) return !1
        } else
            for (var r = t[0].length, a = 0; i > a; a++)
                for (var o = 0; r > o; o++)
                    if (t[a][o] !== e[a][o]) return !1; return !0
    }

    function fn(t, e, n, i, a, r, o, s, l) {
        var u = t.length;
        if (1 === l)
            for (var h = 0; u > h; h++) s[h] = gn(t[h], e[h], n[h], i[h], a, r, o);
        else
            for (var c = t[0].length, h = 0; u > h; h++)
                for (var d = 0; c > d; d++) s[h][d] = gn(t[h][d], e[h][d], n[h][d], i[h][d], a, r, o)
    }

    function gn(t, e, n, i, a, r, o) {
        var s = .5 * (n - t),
            l = .5 * (i - e);
        return (2 * (e - n) + s + l) * o + (-3 * (e - n) - 2 * s - l) * r + s * a + e
    }

    function pn(t) { if (d(t)) { var e = t.length; if (d(t[0])) { for (var n = [], i = 0; e > i; i++) n.push(Tw.call(t[i])); return n } return Tw.call(t) } return t }

    function mn(t) { return t[0] = Math.floor(t[0]), t[1] = Math.floor(t[1]), t[2] = Math.floor(t[2]), "rgba(" + t.join(",") + ")" }

    function vn(t) { var e = t[t.length - 1].value; return d(e && e[0]) ? 2 : 1 }

    function yn(t, e, n, i, a, r) {
        var o = t._getter,
            s = t._setter,
            l = "spline" === e,
            u = i.length;
        if (u) {
            var h, c = i[0].value,
                f = d(c),
                g = !1,
                p = !1,
                m = f ? vn(i) : 0;
            i.sort(function(t, e) { return t.time - e.time }), h = i[u - 1].time;
            for (var v = [], y = [], x = i[0].value, _ = !0, w = 0; u > w; w++) {
                v.push(i[w].time / h);
                var b = i[w].value;
                if (f && dn(b, x, m) || !f && b === x || (_ = !1), x = b, "string" == typeof b) {
                    var S = qe(b);
                    S ? (b = S, g = !0) : p = !0
                }
                y.push(b)
            }
            if (r || !_) {
                for (var I = y[u - 1], w = 0; u - 1 > w; w++) f ? cn(y[w], I, m) : !isNaN(y[w]) || isNaN(I) || p || g || (y[w] = I);
                f && cn(o(t._target, a), I, m);
                var M, D, T, A, C, L, P = 0,
                    k = 0;
                if (g) var N = [0, 0, 0, 0];
                var O = function(t, e) {
                        var n;
                        if (0 > e) n = 0;
                        else if (k > e) {
                            for (M = Math.min(P + 1, u - 1), n = M; n >= 0 && !(v[n] <= e); n--);
                            n = Math.min(n, u - 2)
                        } else {
                            for (n = P; u > n && !(v[n] > e); n++);
                            n = Math.min(n - 1, u - 2)
                        }
                        P = n, k = e;
                        var i = v[n + 1] - v[n];
                        if (0 !== i)
                            if (D = (e - v[n]) / i, l)
                                if (A = y[n], T = y[0 === n ? n : n - 1], C = y[n > u - 2 ? u - 1 : n + 1], L = y[n > u - 3 ? u - 1 : n + 2], f) fn(T, A, C, L, D, D * D, D * D * D, o(t, a), m);
                                else {
                                    var r;
                                    if (g) r = fn(T, A, C, L, D, D * D, D * D * D, N, 1), r = mn(N);
                                    else {
                                        if (p) return un(A, C, D);
                                        r = gn(T, A, C, L, D, D * D, D * D * D)
                                    }
                                    s(t, a, r)
                                }
                        else if (f) hn(y[n], y[n + 1], D, o(t, a), m);
                        else {
                            var r;
                            if (g) hn(y[n], y[n + 1], D, N, 1), r = mn(N);
                            else {
                                if (p) return un(y[n], y[n + 1], D);
                                r = ln(y[n], y[n + 1], D)
                            }
                            s(t, a, r)
                        }
                    },
                    E = new Be({ target: t._target, life: h, loop: t._loop, delay: t._delay, onframe: O, ondestroy: n });
                return e && "spline" !== e && (E.easing = e), E
            }
        }
    }

    function xn(t, e, n, i, a, r, o, s) {
        function l() { h--, h || r && r() }
        b(i) ? (r = a, a = i, i = 0) : w(a) ? (r = a, a = "linear", i = 0) : w(i) ? (r = i, i = 0) : w(n) ? (r = n, n = 500) : n || (n = 500), t.stopAnimation(), _n(t, "", t, e, n, i, s);
        var u = t.animators.slice(),
            h = u.length;
        h || r && r();
        for (var c = 0; c < u.length; c++) u[c].done(l).start(a, o)
    }

    function _n(t, e, n, i, a, r, o) {
        var s = {},
            l = 0;
        for (var u in i) i.hasOwnProperty(u) && (null != n[u] ? S(i[u]) && !d(i[u]) ? _n(t, e ? e + "." + u : u, n[u], i[u], a, r, o) : (o ? (s[u] = n[u], wn(t, e, u, i[u])) : s[u] = i[u], l++) : null == i[u] || o || wn(t, e, u, i[u]));
        l > 0 && t.animate(e, !1).when(null == a ? 500 : a, s).delay(r || 0)
    }

    function wn(t, e, n, i) {
        if (e) {
            var a = {};
            a[e] = {}, a[e][n] = i, t.attr(a)
        } else t.attr(n, i)
    }

    function bn(t, e, n, i) { 0 > n && (t += n, n = -n), 0 > i && (e += i, i = -i), this.x = t, this.y = e, this.width = n, this.height = i }

    function Sn(t) { for (var e = 0; t >= Gw;) e |= 1 & t, t >>= 1; return t + e }

    function In(t, e, n, i) {
        var a = e + 1;
        if (a === n) return 1;
        if (i(t[a++], t[e]) < 0) {
            for (; n > a && i(t[a], t[a - 1]) < 0;) a++;
            Mn(t, e, a)
        } else
            for (; n > a && i(t[a], t[a - 1]) >= 0;) a++;
        return a - e
    }

    function Mn(t, e, n) {
        for (n--; n > e;) {
            var i = t[e];
            t[e++] = t[n], t[n--] = i
        }
    }

    function Dn(t, e, n, i, a) {
        for (i === e && i++; n > i; i++) {
            for (var r, o = t[i], s = e, l = i; l > s;) r = s + l >>> 1, a(o, t[r]) < 0 ? l = r : s = r + 1;
            var u = i - s;
            switch (u) {
                case 3:
                    t[s + 3] = t[s + 2];
                case 2:
                    t[s + 2] = t[s + 1];
                case 1:
                    t[s + 1] = t[s];
                    break;
                default:
                    for (; u > 0;) t[s + u] = t[s + u - 1], u--
            }
            t[s] = o
        }
    }

    function Tn(t, e, n, i, a, r) {
        var o = 0,
            s = 0,
            l = 1;
        if (r(t, e[n + a]) > 0) {
            for (s = i - a; s > l && r(t, e[n + a + l]) > 0;) o = l, l = (l << 1) + 1, 0 >= l && (l = s);
            l > s && (l = s), o += a, l += a
        } else {
            for (s = a + 1; s > l && r(t, e[n + a - l]) <= 0;) o = l, l = (l << 1) + 1, 0 >= l && (l = s);
            l > s && (l = s);
            var u = o;
            o = a - l, l = a - u
        }
        for (o++; l > o;) {
            var h = o + (l - o >>> 1);
            r(t, e[n + h]) > 0 ? o = h + 1 : l = h
        }
        return l
    }

    function An(t, e, n, i, a, r) {
        var o = 0,
            s = 0,
            l = 1;
        if (r(t, e[n + a]) < 0) {
            for (s = a + 1; s > l && r(t, e[n + a - l]) < 0;) o = l, l = (l << 1) + 1, 0 >= l && (l = s);
            l > s && (l = s);
            var u = o;
            o = a - l, l = a - u
        } else {
            for (s = i - a; s > l && r(t, e[n + a + l]) >= 0;) o = l, l = (l << 1) + 1, 0 >= l && (l = s);
            l > s && (l = s), o += a, l += a
        }
        for (o++; l > o;) {
            var h = o + (l - o >>> 1);
            r(t, e[n + h]) < 0 ? l = h : o = h + 1
        }
        return l
    }

    function Cn(t, e) {
        function n(t, e) { l[c] = t, u[c] = e, c += 1 }

        function i() {
            for (; c > 1;) {
                var t = c - 2;
                if (t >= 1 && u[t - 1] <= u[t] + u[t + 1] || t >= 2 && u[t - 2] <= u[t] + u[t - 1]) u[t - 1] < u[t + 1] && t--;
                else if (u[t] > u[t + 1]) break;
                r(t)
            }
        }

        function a() {
            for (; c > 1;) {
                var t = c - 2;
                t > 0 && u[t - 1] < u[t + 1] && t--, r(t)
            }
        }

        function r(n) {
            var i = l[n],
                a = u[n],
                r = l[n + 1],
                h = u[n + 1];
            u[n] = a + h, n === c - 3 && (l[n + 1] = l[n + 2], u[n + 1] = u[n + 2]), c--;
            var d = An(t[r], t, i, a, 0, e);
            i += d, a -= d, 0 !== a && (h = Tn(t[i + a - 1], t, r, h, h - 1, e), 0 !== h && (h >= a ? o(i, a, r, h) : s(i, a, r, h)))
        }

        function o(n, i, a, r) {
            var o = 0;
            for (o = 0; i > o; o++) d[o] = t[n + o];
            var s = 0,
                l = a,
                u = n;
            if (t[u++] = t[l++], 0 !== --r) {
                if (1 === i) { for (o = 0; r > o; o++) t[u + o] = t[l + o]; return void(t[u + r] = d[s]) }
                for (var c, f, g, p = h;;) {
                    c = 0, f = 0, g = !1;
                    do
                        if (e(t[l], d[s]) < 0) { if (t[u++] = t[l++], f++, c = 0, 0 === --r) { g = !0; break } } else if (t[u++] = d[s++], c++, f = 0, 1 === --i) { g = !0; break } while (p > (c | f));
                    if (g) break;
                    do {
                        if (c = An(t[l], d, s, i, 0, e), 0 !== c) { for (o = 0; c > o; o++) t[u + o] = d[s + o]; if (u += c, s += c, i -= c, 1 >= i) { g = !0; break } }
                        if (t[u++] = t[l++], 0 === --r) { g = !0; break }
                        if (f = Tn(d[s], t, l, r, 0, e), 0 !== f) { for (o = 0; f > o; o++) t[u + o] = t[l + o]; if (u += f, l += f, r -= f, 0 === r) { g = !0; break } }
                        if (t[u++] = d[s++], 1 === --i) { g = !0; break }
                        p--
                    } while (c >= Fw || f >= Fw);
                    if (g) break;
                    0 > p && (p = 0), p += 2
                }
                if (h = p, 1 > h && (h = 1), 1 === i) {
                    for (o = 0; r > o; o++) t[u + o] = t[l + o];
                    t[u + r] = d[s]
                } else { if (0 === i) throw new Error; for (o = 0; i > o; o++) t[u + o] = d[s + o] }
            } else
                for (o = 0; i > o; o++) t[u + o] = d[s + o]
        }

        function s(n, i, a, r) {
            var o = 0;
            for (o = 0; r > o; o++) d[o] = t[a + o];
            var s = n + i - 1,
                l = r - 1,
                u = a + r - 1,
                c = 0,
                f = 0;
            if (t[u--] = t[s--], 0 !== --i) {
                if (1 === r) { for (u -= i, s -= i, f = u + 1, c = s + 1, o = i - 1; o >= 0; o--) t[f + o] = t[c + o]; return void(t[u] = d[l]) }
                for (var g = h;;) {
                    var p = 0,
                        m = 0,
                        v = !1;
                    do
                        if (e(d[l], t[s]) < 0) { if (t[u--] = t[s--], p++, m = 0, 0 === --i) { v = !0; break } } else if (t[u--] = d[l--], m++, p = 0, 1 === --r) { v = !0; break } while (g > (p | m));
                    if (v) break;
                    do {
                        if (p = i - An(d[l], t, n, i, i - 1, e), 0 !== p) { for (u -= p, s -= p, i -= p, f = u + 1, c = s + 1, o = p - 1; o >= 0; o--) t[f + o] = t[c + o]; if (0 === i) { v = !0; break } }
                        if (t[u--] = d[l--], 1 === --r) { v = !0; break }
                        if (m = r - Tn(t[s], d, 0, r, r - 1, e), 0 !== m) { for (u -= m, l -= m, r -= m, f = u + 1, c = l + 1, o = 0; m > o; o++) t[f + o] = d[c + o]; if (1 >= r) { v = !0; break } }
                        if (t[u--] = t[s--], 0 === --i) { v = !0; break }
                        g--
                    } while (p >= Fw || m >= Fw);
                    if (v) break;
                    0 > g && (g = 0), g += 2
                }
                if (h = g, 1 > h && (h = 1), 1 === r) {
                    for (u -= i, s -= i, f = u + 1, c = s + 1, o = i - 1; o >= 0; o--) t[f + o] = t[c + o];
                    t[u] = d[l]
                } else { if (0 === r) throw new Error; for (c = u - (r - 1), o = 0; r > o; o++) t[c + o] = d[o] }
            } else
                for (c = u - (r - 1), o = 0; r > o; o++) t[c + o] = d[o]
        }
        var l, u, h = Fw,
            c = 0,
            d = [];
        l = [], u = [], this.mergeRuns = i, this.forceMergeRuns = a, this.pushRun = n
    }

    function Ln(t, e, n, i) {
        n || (n = 0), i || (i = t.length);
        var a = i - n;
        if (!(2 > a)) {
            var r = 0;
            if (Gw > a) return r = In(t, n, i, e), void Dn(t, n, i, n + r, e);
            var o = new Cn(t, e),
                s = Sn(a);
            do {
                if (r = In(t, n, i, e), s > r) {
                    var l = a;
                    l > s && (l = s), Dn(t, n, n + l, n + r, e), r = l
                }
                o.pushRun(n, r), o.mergeRuns(), a -= r, n += r
            } while (0 !== a);
            o.forceMergeRuns()
        }
    }

    function Pn(t, e) { return t.zlevel === e.zlevel ? t.z === e.z ? t.z2 - e.z2 : t.z - e.z : t.zlevel - e.zlevel }

    function kn(t, e, n) {
        var i = null == e.x ? 0 : e.x,
            a = null == e.x2 ? 1 : e.x2,
            r = null == e.y ? 0 : e.y,
            o = null == e.y2 ? 0 : e.y2;
        e.global || (i = i * n.width + n.x, a = a * n.width + n.x, r = r * n.height + n.y, o = o * n.height + n.y), i = isNaN(i) ? 0 : i, a = isNaN(a) ? 1 : a, r = isNaN(r) ? 0 : r, o = isNaN(o) ? 0 : o;
        var s = t.createLinearGradient(i, r, a, o);
        return s
    }

    function Nn(t, e, n) {
        var i = n.width,
            a = n.height,
            r = Math.min(i, a),
            o = null == e.x ? .5 : e.x,
            s = null == e.y ? .5 : e.y,
            l = null == e.r ? .5 : e.r;
        e.global || (o = o * i + n.x, s = s * a + n.y, l *= r);
        var u = t.createRadialGradient(o, s, 0, o, s, l);
        return u
    }

    function On() { return !1 }

    function En(t, e, n) {
        var i = R_(),
            a = e.getWidth(),
            r = e.getHeight(),
            o = i.style;
        return o && (o.position = "absolute", o.left = 0, o.top = 0, o.width = a + "px", o.height = r + "px", i.setAttribute("data-zr-dom-id", t)), i.width = a * n, i.height = r * n, i
    }

    function zn(t) { if ("string" == typeof t) { var e = eb.get(t); return e && e.image } return t }

    function Rn(t, e, n, i, a) {
        if (t) {
            if ("string" == typeof t) {
                if (e && e.__zrImageSrc === t || !n) return e;
                var r = eb.get(t),
                    o = { hostEl: n, cb: i, cbPayload: a };
                return r ? (e = r.image, !Vn(e) && r.pending.push(o)) : (e = new Image, e.onload = e.onerror = Bn, eb.put(t, e.__cachedImgObj = { image: e, pending: [o] }), e.src = e.__zrImageSrc = t), e
            }
            return t
        }
        return e
    }

    function Bn() {
        var t = this.__cachedImgObj;
        this.onload = this.onerror = this.__cachedImgObj = null;
        for (var e = 0; e < t.pending.length; e++) {
            var n = t.pending[e],
                i = n.cb;
            i && i(this, n.cbPayload), n.hostEl.dirty()
        }
        t.pending.length = 0
    }

    function Vn(t) { return t && t.width && t.height }

    function Gn(t, e) { e = e || ob; var n = t + ":" + e; if (nb[n]) return nb[n]; for (var i = (t + "").split("\n"), a = 0, r = 0, o = i.length; o > r; r++) a = Math.max(Jn(i[r], e).width, a); return ib > ab && (ib = 0, nb = {}), ib++, nb[n] = a, a }

    function Fn(t, e, n, i, a, r, o, s) { return o ? Hn(t, e, n, i, a, r, o, s) : Wn(t, e, n, i, a, r, s) }

    function Wn(t, e, n, i, a, r, o) {
        var s = Qn(t, e, a, r, o),
            l = Gn(t, e);
        a && (l += a[1] + a[3]);
        var u = s.outerHeight,
            h = Xn(0, l, n),
            c = Yn(0, u, i),
            d = new bn(h, c, l, u);
        return d.lineHeight = s.lineHeight, d
    }

    function Hn(t, e, n, i, a, r, o, s) {
        var l = ti(t, { rich: o, truncate: s, font: e, textAlign: n, textPadding: a, textLineHeight: r }),
            u = l.outerWidth,
            h = l.outerHeight,
            c = Xn(0, u, n),
            d = Yn(0, h, i);
        return new bn(c, d, u, h)
    }

    function Xn(t, e, n) { return "right" === n ? t -= e : "center" === n && (t -= e / 2), t }

    function Yn(t, e, n) { return "middle" === n ? t -= e / 2 : "bottom" === n && (t -= e), t }

    function Un(t, e, n) {
        var i = e.textPosition,
            a = e.textDistance,
            r = n.x,
            o = n.y;
        a = a || 0;
        var s = n.height,
            l = n.width,
            u = s / 2,
            h = "left",
            c = "top";
        switch (i) {
            case "left":
                r -= a, o += u, h = "right", c = "middle";
                break;
            case "right":
                r += a + l, o += u, c = "middle";
                break;
            case "top":
                r += l / 2, o -= a, h = "center", c = "bottom";
                break;
            case "bottom":
                r += l / 2, o += s + a, h = "center";
                break;
            case "inside":
                r += l / 2, o += u, h = "center", c = "middle";
                break;
            case "insideLeft":
                r += a, o += u, c = "middle";
                break;
            case "insideRight":
                r += l - a, o += u, h = "right", c = "middle";
                break;
            case "insideTop":
                r += l / 2, o += a, h = "center";
                break;
            case "insideBottom":
                r += l / 2, o += s - a, h = "center", c = "bottom";
                break;
            case "insideTopLeft":
                r += a, o += a;
                break;
            case "insideTopRight":
                r += l - a, o += a, h = "right";
                break;
            case "insideBottomLeft":
                r += a, o += s - a, c = "bottom";
                break;
            case "insideBottomRight":
                r += l - a, o += s - a, h = "right", c = "bottom"
        }
        return t = t || {}, t.x = r, t.y = o, t.textAlign = h, t.textVerticalAlign = c, t
    }

    function jn(t, e, n, i, a) {
        if (!e) return "";
        var r = (t + "").split("\n");
        a = Zn(e, n, i, a);
        for (var o = 0, s = r.length; s > o; o++) r[o] = qn(r[o], a);
        return r.join("\n")
    }

    function Zn(t, e, n, i) {
        i = o({}, i), i.font = e;
        var n = C(n, "...");
        i.maxIterations = C(i.maxIterations, 2);
        var a = i.minChar = C(i.minChar, 0);
        i.cnCharWidth = Gn("国", e);
        var r = i.ascCharWidth = Gn("a", e);
        i.placeholder = C(i.placeholder, "");
        for (var s = t = Math.max(0, t - 1), l = 0; a > l && s >= r; l++) s -= r;
        var u = Gn(n, e);
        return u > s && (n = "", u = 0), s = t - u, i.ellipsis = n, i.ellipsisWidth = u, i.contentWidth = s, i.containerWidth = t, i
    }

    function qn(t, e) {
        var n = e.containerWidth,
            i = e.font,
            a = e.contentWidth;
        if (!n) return "";
        var r = Gn(t, i);
        if (n >= r) return t;
        for (var o = 0;; o++) {
            if (a >= r || o >= e.maxIterations) { t += e.ellipsis; break }
            var s = 0 === o ? Kn(t, a, e.ascCharWidth, e.cnCharWidth) : r > 0 ? Math.floor(t.length * a / r) : 0;
            t = t.substr(0, s), r = Gn(t, i)
        }
        return "" === t && (t = e.placeholder), t
    }

    function Kn(t, e, n, i) {
        for (var a = 0, r = 0, o = t.length; o > r && e > a; r++) {
            var s = t.charCodeAt(r);
            a += s >= 0 && 127 >= s ? n : i
        }
        return r
    }

    function $n(t) { return Gn("国", t) }

    function Jn(t, e) { return sb.measureText(t, e) }

    function Qn(t, e, n, i, a) {
        null != t && (t += "");
        var r = C(i, $n(e)),
            o = t ? t.split("\n") : [],
            s = o.length * r,
            l = s,
            u = !0;
        if (n && (l += n[0] + n[2]), t && a) {
            u = !1;
            var h = a.outerHeight,
                c = a.outerWidth;
            if (null != h && l > h) t = "", o = [];
            else if (null != c)
                for (var d = Zn(c - (n ? n[1] + n[3] : 0), e, a.ellipsis, { minChar: a.minChar, placeholder: a.placeholder }), f = 0, g = o.length; g > f; f++) o[f] = qn(o[f], d)
        }
        return { lines: o, height: s, outerHeight: l, lineHeight: r, canCacheByTextString: u }
    }

    function ti(t, e) {
        var n = { lines: [], width: 0, height: 0 };
        if (null != t && (t += ""), !t) return n;
        for (var i, a = rb.lastIndex = 0; null != (i = rb.exec(t));) {
            var r = i.index;
            r > a && ei(n, t.substring(a, r)), ei(n, i[2], i[1]), a = rb.lastIndex
        }
        a < t.length && ei(n, t.substring(a, t.length));
        var o = n.lines,
            s = 0,
            l = 0,
            u = [],
            h = e.textPadding,
            c = e.truncate,
            d = c && c.outerWidth,
            f = c && c.outerHeight;
        h && (null != d && (d -= h[1] + h[3]), null != f && (f -= h[0] + h[2]));
        for (var g = 0; g < o.length; g++) {
            for (var p = o[g], m = 0, v = 0, y = 0; y < p.tokens.length; y++) {
                var x = p.tokens[y],
                    _ = x.styleName && e.rich[x.styleName] || {},
                    w = x.textPadding = _.textPadding,
                    b = x.font = _.font || e.font,
                    S = x.textHeight = C(_.textHeight, $n(b));
                if (w && (S += w[0] + w[2]), x.height = S, x.lineHeight = L(_.textLineHeight, e.textLineHeight, S), x.textAlign = _ && _.textAlign || e.textAlign, x.textVerticalAlign = _ && _.textVerticalAlign || "middle", null != f && s + x.lineHeight > f) return { lines: [], width: 0, height: 0 };
                x.textWidth = Gn(x.text, b);
                var I = _.textWidth,
                    M = null == I || "auto" === I;
                if ("string" == typeof I && "%" === I.charAt(I.length - 1)) x.percentWidth = I, u.push(x), I = 0;
                else {
                    if (M) {
                        I = x.textWidth;
                        var D = _.textBackgroundColor,
                            T = D && D.image;
                        T && (T = zn(T), Vn(T) && (I = Math.max(I, T.width * S / T.height)))
                    }
                    var A = w ? w[1] + w[3] : 0;
                    I += A;
                    var P = null != d ? d - v : null;
                    null != P && I > P && (!M || A > P ? (x.text = "", x.textWidth = I = 0) : (x.text = jn(x.text, P - A, b, c.ellipsis, { minChar: c.minChar }), x.textWidth = Gn(x.text, b), I = x.textWidth + A))
                }
                v += x.width = I, _ && (m = Math.max(m, x.lineHeight))
            }
            p.width = v, p.lineHeight = m, s += m, l = Math.max(l, v)
        }
        n.outerWidth = n.width = C(e.textWidth, l), n.outerHeight = n.height = C(e.textHeight, s), h && (n.outerWidth += h[1] + h[3], n.outerHeight += h[0] + h[2]);
        for (var g = 0; g < u.length; g++) {
            var x = u[g],
                k = x.percentWidth;
            x.width = parseInt(k, 10) / 100 * l
        }
        return n
    }

    function ei(t, e, n) {
        for (var i = "" === e, a = e.split("\n"), r = t.lines, o = 0; o < a.length; o++) {
            var s = a[o],
                l = { styleName: n, text: s, isLineHolder: !s && !i };
            if (o) r.push({ tokens: [l] });
            else {
                var u = (r[r.length - 1] || (r[0] = { tokens: [] })).tokens,
                    h = u.length;
                1 === h && u[0].isLineHolder ? u[0] = l : (s || !h || i) && u.push(l)
            }
        }
    }

    function ni(t) { var e = (t.fontSize || t.fontFamily) && [t.fontStyle, t.fontWeight, (t.fontSize || 12) + "px", t.fontFamily || "sans-serif"].join(" "); return e && O(e) || t.textFont || t.font }

    function ii(t, e) {
        var n, i, a, r, o = e.x,
            s = e.y,
            l = e.width,
            u = e.height,
            h = e.r;
        0 > l && (o += l, l = -l), 0 > u && (s += u, u = -u), "number" == typeof h ? n = i = a = r = h : h instanceof Array ? 1 === h.length ? n = i = a = r = h[0] : 2 === h.length ? (n = a = h[0], i = r = h[1]) : 3 === h.length ? (n = h[0], i = r = h[1], a = h[2]) : (n = h[0], i = h[1], a = h[2], r = h[3]) : n = i = a = r = 0;
        var c;
        n + i > l && (c = n + i, n *= l / c, i *= l / c), a + r > l && (c = a + r, a *= l / c, r *= l / c), i + a > u && (c = i + a, i *= u / c, a *= u / c), n + r > u && (c = n + r, n *= u / c, r *= u / c), t.moveTo(o + n, s), t.lineTo(o + l - i, s), 0 !== i && t.arc(o + l - i, s + i, i, -Math.PI / 2, 0), t.lineTo(o + l, s + u - a), 0 !== a && t.arc(o + l - a, s + u - a, a, 0, Math.PI / 2), t.lineTo(o + r, s + u), 0 !== r && t.arc(o + r, s + u - r, r, Math.PI / 2, Math.PI), t.lineTo(o, s + n), 0 !== n && t.arc(o + n, s + n, n, Math.PI, 1.5 * Math.PI)
    }

    function ai(t) { return ri(t), f(t.rich, ri), t }

    function ri(t) {
        if (t) {
            t.font = ni(t);
            var e = t.textAlign;
            "middle" === e && (e = "center"), t.textAlign = null == e || ub[e] ? e : "left";
            var n = t.textVerticalAlign || t.textBaseline;
            "center" === n && (n = "middle"), t.textVerticalAlign = null == n || hb[n] ? n : "top";
            var i = t.textPadding;
            i && (t.textPadding = k(t.textPadding))
        }
    }

    function oi(t, e, n, i, a, r) { i.rich ? li(t, e, n, i, a, r) : si(t, e, n, i, a, r) }

    function si(t, e, n, i, a, r) {
        var o, s = di(i),
            l = !1,
            u = e.__attrCachedBy === Yw.PLAIN_TEXT;
        r !== Uw ? (r && (o = r.style, l = !s && u && o), e.__attrCachedBy = s ? Yw.NONE : Yw.PLAIN_TEXT) : u && (e.__attrCachedBy = Yw.NONE);
        var h = i.font || lb;
        l && h === (o.font || lb) || (e.font = h);
        var c = t.__computedFont;
        t.__styleFont !== h && (t.__styleFont = h, c = t.__computedFont = e.font);
        var d = i.textPadding,
            f = i.textLineHeight,
            g = t.__textCotentBlock;
        (!g || t.__dirtyText) && (g = t.__textCotentBlock = Qn(n, c, d, f, i.truncate));
        var p = g.outerHeight,
            m = g.lines,
            v = g.lineHeight,
            y = pi(fb, t, i, a),
            x = y.baseX,
            _ = y.baseY,
            w = y.textAlign || "left",
            b = y.textVerticalAlign;
        hi(e, i, a, x, _);
        var S = Yn(_, p, b),
            I = x,
            M = S;
        if (s || d) {
            var D = Gn(n, c),
                T = D;
            d && (T += d[1] + d[3]);
            var A = Xn(x, T, w);
            s && fi(t, e, i, A, S, T, p), d && (I = _i(x, w, d), M += d[0])
        }
        e.textAlign = w, e.textBaseline = "middle", e.globalAlpha = i.opacity || 1;
        for (var C = 0; C < cb.length; C++) {
            var L = cb[C],
                P = L[0],
                k = L[1],
                N = i[P];
            l && N === o[P] || (e[k] = Xw(e, k, N || L[2]))
        }
        M += v / 2;
        var O = i.textStrokeWidth,
            E = l ? o.textStrokeWidth : null,
            z = !l || O !== E,
            R = !l || z || i.textStroke !== o.textStroke,
            B = vi(i.textStroke, O),
            V = yi(i.textFill);
        if (B && (z && (e.lineWidth = O), R && (e.strokeStyle = B)), V && (l && i.textFill === o.textFill || (e.fillStyle = V)), 1 === m.length) B && e.strokeText(m[0], I, M), V && e.fillText(m[0], I, M);
        else
            for (var C = 0; C < m.length; C++) B && e.strokeText(m[C], I, M), V && e.fillText(m[C], I, M), M += v
    }

    function li(t, e, n, i, a, r) {
        r !== Uw && (e.__attrCachedBy = Yw.NONE);
        var o = t.__textCotentBlock;
        (!o || t.__dirtyText) && (o = t.__textCotentBlock = ti(n, i)), ui(t, e, o, i, a)
    }

    function ui(t, e, n, i, a) {
        var r = n.width,
            o = n.outerWidth,
            s = n.outerHeight,
            l = i.textPadding,
            u = pi(fb, t, i, a),
            h = u.baseX,
            c = u.baseY,
            d = u.textAlign,
            f = u.textVerticalAlign;
        hi(e, i, a, h, c);
        var g = Xn(h, o, d),
            p = Yn(c, s, f),
            m = g,
            v = p;
        l && (m += l[3], v += l[0]);
        var y = m + r;
        di(i) && fi(t, e, i, g, p, o, s);
        for (var x = 0; x < n.lines.length; x++) {
            for (var _, w = n.lines[x], b = w.tokens, S = b.length, I = w.lineHeight, M = w.width, D = 0, T = m, A = y, C = S - 1; S > D && (_ = b[D], !_.textAlign || "left" === _.textAlign);) ci(t, e, _, i, I, v, T, "left"), M -= _.width, T += _.width, D++;
            for (; C >= 0 && (_ = b[C], "right" === _.textAlign);) ci(t, e, _, i, I, v, A, "right"), M -= _.width, A -= _.width, C--;
            for (T += (r - (T - m) - (y - A) - M) / 2; C >= D;) _ = b[D], ci(t, e, _, i, I, v, T + _.width / 2, "center"), T += _.width, D++;
            v += I
        }
    }

    function hi(t, e, n, i, a) { if (n && e.textRotation) { var r = e.textOrigin; "center" === r ? (i = n.width / 2 + n.x, a = n.height / 2 + n.y) : r && (i = r[0] + n.x, a = r[1] + n.y), t.translate(i, a), t.rotate(-e.textRotation), t.translate(-i, -a) } }

    function ci(t, e, n, i, a, r, o, s) {
        var l = i.rich[n.styleName] || {};
        l.text = n.text;
        var u = n.textVerticalAlign,
            h = r + a / 2;
        "top" === u ? h = r + n.height / 2 : "bottom" === u && (h = r + a - n.height / 2), !n.isLineHolder && di(l) && fi(t, e, l, "right" === s ? o - n.width : "center" === s ? o - n.width / 2 : o, h - n.height / 2, n.width, n.height);
        var c = n.textPadding;
        c && (o = _i(o, s, c), h -= n.height / 2 - c[2] - n.textHeight / 2), mi(e, "shadowBlur", L(l.textShadowBlur, i.textShadowBlur, 0)), mi(e, "shadowColor", l.textShadowColor || i.textShadowColor || "transparent"), mi(e, "shadowOffsetX", L(l.textShadowOffsetX, i.textShadowOffsetX, 0)), mi(e, "shadowOffsetY", L(l.textShadowOffsetY, i.textShadowOffsetY, 0)), mi(e, "textAlign", s), mi(e, "textBaseline", "middle"), mi(e, "font", n.font || lb);
        var d = vi(l.textStroke || i.textStroke, g),
            f = yi(l.textFill || i.textFill),
            g = C(l.textStrokeWidth, i.textStrokeWidth);
        d && (mi(e, "lineWidth", g), mi(e, "strokeStyle", d), e.strokeText(n.text, o, h)), f && (mi(e, "fillStyle", f), e.fillText(n.text, o, h))
    }

    function di(t) { return !!(t.textBackgroundColor || t.textBorderWidth && t.textBorderColor) }

    function fi(t, e, n, i, a, r, o) {
        var s = n.textBackgroundColor,
            l = n.textBorderWidth,
            u = n.textBorderColor,
            h = b(s);
        if (mi(e, "shadowBlur", n.textBoxShadowBlur || 0), mi(e, "shadowColor", n.textBoxShadowColor || "transparent"), mi(e, "shadowOffsetX", n.textBoxShadowOffsetX || 0), mi(e, "shadowOffsetY", n.textBoxShadowOffsetY || 0), h || l && u) {
            e.beginPath();
            var c = n.textBorderRadius;
            c ? ii(e, { x: i, y: a, width: r, height: o, r: c }) : e.rect(i, a, r, o), e.closePath()
        }
        if (h)
            if (mi(e, "fillStyle", s), null != n.fillOpacity) {
                var d = e.globalAlpha;
                e.globalAlpha = n.fillOpacity * n.opacity, e.fill(), e.globalAlpha = d
            } else e.fill();
        else if (S(s)) {
            var f = s.image;
            f = Rn(f, null, t, gi, s), f && Vn(f) && e.drawImage(f, i, a, r, o)
        }
        if (l && u)
            if (mi(e, "lineWidth", l), mi(e, "strokeStyle", u), null != n.strokeOpacity) {
                var d = e.globalAlpha;
                e.globalAlpha = n.strokeOpacity * n.opacity, e.stroke(), e.globalAlpha = d
            } else e.stroke()
    }

    function gi(t, e) { e.image = t }

    function pi(t, e, n, i) {
        var a = n.x || 0,
            r = n.y || 0,
            o = n.textAlign,
            s = n.textVerticalAlign;
        if (i) {
            var l = n.textPosition;
            if (l instanceof Array) a = i.x + xi(l[0], i.width), r = i.y + xi(l[1], i.height);
            else {
                var u = e && e.calculateTextPosition ? e.calculateTextPosition(db, n, i) : Un(db, n, i);
                a = u.x, r = u.y, o = o || u.textAlign, s = s || u.textVerticalAlign
            }
            var h = n.textOffset;
            h && (a += h[0], r += h[1])
        }
        return t = t || {}, t.baseX = a, t.baseY = r, t.textAlign = o, t.textVerticalAlign = s, t
    }

    function mi(t, e, n) { return t[e] = Xw(t, e, n), t[e] }

    function vi(t, e) { return null == t || 0 >= e || "transparent" === t || "none" === t ? null : t.image || t.colorStops ? "#000" : t }

    function yi(t) { return null == t || "none" === t ? null : t.image || t.colorStops ? "#000" : t }

    function xi(t, e) { return "string" == typeof t ? t.lastIndexOf("%") >= 0 ? parseFloat(t) / 100 * e : parseFloat(t) : t }

    function _i(t, e, n) { return "right" === e ? t - n[1] : "center" === e ? t + n[3] / 2 - n[1] / 2 : t + n[3] }

    function wi(t, e) { return null != t && (t || e.textBackgroundColor || e.textBorderWidth && e.textBorderColor || e.textPadding) }

    function bi(t) {
        t = t || {}, Ew.call(this, t);
        for (var e in t) t.hasOwnProperty(e) && "style" !== e && (this[e] = t[e]);
        this.style = new Zw(t.style, this), this._rect = null, this.__clipPaths = null
    }

    function Si(t) { bi.call(this, t) }

    function Ii(t) { return parseInt(t, 10) }

    function Mi(t) { return t ? t.__builtin__ ? !0 : "function" != typeof t.resize || "function" != typeof t.refresh ? !1 : !0 : !1 }

    function Di(t, e, n) { return _b.copy(t.getBoundingRect()), t.transform && _b.applyTransform(t.transform), wb.width = e, wb.height = n, !_b.intersect(wb) }

    function Ti(t, e) {
        if (t === e) return !1;
        if (!t || !e || t.length !== e.length) return !0;
        for (var n = 0; n < t.length; n++)
            if (t[n] !== e[n]) return !0;
        return !1
    }

    function Ai(t, e) {
        for (var n = 0; n < t.length; n++) {
            var i = t[n];
            i.setTransform(e), e.beginPath(), i.buildPath(e, i.shape), e.clip(), i.restoreTransform(e)
        }
    }

    function Ci(t, e) { var n = document.createElement("div"); return n.style.cssText = ["position:relative", "width:" + t + "px", "height:" + e + "px", "padding:0", "margin:0", "border-width:0"].join(";") + ";", n }

    function Li(t) { return "mousewheel" === t && D_.browser.firefox ? "DOMMouseScroll" : t }

    function Pi(t) { t._touching = !0, clearTimeout(t._touchTimer), t._touchTimer = setTimeout(function() { t._touching = !1 }, 700) }

    function ki(t) { var e = t.pointerType; return "pen" === e || "touch" === e }

    function Ni(t) {
        function e(t, e) { return function() { return e._touching ? void 0 : t.apply(e, arguments) } }
        f(Db, function(e) { t._handlers[e] = y(Cb[e], t) }), f(Ab, function(e) { t._handlers[e] = y(Cb[e], t) }), f(Mb, function(n) { t._handlers[n] = e(Cb[n], t) })
    }

    function Oi(t) {
        function e(e, n) { f(e, function(e) { xe(t, Li(e), n._handlers[e]) }, n) }
        Z_.call(this), this.dom = t, this._touching = !1, this._touchTimer, this._handlers = {}, Ni(this), D_.pointerEventsSupported ? e(Ab, this) : (D_.touchEventsSupported && e(Db, this), e(Mb, this))
    }

    function Ei(t, e) { var n = new Eb(I_(), t, e); return Nb[n.id] = n, n }

    function zi(t) {
        if (t) t.dispose();
        else {
            for (var e in Nb) Nb.hasOwnProperty(e) && Nb[e].dispose();
            Nb = {}
        }
        return this
    }

    function Ri(t) { return Nb[t] }

    function Bi(t, e) { kb[t] = e }

    function Vi(t) { delete Nb[t] }

    function Gi(t) { return t instanceof Array ? t : null == t ? [] : [t] }

    function Fi(t, e, n) { if (t) { t[e] = t[e] || {}, t.emphasis = t.emphasis || {}, t.emphasis[e] = t.emphasis[e] || {}; for (var i = 0, a = n.length; a > i; i++) { var r = n[i];!t.emphasis[e].hasOwnProperty(r) && t[e].hasOwnProperty(r) && (t.emphasis[e][r] = t[e][r]) } } }

    function Wi(t) { return !Bb(t) || Vb(t) || t instanceof Date ? t : t.value }

    function Hi(t) { return Bb(t) && !(t instanceof Array) }

    function Xi(t, e) {
        e = (e || []).slice();
        var n = g(t || [], function(t) { return { exist: t } });
        return Rb(e, function(t, i) {
            if (Bb(t)) {
                for (var a = 0; a < n.length; a++)
                    if (!n[a].option && null != t.id && n[a].exist.id === t.id + "") return n[a].option = t, void(e[i] = null);
                for (var a = 0; a < n.length; a++) { var r = n[a].exist; if (!(n[a].option || null != r.id && null != t.id || null == t.name || ji(t) || ji(r) || r.name !== t.name + "")) return n[a].option = t, void(e[i] = null) }
            }
        }), Rb(e, function(t) {
            if (Bb(t)) {
                for (var e = 0; e < n.length; e++) { var i = n[e].exist; if (!n[e].option && !ji(i) && null == t.id) { n[e].option = t; break } }
                e >= n.length && n.push({ option: t })
            }
        }), n
    }

    function Yi(t) {
        var e = B();
        Rb(t, function(t) {
            var n = t.exist;
            n && e.set(n.id, t)
        }), Rb(t, function(t) {
            var n = t.option;
            N(!n || null == n.id || !e.get(n.id) || e.get(n.id) === t, "id duplicates: " + (n && n.id)), n && null != n.id && e.set(n.id, t), !t.keyInfo && (t.keyInfo = {})
        }), Rb(t, function(t, n) {
            var i = t.exist,
                a = t.option,
                r = t.keyInfo;
            if (Bb(a)) {
                if (r.name = null != a.name ? a.name + "" : i ? i.name : Gb + n, i) r.id = i.id;
                else if (null != a.id) r.id = a.id + "";
                else {
                    var o = 0;
                    do r.id = "\x00" + r.name + "\x00" + o++; while (e.get(r.id))
                }
                e.set(r.id, t)
            }
        })
    }

    function Ui(t) { var e = t.name; return !(!e || !e.indexOf(Gb)) }

    function ji(t) { return Bb(t) && t.id && 0 === (t.id + "").indexOf("\x00_ec_\x00") }

    function Zi(t, e) { return null != e.dataIndexInside ? e.dataIndexInside : null != e.dataIndex ? _(e.dataIndex) ? g(e.dataIndex, function(e) { return t.indexOfRawIndex(e) }) : t.indexOfRawIndex(e.dataIndex) : null != e.name ? _(e.name) ? g(e.name, function(e) { return t.indexOfName(e) }) : t.indexOfName(e.name) : void 0 }

    function qi() { var t = "__\x00ec_inner_" + Wb++ + "_" + Math.random().toFixed(5); return function(e) { return e[t] || (e[t] = {}) } }

    function Ki(t, e, n) {
        if (b(e)) {
            var i = {};
            i[e + "Index"] = 0, e = i
        }
        var a = n && n.defaultMainType;
        !a || $i(e, a + "Index") || $i(e, a + "Id") || $i(e, a + "Name") || (e[a + "Index"] = 0);
        var r = {};
        return Rb(e, function(i, a) {
            var i = e[a];
            if ("dataIndex" === a || "dataIndexInside" === a) return void(r[a] = i);
            var o = a.match(/^(\w+)(Index|Id|Name)$/) || [],
                s = o[1],
                l = (o[2] || "").toLowerCase();
            if (!(!s || !l || null == i || "index" === l && "none" === i || n && n.includeMainTypes && u(n.includeMainTypes, s) < 0)) {
                var h = { mainType: s };
                ("index" !== l || "all" !== i) && (h[l] = i);
                var c = t.queryComponents(h);
                r[s + "Models"] = c, r[s + "Model"] = c[0]
            }
        }), r
    }

    function $i(t, e) { return t && t.hasOwnProperty(e) }

    function Ji(t, e, n) { t.setAttribute ? t.setAttribute(e, n) : t[e] = n }

    function Qi(t, e) { return t.getAttribute ? t.getAttribute(e) : t[e] }

    function ta(t) { return "auto" === t ? D_.domSupported ? "html" : "richText" : t || "html" }

    function ea(t, e) {
        var n = B(),
            i = [];
        return f(t, function(t) {
            var a = e(t);
            (n.get(a) || (i.push(a), n.set(a, []))).push(t)
        }), { keys: i, buckets: n }
    }

    function na(t) { var e = { main: "", sub: "" }; return t && (t = t.split(Hb), e.main = t[0] || "", e.sub = t[1] || ""), e }

    function ia(t) { N(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(t), 'componentType "' + t + '" illegal') }

    function aa(t) {
        t.$constructor = t, t.extend = function(t) {
            var e = this,
                n = function() { t.$constructor ? t.$constructor.apply(this, arguments) : e.apply(this, arguments) };
            return o(n.prototype, t), n.extend = this.extend, n.superCall = oa, n.superApply = sa, h(n, this), n.superClass = e, n
        }
    }

    function ra(t) {
        var e = ["__\x00is_clz", Yb++, Math.random().toFixed(3)].join("_");
        t.prototype[e] = !0, t.isInstance = function(t) { return !(!t || !t[e]) }
    }

    function oa(t, e) { var n = P(arguments, 2); return this.superClass.prototype[e].apply(t, n) }

    function sa(t, e, n) { return this.superClass.prototype[e].apply(t, n) }

    function la(t, e) {
        function n(t) { var e = i[t.main]; return e && e[Xb] || (e = i[t.main] = {}, e[Xb] = !0), e }
        e = e || {};
        var i = {};
        if (t.registerClass = function(t, e) {
                if (e)
                    if (ia(e), e = na(e), e.sub) {
                        if (e.sub !== Xb) {
                            var a = n(e);
                            a[e.sub] = t
                        }
                    } else i[e.main] = t;
                return t
            }, t.getClass = function(t, e, n) { var a = i[t]; if (a && a[Xb] && (a = e ? a[e] : null), n && !a) throw new Error(e ? "Component " + t + "." + (e || "") + " not exists. Load it first." : t + ".type should be specified."); return a }, t.getClassesByMainType = function(t) {
                t = na(t);
                var e = [],
                    n = i[t.main];
                return n && n[Xb] ? f(n, function(t, n) { n !== Xb && e.push(t) }) : e.push(n), e
            }, t.hasClass = function(t) { return t = na(t), !!i[t.main] }, t.getAllClassMainTypes = function() { var t = []; return f(i, function(e, n) { t.push(n) }), t }, t.hasSubTypes = function(t) { t = na(t); var e = i[t.main]; return e && e[Xb] }, t.parseClassType = na, e.registerWhenExtend) {
            var a = t.extend;
            a && (t.extend = function(e) { var n = a.call(this, e); return t.registerClass(n, e.type) })
        }
        return t
    }

    function ua(t) { return t > -Qb && Qb > t }

    function ha(t) { return t > Qb || -Qb > t }

    function ca(t, e, n, i, a) { var r = 1 - a; return r * r * (r * t + 3 * a * e) + a * a * (a * i + 3 * r * n) }

    function da(t, e, n, i, a) { var r = 1 - a; return 3 * (((e - t) * r + 2 * (n - e) * a) * r + (i - n) * a * a) }

    function fa(t, e, n, i, a, r) {
        var o = i + 3 * (e - n) - t,
            s = 3 * (n - 2 * e + t),
            l = 3 * (e - t),
            u = t - a,
            h = s * s - 3 * o * l,
            c = s * l - 9 * o * u,
            d = l * l - 3 * s * u,
            f = 0;
        if (ua(h) && ua(c))
            if (ua(s)) r[0] = 0;
            else {
                var g = -l / s;
                g >= 0 && 1 >= g && (r[f++] = g)
            }
        else {
            var p = c * c - 4 * h * d;
            if (ua(p)) {
                var m = c / h,
                    g = -s / o + m,
                    v = -m / 2;
                g >= 0 && 1 >= g && (r[f++] = g), v >= 0 && 1 >= v && (r[f++] = v)
            } else if (p > 0) {
                var y = Jb(p),
                    x = h * s + 1.5 * o * (-c + y),
                    _ = h * s + 1.5 * o * (-c - y);
                x = 0 > x ? -$b(-x, nS) : $b(x, nS), _ = 0 > _ ? -$b(-_, nS) : $b(_, nS);
                var g = (-s - (x + _)) / (3 * o);
                g >= 0 && 1 >= g && (r[f++] = g)
            } else {
                var w = (2 * h * s - 3 * o * c) / (2 * Jb(h * h * h)),
                    b = Math.acos(w) / 3,
                    S = Jb(h),
                    I = Math.cos(b),
                    g = (-s - 2 * S * I) / (3 * o),
                    v = (-s + S * (I + eS * Math.sin(b))) / (3 * o),
                    M = (-s + S * (I - eS * Math.sin(b))) / (3 * o);
                g >= 0 && 1 >= g && (r[f++] = g), v >= 0 && 1 >= v && (r[f++] = v), M >= 0 && 1 >= M && (r[f++] = M)
            }
        }
        return f
    }

    function ga(t, e, n, i, a) {
        var r = 6 * n - 12 * e + 6 * t,
            o = 9 * e + 3 * i - 3 * t - 9 * n,
            s = 3 * e - 3 * t,
            l = 0;
        if (ua(o)) {
            if (ha(r)) {
                var u = -s / r;
                u >= 0 && 1 >= u && (a[l++] = u)
            }
        } else {
            var h = r * r - 4 * o * s;
            if (ua(h)) a[0] = -r / (2 * o);
            else if (h > 0) {
                var c = Jb(h),
                    u = (-r + c) / (2 * o),
                    d = (-r - c) / (2 * o);
                u >= 0 && 1 >= u && (a[l++] = u), d >= 0 && 1 >= d && (a[l++] = d)
            }
        }
        return l
    }

    function pa(t, e, n, i, a, r) {
        var o = (e - t) * a + t,
            s = (n - e) * a + e,
            l = (i - n) * a + n,
            u = (s - o) * a + o,
            h = (l - s) * a + s,
            c = (h - u) * a + u;
        r[0] = t, r[1] = o, r[2] = u, r[3] = c, r[4] = c, r[5] = h, r[6] = l, r[7] = i
    }

    function ma(t, e, n, i, a, r, o, s, l, u, h) {
        var c, d, f, g, p, m = .005,
            v = 1 / 0;
        iS[0] = l, iS[1] = u;
        for (var y = 0; 1 > y; y += .05) aS[0] = ca(t, n, a, o, y), aS[1] = ca(e, i, r, s, y), g = Y_(iS, aS), v > g && (c = y, v = g);
        v = 1 / 0;
        for (var x = 0; 32 > x && !(tS > m); x++) d = c - m, f = c + m, aS[0] = ca(t, n, a, o, d), aS[1] = ca(e, i, r, s, d), g = Y_(aS, iS), d >= 0 && v > g ? (c = d, v = g) : (rS[0] = ca(t, n, a, o, f), rS[1] = ca(e, i, r, s, f), p = Y_(rS, iS), 1 >= f && v > p ? (c = f, v = p) : m *= .5);
        return h && (h[0] = ca(t, n, a, o, c), h[1] = ca(e, i, r, s, c)), Jb(v)
    }

    function va(t, e, n, i) { var a = 1 - i; return a * (a * t + 2 * i * e) + i * i * n }

    function ya(t, e, n, i) { return 2 * ((1 - i) * (e - t) + i * (n - e)) }

    function xa(t, e, n, i, a) {
        var r = t - 2 * e + n,
            o = 2 * (e - t),
            s = t - i,
            l = 0;
        if (ua(r)) {
            if (ha(o)) {
                var u = -s / o;
                u >= 0 && 1 >= u && (a[l++] = u)
            }
        } else {
            var h = o * o - 4 * r * s;
            if (ua(h)) {
                var u = -o / (2 * r);
                u >= 0 && 1 >= u && (a[l++] = u)
            } else if (h > 0) {
                var c = Jb(h),
                    u = (-o + c) / (2 * r),
                    d = (-o - c) / (2 * r);
                u >= 0 && 1 >= u && (a[l++] = u), d >= 0 && 1 >= d && (a[l++] = d)
            }
        }
        return l
    }

    function _a(t, e, n) { var i = t + n - 2 * e; return 0 === i ? .5 : (t - e) / i }

    function wa(t, e, n, i, a) {
        var r = (e - t) * i + t,
            o = (n - e) * i + e,
            s = (o - r) * i + r;
        a[0] = t, a[1] = r, a[2] = s, a[3] = s, a[4] = o, a[5] = n
    }

    function ba(t, e, n, i, a, r, o, s, l) {
        var u, h = .005,
            c = 1 / 0;
        iS[0] = o, iS[1] = s;
        for (var d = 0; 1 > d; d += .05) {
            aS[0] = va(t, n, a, d), aS[1] = va(e, i, r, d);
            var f = Y_(iS, aS);
            c > f && (u = d, c = f)
        }
        c = 1 / 0;
        for (var g = 0; 32 > g && !(tS > h); g++) {
            var p = u - h,
                m = u + h;
            aS[0] = va(t, n, a, p), aS[1] = va(e, i, r, p);
            var f = Y_(aS, iS);
            if (p >= 0 && c > f) u = p, c = f;
            else {
                rS[0] = va(t, n, a, m), rS[1] = va(e, i, r, m);
                var v = Y_(rS, iS);
                1 >= m && c > v ? (u = m, c = v) : h *= .5
            }
        }
        return l && (l[0] = va(t, n, a, u), l[1] = va(e, i, r, u)), Jb(c)
    }

    function Sa(t, e, n) {
        if (0 !== t.length) {
            var i, a = t[0],
                r = a[0],
                o = a[0],
                s = a[1],
                l = a[1];
            for (i = 1; i < t.length; i++) a = t[i], r = oS(r, a[0]), o = sS(o, a[0]), s = oS(s, a[1]), l = sS(l, a[1]);
            e[0] = r, e[1] = s, n[0] = o, n[1] = l
        }
    }

    function Ia(t, e, n, i, a, r) { a[0] = oS(t, n), a[1] = oS(e, i), r[0] = sS(t, n), r[1] = sS(e, i) }

    function Ma(t, e, n, i, a, r, o, s, l, u) {
        var h, c = ga,
            d = ca,
            f = c(t, n, a, o, gS);
        for (l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0, h = 0; f > h; h++) {
            var g = d(t, n, a, o, gS[h]);
            l[0] = oS(g, l[0]), u[0] = sS(g, u[0])
        }
        for (f = c(e, i, r, s, pS), h = 0; f > h; h++) {
            var p = d(e, i, r, s, pS[h]);
            l[1] = oS(p, l[1]), u[1] = sS(p, u[1])
        }
        l[0] = oS(t, l[0]), u[0] = sS(t, u[0]), l[0] = oS(o, l[0]), u[0] = sS(o, u[0]), l[1] = oS(e, l[1]), u[1] = sS(e, u[1]), l[1] = oS(s, l[1]), u[1] = sS(s, u[1])
    }

    function Da(t, e, n, i, a, r, o, s) {
        var l = _a,
            u = va,
            h = sS(oS(l(t, n, a), 1), 0),
            c = sS(oS(l(e, i, r), 1), 0),
            d = u(t, n, a, h),
            f = u(e, i, r, c);
        o[0] = oS(t, a, d), o[1] = oS(e, r, f), s[0] = sS(t, a, d), s[1] = sS(e, r, f)
    }

    function Ta(t, e, n, i, a, r, o, s, l) {
        var u = oe,
            h = se,
            c = Math.abs(a - r);
        if (1e-4 > c % hS && c > 1e-4) return s[0] = t - n, s[1] = e - i, l[0] = t + n, void(l[1] = e + i);
        if (cS[0] = uS(a) * n + t, cS[1] = lS(a) * i + e, dS[0] = uS(r) * n + t, dS[1] = lS(r) * i + e, u(s, cS, dS), h(l, cS, dS), a %= hS, 0 > a && (a += hS), r %= hS, 0 > r && (r += hS), a > r && !o ? r += hS : r > a && o && (a += hS), o) {
            var d = r;
            r = a, a = d
        }
        for (var f = 0; r > f; f += Math.PI / 2) f > a && (fS[0] = uS(f) * n + t, fS[1] = lS(f) * i + e, u(s, fS, s), h(l, fS, l))
    }

    function Aa(t, e, n, i, a, r, o) {
        if (0 === a) return !1;
        var s = a,
            l = 0,
            u = t;
        if (o > e + s && o > i + s || e - s > o && i - s > o || r > t + s && r > n + s || t - s > r && n - s > r) return !1;
        if (t === n) return Math.abs(r - t) <= s / 2;
        l = (e - i) / (t - n), u = (t * i - n * e) / (t - n);
        var h = l * r - o + u,
            c = h * h / (l * l + 1);
        return s / 2 * s / 2 >= c
    }

    function Ca(t, e, n, i, a, r, o, s, l, u, h) { if (0 === l) return !1; var c = l; if (h > e + c && h > i + c && h > r + c && h > s + c || e - c > h && i - c > h && r - c > h && s - c > h || u > t + c && u > n + c && u > a + c && u > o + c || t - c > u && n - c > u && a - c > u && o - c > u) return !1; var d = ma(t, e, n, i, a, r, o, s, u, h, null); return c / 2 >= d }

    function La(t, e, n, i, a, r, o, s, l) { if (0 === o) return !1; var u = o; if (l > e + u && l > i + u && l > r + u || e - u > l && i - u > l && r - u > l || s > t + u && s > n + u && s > a + u || t - u > s && n - u > s && a - u > s) return !1; var h = ba(t, e, n, i, a, r, s, l, null); return u / 2 >= h }

    function Pa(t) { return t %= CS, 0 > t && (t += CS), t }

    function ka(t, e, n, i, a, r, o, s, l) {
        if (0 === o) return !1;
        var u = o;
        s -= t, l -= e;
        var h = Math.sqrt(s * s + l * l);
        if (h - u > n || n > h + u) return !1;
        if (Math.abs(i - a) % LS < 1e-4) return !0;
        if (r) {
            var c = i;
            i = Pa(a), a = Pa(c)
        } else i = Pa(i), a = Pa(a);
        i > a && (a += LS);
        var d = Math.atan2(l, s);
        return 0 > d && (d += LS), d >= i && a >= d || d + LS >= i && a >= d + LS
    }

    function Na(t, e, n, i, a, r) {
        if (r > e && r > i || e > r && i > r) return 0;
        if (i === e) return 0;
        var o = e > i ? 1 : -1,
            s = (r - e) / (i - e);
        (1 === s || 0 === s) && (o = e > i ? .5 : -.5);
        var l = s * (n - t) + t;
        return l === a ? 1 / 0 : l > a ? o : 0
    }

    function Oa(t, e) { return Math.abs(t - e) < NS }

    function Ea() {
        var t = ES[0];
        ES[0] = ES[1], ES[1] = t
    }

    function za(t, e, n, i, a, r, o, s, l, u) {
        if (u > e && u > i && u > r && u > s || e > u && i > u && r > u && s > u) return 0;
        var h = fa(e, i, r, s, u, OS);
        if (0 === h) return 0;
        for (var c, d, f = 0, g = -1, p = 0; h > p; p++) {
            var m = OS[p],
                v = 0 === m || 1 === m ? .5 : 1,
                y = ca(t, n, a, o, m);
            l > y || (0 > g && (g = ga(e, i, r, s, ES), ES[1] < ES[0] && g > 1 && Ea(), c = ca(e, i, r, s, ES[0]), g > 1 && (d = ca(e, i, r, s, ES[1]))), f += 2 === g ? m < ES[0] ? e > c ? v : -v : m < ES[1] ? c > d ? v : -v : d > s ? v : -v : m < ES[0] ? e > c ? v : -v : c > s ? v : -v)
        }
        return f
    }

    function Ra(t, e, n, i, a, r, o, s) {
        if (s > e && s > i && s > r || e > s && i > s && r > s) return 0;
        var l = xa(e, i, r, s, OS);
        if (0 === l) return 0;
        var u = _a(e, i, r);
        if (u >= 0 && 1 >= u) {
            for (var h = 0, c = va(e, i, r, u), d = 0; l > d; d++) {
                var f = 0 === OS[d] || 1 === OS[d] ? .5 : 1,
                    g = va(t, n, a, OS[d]);
                o > g || (h += OS[d] < u ? e > c ? f : -f : c > r ? f : -f)
            }
            return h
        }
        var f = 0 === OS[0] || 1 === OS[0] ? .5 : 1,
            g = va(t, n, a, OS[0]);
        return o > g ? 0 : e > r ? f : -f
    }

    function Ba(t, e, n, i, a, r, o, s) {
        if (s -= e, s > n || -n > s) return 0;
        var l = Math.sqrt(n * n - s * s);
        OS[0] = -l, OS[1] = l;
        var u = Math.abs(i - a);
        if (1e-4 > u) return 0;
        if (1e-4 > u % kS) { i = 0, a = kS; var h = r ? 1 : -1; return o >= OS[0] + t && o <= OS[1] + t ? h : 0 }
        if (r) {
            var l = i;
            i = Pa(a), a = Pa(l)
        } else i = Pa(i), a = Pa(a);
        i > a && (a += kS);
        for (var c = 0, d = 0; 2 > d; d++) {
            var f = OS[d];
            if (f + t > o) {
                var g = Math.atan2(s, f),
                    h = r ? 1 : -1;
                0 > g && (g = kS + g), (g >= i && a >= g || g + kS >= i && a >= g + kS) && (g > Math.PI / 2 && g < 1.5 * Math.PI && (h = -h), c += h)
            }
        }
        return c
    }

    function Va(t, e, n, i, a) {
        for (var r = 0, o = 0, s = 0, l = 0, u = 0, h = 0; h < t.length;) {
            var c = t[h++];
            switch (c === PS.M && h > 1 && (n || (r += Na(o, s, l, u, i, a))), 1 === h && (o = t[h], s = t[h + 1], l = o, u = s), c) {
                case PS.M:
                    l = t[h++], u = t[h++], o = l, s = u;
                    break;
                case PS.L:
                    if (n) { if (Aa(o, s, t[h], t[h + 1], e, i, a)) return !0 } else r += Na(o, s, t[h], t[h + 1], i, a) || 0;
                    o = t[h++], s = t[h++];
                    break;
                case PS.C:
                    if (n) { if (Ca(o, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], e, i, a)) return !0 } else r += za(o, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], i, a) || 0;
                    o = t[h++], s = t[h++];
                    break;
                case PS.Q:
                    if (n) { if (La(o, s, t[h++], t[h++], t[h], t[h + 1], e, i, a)) return !0 } else r += Ra(o, s, t[h++], t[h++], t[h], t[h + 1], i, a) || 0;
                    o = t[h++], s = t[h++];
                    break;
                case PS.A:
                    var d = t[h++],
                        f = t[h++],
                        g = t[h++],
                        p = t[h++],
                        m = t[h++],
                        v = t[h++];
                    h += 1;
                    var y = 1 - t[h++],
                        x = Math.cos(m) * g + d,
                        _ = Math.sin(m) * p + f;
                    h > 1 ? r += Na(o, s, x, _, i, a) : (l = x, u = _);
                    var w = (i - d) * p / g + d;
                    if (n) { if (ka(d, f, p, m, m + v, y, e, w, a)) return !0 } else r += Ba(d, f, p, m, m + v, y, w, a);
                    o = Math.cos(m + v) * g + d, s = Math.sin(m + v) * p + f;
                    break;
                case PS.R:
                    l = o = t[h++], u = s = t[h++];
                    var b = t[h++],
                        S = t[h++],
                        x = l + b,
                        _ = u + S;
                    if (n) { if (Aa(l, u, x, u, e, i, a) || Aa(x, u, x, _, e, i, a) || Aa(x, _, l, _, e, i, a) || Aa(l, _, l, u, e, i, a)) return !0 } else r += Na(x, u, x, _, i, a), r += Na(l, _, l, u, i, a);
                    break;
                case PS.Z:
                    if (n) { if (Aa(o, s, l, u, e, i, a)) return !0 } else r += Na(o, s, l, u, i, a);
                    o = l, s = u
            }
        }
        return n || Oa(s, u) || (r += Na(o, s, l, u, i, a) || 0), 0 !== r
    }

    function Ga(t, e, n) { return Va(t, 0, !1, e, n) }

    function Fa(t, e, n, i) { return Va(t, e, !0, n, i) }

    function Wa(t) { bi.call(this, t), this.path = null }

    function Ha(t, e, n, i, a, r, o, s, l, u, h) {
        var c = l * (jS / 180),
            d = US(c) * (t - n) / 2 + YS(c) * (e - i) / 2,
            f = -1 * YS(c) * (t - n) / 2 + US(c) * (e - i) / 2,
            g = d * d / (o * o) + f * f / (s * s);
        g > 1 && (o *= XS(g), s *= XS(g));
        var p = (a === r ? -1 : 1) * XS((o * o * s * s - o * o * f * f - s * s * d * d) / (o * o * f * f + s * s * d * d)) || 0,
            m = p * o * f / s,
            v = p * -s * d / o,
            y = (t + n) / 2 + US(c) * m - YS(c) * v,
            x = (e + i) / 2 + YS(c) * m + US(c) * v,
            _ = KS([1, 0], [(d - m) / o, (f - v) / s]),
            w = [(d - m) / o, (f - v) / s],
            b = [(-1 * d - m) / o, (-1 * f - v) / s],
            S = KS(w, b);
        qS(w, b) <= -1 && (S = jS), qS(w, b) >= 1 && (S = 0), 0 === r && S > 0 && (S -= 2 * jS), 1 === r && 0 > S && (S += 2 * jS), h.addData(u, y, x, o, s, _, S, c, r)
    }

    function Xa(t) {
        if (!t) return new AS;
        for (var e, n = 0, i = 0, a = n, r = i, o = new AS, s = AS.CMD, l = t.match($S), u = 0; u < l.length; u++) {
            for (var h, c = l[u], d = c.charAt(0), f = c.match(JS) || [], g = f.length, p = 0; g > p; p++) f[p] = parseFloat(f[p]);
            for (var m = 0; g > m;) {
                var v, y, x, _, w, b, S, I = n,
                    M = i;
                switch (d) {
                    case "l":
                        n += f[m++], i += f[m++], h = s.L, o.addData(h, n, i);
                        break;
                    case "L":
                        n = f[m++], i = f[m++], h = s.L, o.addData(h, n, i);
                        break;
                    case "m":
                        n += f[m++], i += f[m++], h = s.M, o.addData(h, n, i), a = n, r = i, d = "l";
                        break;
                    case "M":
                        n = f[m++], i = f[m++], h = s.M, o.addData(h, n, i), a = n, r = i, d = "L";
                        break;
                    case "h":
                        n += f[m++], h = s.L, o.addData(h, n, i);
                        break;
                    case "H":
                        n = f[m++], h = s.L, o.addData(h, n, i);
                        break;
                    case "v":
                        i += f[m++], h = s.L, o.addData(h, n, i);
                        break;
                    case "V":
                        i = f[m++], h = s.L, o.addData(h, n, i);
                        break;
                    case "C":
                        h = s.C, o.addData(h, f[m++], f[m++], f[m++], f[m++], f[m++], f[m++]), n = f[m - 2], i = f[m - 1];
                        break;
                    case "c":
                        h = s.C, o.addData(h, f[m++] + n, f[m++] + i, f[m++] + n, f[m++] + i, f[m++] + n, f[m++] + i), n += f[m - 2], i += f[m - 1];
                        break;
                    case "S":
                        v = n, y = i;
                        var D = o.len(),
                            T = o.data;
                        e === s.C && (v += n - T[D - 4], y += i - T[D - 3]), h = s.C, I = f[m++], M = f[m++], n = f[m++], i = f[m++], o.addData(h, v, y, I, M, n, i);
                        break;
                    case "s":
                        v = n, y = i;
                        var D = o.len(),
                            T = o.data;
                        e === s.C && (v += n - T[D - 4], y += i - T[D - 3]), h = s.C, I = n + f[m++], M = i + f[m++], n += f[m++], i += f[m++], o.addData(h, v, y, I, M, n, i);
                        break;
                    case "Q":
                        I = f[m++], M = f[m++], n = f[m++], i = f[m++], h = s.Q, o.addData(h, I, M, n, i);
                        break;
                    case "q":
                        I = f[m++] + n, M = f[m++] + i, n += f[m++], i += f[m++], h = s.Q, o.addData(h, I, M, n, i);
                        break;
                    case "T":
                        v = n, y = i;
                        var D = o.len(),
                            T = o.data;
                        e === s.Q && (v += n - T[D - 4], y += i - T[D - 3]), n = f[m++], i = f[m++], h = s.Q, o.addData(h, v, y, n, i);
                        break;
                    case "t":
                        v = n, y = i;
                        var D = o.len(),
                            T = o.data;
                        e === s.Q && (v += n - T[D - 4], y += i - T[D - 3]), n += f[m++], i += f[m++], h = s.Q, o.addData(h, v, y, n, i);
                        break;
                    case "A":
                        x = f[m++], _ = f[m++], w = f[m++], b = f[m++], S = f[m++], I = n, M = i, n = f[m++], i = f[m++], h = s.A, Ha(I, M, n, i, b, S, x, _, w, h, o);
                        break;
                    case "a":
                        x = f[m++], _ = f[m++], w = f[m++], b = f[m++], S = f[m++], I = n, M = i, n += f[m++], i += f[m++], h = s.A, Ha(I, M, n, i, b, S, x, _, w, h, o)
                }
            }("z" === d || "Z" === d) && (h = s.Z, o.addData(h), n = a, i = r), e = h
        }
        return o.toStatic(), o
    }

    function Ya(t, e) {
        var n = Xa(t);
        return e = e || {}, e.buildPath = function(t) {
            if (t.setData) {
                t.setData(n.data);
                var e = t.getContext();
                e && t.rebuildPath(e)
            } else {
                var e = t;
                n.rebuildPath(e)
            }
        }, e.applyTransform = function(t) { HS(n, t), this.dirty(!0) }, e
    }

    function Ua(t, e) { return new Wa(Ya(t, e)) }

    function ja(t, e) { return Wa.extend(Ya(t, e)) }

    function Za(t, e) {
        for (var n = [], i = t.length, a = 0; i > a; a++) {
            var r = t[a];
            r.path || r.createPathProxy(), r.__dirtyPath && r.buildPath(r.path, r.shape, !0), n.push(r.path)
        }
        var o = new Wa(e);
        return o.createPathProxy(), o.buildPath = function(t) {
            t.appendPath(n);
            var e = t.getContext();
            e && t.rebuildPath(e)
        }, o
    }

    function qa(t, e, n, i, a, r, o) {
        var s = .5 * (n - t),
            l = .5 * (i - e);
        return (2 * (e - n) + s + l) * o + (-3 * (e - n) - 2 * s - l) * r + s * a + e
    }

    function Ka(t, e, n) {
        var i = e.points,
            a = e.smooth;
        if (i && i.length >= 2) {
            if (a && "spline" !== a) {
                var r = oI(i, a, n, e.smoothConstraint);
                t.moveTo(i[0][0], i[0][1]);
                for (var o = i.length, s = 0;
                    (n ? o : o - 1) > s; s++) {
                    var l = r[2 * s],
                        u = r[2 * s + 1],
                        h = i[(s + 1) % o];
                    t.bezierCurveTo(l[0], l[1], u[0], u[1], h[0], h[1])
                }
            } else { "spline" === a && (i = rI(i, n)), t.moveTo(i[0][0], i[0][1]); for (var s = 1, c = i.length; c > s; s++) t.lineTo(i[s][0], i[s][1]) }
            n && t.closePath()
        }
    }

    function $a(t, e, n) {
        var i = n && n.lineWidth;
        if (e && i) {
            var a = e.x1,
                r = e.x2,
                o = e.y1,
                s = e.y2;
            uI(2 * a) === uI(2 * r) ? t.x1 = t.x2 = Qa(a, i, !0) : (t.x1 = a, t.x2 = r), uI(2 * o) === uI(2 * s) ? t.y1 = t.y2 = Qa(o, i, !0) : (t.y1 = o, t.y2 = s)
        }
    }

    function Ja(t, e, n) {
        var i = n && n.lineWidth;
        if (e && i) {
            var a = e.x,
                r = e.y,
                o = e.width,
                s = e.height;
            t.x = Qa(a, i, !0), t.y = Qa(r, i, !0), t.width = Math.max(Qa(a + o, i, !1) - t.x, 0 === o ? 0 : 1), t.height = Math.max(Qa(r + s, i, !1) - t.y, 0 === s ? 0 : 1)
        }
    }

    function Qa(t, e, n) { var i = uI(2 * t); return (i + uI(e)) % 2 === 0 ? i / 2 : (i + (n ? 1 : -1)) / 2 }

    function tr(t, e, n) {
        var i = t.cpx2,
            a = t.cpy2;
        return null === i || null === a ? [(n ? da : ca)(t.x1, t.cpx1, t.cpx2, t.x2, e), (n ? da : ca)(t.y1, t.cpy1, t.cpy2, t.y2, e)] : [(n ? ya : va)(t.x1, t.cpx1, t.x2, e), (n ? ya : va)(t.y1, t.cpy1, t.y2, e)]
    }

    function er(t) { bi.call(this, t), this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.notClear = !0 }

    function nr(t) { return Wa.extend(t) }

    function ir(t, e) { return ja(t, e) }

    function ar(t, e) { PI[t] = e }

    function rr(t) { return PI.hasOwnProperty(t) ? PI[t] : void 0 }

    function or(t, e, n, i) { var a = Ua(t, e); return n && ("center" === i && (n = lr(n, a.getBoundingRect())), ur(a, n)), a }

    function sr(t, e, n) {
        var i = new Si({
            style: { image: t, x: e.x, y: e.y, width: e.width, height: e.height },
            onload: function(t) {
                if ("center" === n) {
                    var a = { width: t.width, height: t.height };
                    i.setStyle(lr(e, a))
                }
            }
        });
        return i
    }

    function lr(t, e) {
        var n, i = e.width / e.height,
            a = t.height * i;
        a <= t.width ? n = t.height : (a = t.width, n = a / i);
        var r = t.x + t.width / 2,
            o = t.y + t.height / 2;
        return { x: r - a / 2, y: o - n / 2, width: a, height: n }
    }

    function ur(t, e) {
        if (t.applyTransform) {
            var n = t.getBoundingRect(),
                i = n.calculateTransform(e);
            t.applyTransform(i)
        }
    }

    function hr(t) { return $a(t.shape, t.shape, t.style), t }

    function cr(t) { return Ja(t.shape, t.shape, t.style), t }

    function dr(t) { return null != t && "none" !== t }

    function fr(t) { if ("string" != typeof t) return t; var e = OI.get(t); return e || (e = Je(t, -.1), 1e4 > EI && (OI.set(t, e), EI++)), e }

    function gr(t) {
        if (t.__hoverStlDirty) {
            t.__hoverStlDirty = !1;
            var e = t.__hoverStl;
            if (!e) return void(t.__cachedNormalStl = t.__cachedNormalZ2 = null);
            var n = t.__cachedNormalStl = {};
            t.__cachedNormalZ2 = t.z2;
            var i = t.style;
            for (var a in e) null != e[a] && (n[a] = i[a]);
            n.fill = i.fill, n.stroke = i.stroke
        }
    }

    function pr(t) {
        var e = t.__hoverStl;
        if (e && !t.__highlighted) {
            var n = t.__zr,
                i = t.useHoverLayer && n && "canvas" === n.painter.type;
            if (t.__highlighted = i ? "layer" : "plain", !(t.isGroup || !n && t.useHoverLayer)) {
                var a = t,
                    r = t.style;
                i && (a = n.addHover(t), r = a.style), Br(r), i || gr(a), r.extendFrom(e), mr(r, e, "fill"), mr(r, e, "stroke"), Rr(r), i || (t.dirty(!1), t.z2 += MI)
            }
        }
    }

    function mr(t, e, n) {!dr(e[n]) && dr(t[n]) && (t[n] = fr(t[n])) }

    function vr(t) {
        var e = t.__highlighted;
        if (e && (t.__highlighted = !1, !t.isGroup))
            if ("layer" === e) t.__zr && t.__zr.removeHover(t);
            else {
                var n = t.style,
                    i = t.__cachedNormalStl;
                i && (Br(n), t.setStyle(i), Rr(n));
                var a = t.__cachedNormalZ2;
                null != a && t.z2 - a === MI && (t.z2 = a)
            }
    }

    function yr(t, e, n) {
        var i, a = AI,
            r = AI;
        t.__highlighted && (a = TI, i = !0), e(t, n), t.__highlighted && (r = TI, i = !0), t.isGroup && t.traverse(function(t) {!t.isGroup && e(t, n) }), i && t.__highDownOnUpdate && t.__highDownOnUpdate(a, r)
    }

    function xr(t, e) { e = t.__hoverStl = e !== !1 && (t.hoverStyle || e || {}), t.__hoverStlDirty = !0, t.__highlighted && (t.__cachedNormalStl = null, vr(t), pr(t)) }

    function _r(t) {!Ir(this, t) && !this.__highByOuter && yr(this, pr) }

    function wr(t) {!Ir(this, t) && !this.__highByOuter && yr(this, vr) }

    function br(t) { this.__highByOuter |= 1 << (t || 0), yr(this, pr) }

    function Sr(t) {!(this.__highByOuter &= ~(1 << (t || 0))) && yr(this, vr) }

    function Ir(t, e) { return t.__highDownSilentOnTouch && e.zrByTouch }

    function Mr(t, e) { Dr(t, !0), yr(t, xr, e) }

    function Dr(t, e) {
        var n = e === !1;
        if (t.__highDownSilentOnTouch = t.highDownSilentOnTouch, t.__highDownOnUpdate = t.highDownOnUpdate, !n || t.__highDownDispatcher) {
            var i = n ? "off" : "on";
            t[i]("mouseover", _r)[i]("mouseout", wr), t[i]("emphasis", br)[i]("normal", Sr), t.__highByOuter = t.__highByOuter || 0, t.__highDownDispatcher = !n
        }
    }

    function Tr(t) { return !(!t || !t.__highDownDispatcher) }

    function Ar(t) { var e = LI[t]; return null == e && 32 >= CI && (e = LI[t] = CI++), e }

    function Cr(t, e, n, i, a, r, o) {
        a = a || II;
        var s, l = a.labelFetcher,
            u = a.labelDataIndex,
            h = a.labelDimIndex,
            c = n.getShallow("show"),
            d = i.getShallow("show");
        (c || d) && (l && (s = l.getFormattedLabel(u, "normal", null, h)), null == s && (s = w(a.defaultText) ? a.defaultText(u, a) : a.defaultText));
        var f = c ? s : null,
            g = d ? C(l ? l.getFormattedLabel(u, "emphasis", null, h) : null, s) : null;
        (null != f || null != g) && (Pr(t, n, r, a), Pr(e, i, o, a, !0)), t.text = f, e.text = g
    }

    function Lr(t, e, n) {
        var i = t.style;
        e && (Br(i), t.setStyle(e), Rr(i)), i = t.__hoverStl, n && i && (Br(i), o(i, n), Rr(i))
    }

    function Pr(t, e, n, i, a) { return Nr(t, e, i, a), n && o(t, n), t }

    function kr(t, e, n) {
        var i, a = { isRectText: !0 };
        n === !1 ? i = !0 : a.autoColor = n, Nr(t, e, a, i)
    }

    function Nr(t, e, n, i) {
        if (n = n || II, n.isRectText) {
            var a;
            n.getTextPosition ? a = n.getTextPosition(e, i) : (a = e.getShallow("position") || (i ? null : "inside"), "outside" === a && (a = "top")), t.textPosition = a, t.textOffset = e.getShallow("offset");
            var r = e.getShallow("rotate");
            null != r && (r *= Math.PI / 180), t.textRotation = r, t.textDistance = C(e.getShallow("distance"), i ? null : 5)
        }
        var o, s = e.ecModel,
            l = s && s.option.textStyle,
            u = Or(e);
        if (u) {
            o = {};
            for (var h in u)
                if (u.hasOwnProperty(h)) {
                    var c = e.getModel(["rich", h]);
                    Er(o[h] = {}, c, l, n, i)
                }
        }
        return t.rich = o, Er(t, e, l, n, i, !0), n.forceRich && !n.textStyle && (n.textStyle = {}), t
    }

    function Or(t) {
        for (var e; t && t !== t.ecModel;) {
            var n = (t.option || II).rich;
            if (n) { e = e || {}; for (var i in n) n.hasOwnProperty(i) && (e[i] = 1) }
            t = t.parentModel
        }
        return e
    }

    function Er(t, e, n, i, a, r) { n = !a && n || II, t.textFill = zr(e.getShallow("color"), i) || n.color, t.textStroke = zr(e.getShallow("textBorderColor"), i) || n.textBorderColor, t.textStrokeWidth = C(e.getShallow("textBorderWidth"), n.textBorderWidth), a || (r && (t.insideRollbackOpt = i, Rr(t)), null == t.textFill && (t.textFill = i.autoColor)), t.fontStyle = e.getShallow("fontStyle") || n.fontStyle, t.fontWeight = e.getShallow("fontWeight") || n.fontWeight, t.fontSize = e.getShallow("fontSize") || n.fontSize, t.fontFamily = e.getShallow("fontFamily") || n.fontFamily, t.textAlign = e.getShallow("align"), t.textVerticalAlign = e.getShallow("verticalAlign") || e.getShallow("baseline"), t.textLineHeight = e.getShallow("lineHeight"), t.textWidth = e.getShallow("width"), t.textHeight = e.getShallow("height"), t.textTag = e.getShallow("tag"), r && i.disableBox || (t.textBackgroundColor = zr(e.getShallow("backgroundColor"), i), t.textPadding = e.getShallow("padding"), t.textBorderColor = zr(e.getShallow("borderColor"), i), t.textBorderWidth = e.getShallow("borderWidth"), t.textBorderRadius = e.getShallow("borderRadius"), t.textBoxShadowColor = e.getShallow("shadowColor"), t.textBoxShadowBlur = e.getShallow("shadowBlur"), t.textBoxShadowOffsetX = e.getShallow("shadowOffsetX"), t.textBoxShadowOffsetY = e.getShallow("shadowOffsetY")), t.textShadowColor = e.getShallow("textShadowColor") || n.textShadowColor, t.textShadowBlur = e.getShallow("textShadowBlur") || n.textShadowBlur, t.textShadowOffsetX = e.getShallow("textShadowOffsetX") || n.textShadowOffsetX, t.textShadowOffsetY = e.getShallow("textShadowOffsetY") || n.textShadowOffsetY }

    function zr(t, e) { return "auto" !== t ? t : e && e.autoColor ? e.autoColor : null }

    function Rr(t) {
        var e, n = t.textPosition,
            i = t.insideRollbackOpt;
        if (i && null == t.textFill) {
            var a = i.autoColor,
                r = i.isRectText,
                o = i.useInsideStyle,
                s = o !== !1 && (o === !0 || r && n && "string" == typeof n && n.indexOf("inside") >= 0),
                l = !s && null != a;
            (s || l) && (e = { textFill: t.textFill, textStroke: t.textStroke, textStrokeWidth: t.textStrokeWidth }), s && (t.textFill = "#fff", null == t.textStroke && (t.textStroke = a, null == t.textStrokeWidth && (t.textStrokeWidth = 2))), l && (t.textFill = a)
        }
        t.insideRollback = e
    }

    function Br(t) {
        var e = t.insideRollback;
        e && (t.textFill = e.textFill, t.textStroke = e.textStroke, t.textStrokeWidth = e.textStrokeWidth, t.insideRollback = null)
    }

    function Vr(t, e) { var n = e || e.getModel("textStyle"); return O([t.fontStyle || n && n.getShallow("fontStyle") || "", t.fontWeight || n && n.getShallow("fontWeight") || "", (t.fontSize || n && n.getShallow("fontSize") || 12) + "px", t.fontFamily || n && n.getShallow("fontFamily") || "sans-serif"].join(" ")) }

    function Gr(t, e, n, i, a, r) {
        "function" == typeof a && (r = a, a = null);
        var o = i && i.isAnimationEnabled();
        if (o) {
            var s = t ? "Update" : "",
                l = i.getShallow("animationDuration" + s),
                u = i.getShallow("animationEasing" + s),
                h = i.getShallow("animationDelay" + s);
            "function" == typeof h && (h = h(a, i.getAnimationDelayParams ? i.getAnimationDelayParams(e, a) : null)), "function" == typeof l && (l = l(a)), l > 0 ? e.animateTo(n, l, h || 0, u, r, !!r) : (e.stopAnimation(), e.attr(n), r && r())
        } else e.stopAnimation(), e.attr(n), r && r()
    }

    function Fr(t, e, n, i, a) { Gr(!0, t, e, n, i, a) }

    function Wr(t, e, n, i, a) { Gr(!1, t, e, n, i, a) }

    function Hr(t, e) { for (var n = Ce([]); t && t !== e;) Pe(n, t.getLocalTransform(), n), t = t.parent; return n }

    function Xr(t, e, n) { return e && !d(e) && (e = hw.getLocalTransform(e)), n && (e = Ee([], e)), re([], t, e) }

    function Yr(t, e, n) {
        var i = 0 === e[4] || 0 === e[5] || 0 === e[0] ? 1 : Math.abs(2 * e[4] / e[0]),
            a = 0 === e[4] || 0 === e[5] || 0 === e[2] ? 1 : Math.abs(2 * e[4] / e[2]),
            r = ["left" === t ? -i : "right" === t ? i : 0, "top" === t ? -a : "bottom" === t ? a : 0];
        return r = Xr(r, e, n), Math.abs(r[0]) > Math.abs(r[1]) ? r[0] > 0 ? "right" : "left" : r[1] > 0 ? "bottom" : "top"
    }

    function Ur(t, e, n) {
        function i(t) { var e = {}; return t.traverse(function(t) {!t.isGroup && t.anid && (e[t.anid] = t) }), e }

        function a(t) { var e = { position: H(t.position), rotation: t.rotation }; return t.shape && (e.shape = o({}, t.shape)), e }
        if (t && e) {
            var r = i(t);
            e.traverse(function(t) {
                if (!t.isGroup && t.anid) {
                    var e = r[t.anid];
                    if (e) {
                        var i = a(t);
                        t.attr(a(e)), Fr(t, i, n, t.dataIndex)
                    }
                }
            })
        }
    }

    function jr(t, e) {
        return g(t, function(t) {
            var n = t[0];
            n = bI(n, e.x), n = SI(n, e.x + e.width);
            var i = t[1];
            return i = bI(i, e.y), i = SI(i, e.y + e.height), [n, i]
        })
    }

    function Zr(t, e) {
        var n = bI(t.x, e.x),
            i = SI(t.x + t.width, e.x + e.width),
            a = bI(t.y, e.y),
            r = SI(t.y + t.height, e.y + e.height);
        return i >= n && r >= a ? { x: n, y: a, width: i - n, height: r - a } : void 0
    }

    function qr(t, e, n) { e = o({ rectHover: !0 }, e); var i = e.style = { strokeNoScale: !0 }; return n = n || { x: -1, y: -1, width: 2, height: 2 }, t ? 0 === t.indexOf("image://") ? (i.image = t.slice(8), s(i, n), new Si(e)) : or(t.replace("path://", ""), e, n, "center") : void 0 }

    function Kr(t, e, n, i, a) {
        for (var r = 0, o = a[a.length - 1]; r < a.length; r++) {
            var s = a[r];
            if ($r(t, e, n, i, s[0], s[1], o[0], o[1])) return !0;
            o = s
        }
    }

    function $r(t, e, n, i, a, r, o, s) {
        var l = n - t,
            u = i - e,
            h = o - a,
            c = s - r,
            d = Jr(h, c, l, u);
        if (Qr(d)) return !1;
        var f = t - a,
            g = e - r,
            p = Jr(f, g, l, u) / d;
        if (0 > p || p > 1) return !1;
        var m = Jr(f, g, h, c) / d;
        return 0 > m || m > 1 ? !1 : !0
    }

    function Jr(t, e, n, i) { return t * i - n * e }

    function Qr(t) { return 1e-6 >= t && t >= -1e-6 }

    function to(t, e, n) { this.parentModel = e, this.ecModel = n, this.option = t }

    function eo(t, e, n) { for (var i = 0; i < e.length && (!e[i] || (t = t && "object" == typeof t ? t[e[i]] : null, null != t)); i++); return null == t && n && (t = n.get(e)), t }

    function no(t, e) { var n = WI(t).getParent; return n ? n.call(t, e) : t.parentModel }

    function io(t) { return [t || "", HI++, Math.random().toFixed(5)].join("_") }

    function ao(t) {
        var e = {};
        return t.registerSubTypeDefaulter = function(t, n) { t = na(t), e[t.main] = n }, t.determineSubType = function(n, i) {
            var a = i.type;
            if (!a) {
                var r = na(n).main;
                t.hasSubTypes(n) && e[r] && (a = e[r](i))
            }
            return a
        }, t
    }

    function ro(t, e) {
        function n(t) {
            var n = {},
                r = [];
            return f(t, function(o) {
                var s = i(n, o),
                    l = s.originalDeps = e(o),
                    h = a(l, t);
                s.entryCount = h.length, 0 === s.entryCount && r.push(o), f(h, function(t) {
                    u(s.predecessor, t) < 0 && s.predecessor.push(t);
                    var e = i(n, t);
                    u(e.successor, t) < 0 && e.successor.push(o)
                })
            }), { graph: n, noEntryList: r }
        }

        function i(t, e) { return t[e] || (t[e] = { predecessor: [], successor: [] }), t[e] }

        function a(t, e) { var n = []; return f(t, function(t) { u(e, t) >= 0 && n.push(t) }), n }
        t.topologicalTravel = function(t, e, i, a) {
            function r(t) { l[t].entryCount--, 0 === l[t].entryCount && u.push(t) }

            function o(t) { h[t] = !0, r(t) }
            if (t.length) {
                var s = n(e),
                    l = s.graph,
                    u = s.noEntryList,
                    h = {};
                for (f(t, function(t) { h[t] = !0 }); u.length;) {
                    var c = u.pop(),
                        d = l[c],
                        g = !!h[c];
                    g && (i.call(a, c, d.originalDeps.slice()), delete h[c]), f(d.successor, g ? o : r)
                }
                f(h, function() { throw new Error("Circle dependency may exists") })
            }
        }
    }

    function oo(t) { return t.replace(/^\s+|\s+$/g, "") }

    function so(t, e, n, i) {
        var a = e[1] - e[0],
            r = n[1] - n[0];
        if (0 === a) return 0 === r ? n[0] : (n[0] + n[1]) / 2;
        if (i)
            if (a > 0) { if (t <= e[0]) return n[0]; if (t >= e[1]) return n[1] } else { if (t >= e[0]) return n[0]; if (t <= e[1]) return n[1] }
        else { if (t === e[0]) return n[0]; if (t === e[1]) return n[1] }
        return (t - e[0]) / a * r + n[0]
    }

    function lo(t, e) {
        switch (t) {
            case "center":
            case "middle":
                t = "50%";
                break;
            case "left":
            case "top":
                t = "0%";
                break;
            case "right":
            case "bottom":
                t = "100%"
        }
        return "string" == typeof t ? oo(t).match(/%$/) ? parseFloat(t) / 100 * e : parseFloat(t) : null == t ? 0 / 0 : +t
    }

    function uo(t, e, n) { return null == e && (e = 10), e = Math.min(Math.max(0, e), 20), t = (+t).toFixed(e), n ? t : +t }

    function ho(t) {
        return t.sort(function(t, e) {
            return t - e
        }), t
    }

    function co(t) { if (t = +t, isNaN(t)) return 0; for (var e = 1, n = 0; Math.round(t * e) / e !== t;) e *= 10, n++; return n }

    function fo(t) {
        var e = t.toString(),
            n = e.indexOf("e");
        if (n > 0) { var i = +e.slice(n + 1); return 0 > i ? -i : 0 }
        var a = e.indexOf(".");
        return 0 > a ? 0 : e.length - 1 - a
    }

    function go(t, e) {
        var n = Math.log,
            i = Math.LN10,
            a = Math.floor(n(t[1] - t[0]) / i),
            r = Math.round(n(Math.abs(e[1] - e[0])) / i),
            o = Math.min(Math.max(-a + r, 0), 20);
        return isFinite(o) ? o : 20
    }

    function po(t, e, n) { if (!t[e]) return 0; var i = p(t, function(t, e) { return t + (isNaN(e) ? 0 : e) }, 0); if (0 === i) return 0; for (var a = Math.pow(10, n), r = g(t, function(t) { return (isNaN(t) ? 0 : t) / i * a * 100 }), o = 100 * a, s = g(r, function(t) { return Math.floor(t) }), l = p(s, function(t, e) { return t + e }, 0), u = g(r, function(t, e) { return t - s[e] }); o > l;) { for (var h = Number.NEGATIVE_INFINITY, c = null, d = 0, f = u.length; f > d; ++d) u[d] > h && (h = u[d], c = d);++s[c], u[c] = 0, ++l } return s[e] / a }

    function mo(t) { var e = 2 * Math.PI; return (t % e + e) % e }

    function vo(t) { return t > -XI && XI > t }

    function yo(t) { if (t instanceof Date) return t; if ("string" == typeof t) { var e = UI.exec(t); if (!e) return new Date(0 / 0); if (e[8]) { var n = +e[4] || 0; return "Z" !== e[8].toUpperCase() && (n -= e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, n, +(e[5] || 0), +e[6] || 0, +e[7] || 0)) } return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, +e[7] || 0) } return new Date(null == t ? 0 / 0 : Math.round(t)) }

    function xo(t) { return Math.pow(10, _o(t)) }

    function _o(t) { if (0 === t) return 0; var e = Math.floor(Math.log(t) / Math.LN10); return t / Math.pow(10, e) >= 10 && e++, e }

    function wo(t, e) {
        var n, i = _o(t),
            a = Math.pow(10, i),
            r = t / a;
        return n = e ? 1.5 > r ? 1 : 2.5 > r ? 2 : 4 > r ? 3 : 7 > r ? 5 : 10 : 1 > r ? 1 : 2 > r ? 2 : 3 > r ? 3 : 5 > r ? 5 : 10, t = n * a, i >= -20 ? +t.toFixed(0 > i ? -i : 0) : t
    }

    function bo(t, e) {
        var n = (t.length - 1) * e + 1,
            i = Math.floor(n),
            a = +t[i - 1],
            r = n - i;
        return r ? a + r * (t[i] - a) : a
    }

    function So(t) {
        function e(t, n, i) { return t.interval[i] < n.interval[i] || t.interval[i] === n.interval[i] && (t.close[i] - n.close[i] === (i ? -1 : 1) || !i && e(t, n, 1)) }
        t.sort(function(t, n) { return e(t, n, 0) ? -1 : 1 });
        for (var n = -1 / 0, i = 1, a = 0; a < t.length;) {
            for (var r = t[a].interval, o = t[a].close, s = 0; 2 > s; s++) r[s] <= n && (r[s] = n, o[s] = s ? 1 : 1 - i), n = r[s], i = o[s];
            r[0] === r[1] && o[0] * o[1] !== 1 ? t.splice(a, 1) : a++
        }
        return t
    }

    function Io(t) { return t - parseFloat(t) >= 0 }

    function Mo(t) { return isNaN(t) ? "-" : (t = (t + "").split("."), t[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (t.length > 1 ? "." + t[1] : "")) }

    function Do(t, e) { return t = (t || "").toLowerCase().replace(/-(.)/g, function(t, e) { return e.toUpperCase() }), e && t && (t = t.charAt(0).toUpperCase() + t.slice(1)), t }

    function To(t) { return null == t ? "" : (t + "").replace(qI, function(t, e) { return KI[e] }) }

    function Ao(t, e, n) {
        _(e) || (e = [e]);
        var i = e.length;
        if (!i) return "";
        for (var a = e[0].$vars || [], r = 0; r < a.length; r++) {
            var o = $I[r];
            t = t.replace(JI(o), JI(o, 0))
        }
        for (var s = 0; i > s; s++)
            for (var l = 0; l < a.length; l++) {
                var u = e[s][a[l]];
                t = t.replace(JI($I[l], s), n ? To(u) : u)
            }
        return t
    }

    function Co(t, e, n) { return f(e, function(e, i) { t = t.replace("{" + i + "}", n ? To(e) : e) }), t }

    function Lo(t, e) {
        t = b(t) ? { color: t, extraCssText: e } : t || {};
        var n = t.color,
            i = t.type,
            e = t.extraCssText,
            a = t.renderMode || "html",
            r = t.markerId || "X";
        return n ? "html" === a ? "subItem" === i ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + To(n) + ";" + (e || "") + '"></span>' : '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:' + To(n) + ";" + (e || "") + '"></span>' : { renderMode: a, content: "{marker" + r + "|}  ", style: { color: n } } : ""
    }

    function Po(t, e) { return t += "", "0000".substr(0, e - t.length) + t }

    function ko(t, e, n) {
        ("week" === t || "month" === t || "quarter" === t || "half-year" === t || "year" === t) && (t = "MM-dd\nyyyy");
        var i = yo(e),
            a = n ? "UTC" : "",
            r = i["get" + a + "FullYear"](),
            o = i["get" + a + "Month"]() + 1,
            s = i["get" + a + "Date"](),
            l = i["get" + a + "Hours"](),
            u = i["get" + a + "Minutes"](),
            h = i["get" + a + "Seconds"](),
            c = i["get" + a + "Milliseconds"]();
        return t = t.replace("MM", Po(o, 2)).replace("M", o).replace("yyyy", r).replace("yy", r % 100).replace("dd", Po(s, 2)).replace("d", s).replace("hh", Po(l, 2)).replace("h", l).replace("mm", Po(u, 2)).replace("m", u).replace("ss", Po(h, 2)).replace("s", h).replace("SSS", Po(c, 3))
    }

    function No(t) { return t ? t.charAt(0).toUpperCase() + t.substr(1) : t }

    function Oo(t) { return Fn(t.text, t.font, t.textAlign, t.textVerticalAlign, t.textPadding, t.textLineHeight, t.rich, t.truncate) }

    function Eo(t, e, n, i, a, r, o, s) { return Fn(t, e, n, i, a, s, r, o) }

    function zo(t, e, n, i, a) {
        var r = 0,
            o = 0;
        null == i && (i = 1 / 0), null == a && (a = 1 / 0);
        var s = 0;
        e.eachChild(function(l, u) {
            var h, c, d = l.position,
                f = l.getBoundingRect(),
                g = e.childAt(u + 1),
                p = g && g.getBoundingRect();
            if ("horizontal" === t) {
                var m = f.width + (p ? -p.x + f.x : 0);
                h = r + m, h > i || l.newline ? (r = 0, h = m, o += s + n, s = f.height) : s = Math.max(s, f.height)
            } else {
                var v = f.height + (p ? -p.y + f.y : 0);
                c = o + v, c > a || l.newline ? (r += s + n, o = 0, c = v, s = f.width) : s = Math.max(s, f.width)
            }
            l.newline || (d[0] = r, d[1] = o, "horizontal" === t ? r = h + n : o = c + n)
        })
    }

    function Ro(t, e, n) {
        var i = e.width,
            a = e.height,
            r = lo(t.x, i),
            o = lo(t.y, a),
            s = lo(t.x2, i),
            l = lo(t.y2, a);
        return (isNaN(r) || isNaN(parseFloat(t.x))) && (r = 0), (isNaN(s) || isNaN(parseFloat(t.x2))) && (s = i), (isNaN(o) || isNaN(parseFloat(t.y))) && (o = 0), (isNaN(l) || isNaN(parseFloat(t.y2))) && (l = a), n = ZI(n || 0), { width: Math.max(s - r - n[1] - n[3], 0), height: Math.max(l - o - n[0] - n[2], 0) }
    }

    function Bo(t, e, n) {
        n = ZI(n || 0);
        var i = e.width,
            a = e.height,
            r = lo(t.left, i),
            o = lo(t.top, a),
            s = lo(t.right, i),
            l = lo(t.bottom, a),
            u = lo(t.width, i),
            h = lo(t.height, a),
            c = n[2] + n[0],
            d = n[1] + n[3],
            f = t.aspect;
        switch (isNaN(u) && (u = i - s - d - r), isNaN(h) && (h = a - l - c - o), null != f && (isNaN(u) && isNaN(h) && (f > i / a ? u = .8 * i : h = .8 * a), isNaN(u) && (u = f * h), isNaN(h) && (h = u / f)), isNaN(r) && (r = i - s - u - d), isNaN(o) && (o = a - l - h - c), t.left || t.right) {
            case "center":
                r = i / 2 - u / 2 - n[3];
                break;
            case "right":
                r = i - u - d
        }
        switch (t.top || t.bottom) {
            case "middle":
            case "center":
                o = a / 2 - h / 2 - n[0];
                break;
            case "bottom":
                o = a - h - c
        }
        r = r || 0, o = o || 0, isNaN(u) && (u = i - d - r - (s || 0)), isNaN(h) && (h = a - c - o - (l || 0));
        var g = new bn(r + n[3], o + n[0], u, h);
        return g.margin = n, g
    }

    function Vo(t, e, n, i, a) {
        var r = !a || !a.hv || a.hv[0],
            o = !a || !a.hv || a.hv[1],
            l = a && a.boundingMode || "all";
        if (r || o) {
            var u;
            if ("raw" === l) u = "group" === t.type ? new bn(0, 0, +e.width || 0, +e.height || 0) : t.getBoundingRect();
            else if (u = t.getBoundingRect(), t.needLocalTransform()) {
                var h = t.getLocalTransform();
                u = u.clone(), u.applyTransform(h)
            }
            e = Bo(s({ width: u.width, height: u.height }, e), n, i);
            var c = t.position,
                d = r ? e.x - u.x : 0,
                f = o ? e.y - u.y : 0;
            t.attr("position", "raw" === l ? [d, f] : [c[0] + d, c[1] + f])
        }
    }

    function Go(t, e) { return null != t[iM[e][0]] || null != t[iM[e][1]] && null != t[iM[e][2]] }

    function Fo(t, e, n) {
        function i(n, i) {
            var o = {},
                l = 0,
                u = {},
                h = 0,
                c = 2;
            if (eM(n, function(e) { u[e] = t[e] }), eM(n, function(t) { a(e, t) && (o[t] = u[t] = e[t]), r(o, t) && l++, r(u, t) && h++ }), s[i]) return r(e, n[1]) ? u[n[2]] = null : r(e, n[2]) && (u[n[1]] = null), u;
            if (h !== c && l) { if (l >= c) return o; for (var d = 0; d < n.length; d++) { var f = n[d]; if (!a(o, f) && a(t, f)) { o[f] = t[f]; break } } return o }
            return u
        }

        function a(t, e) { return t.hasOwnProperty(e) }

        function r(t, e) { return null != t[e] && "auto" !== t[e] }

        function o(t, e, n) { eM(t, function(t) { e[t] = n[t] }) }!S(n) && (n = {});
        var s = n.ignoreSize;
        !_(s) && (s = [s, s]);
        var l = i(iM[0], 0),
            u = i(iM[1], 1);
        o(iM[0], t, l), o(iM[1], t, u)
    }

    function Wo(t) { return Ho({}, t) }

    function Ho(t, e) { return e && t && eM(nM, function(n) { e.hasOwnProperty(n) && (t[n] = e[n]) }), t }

    function Xo(t) { var e = []; return f(sM.getClassesByMainType(t), function(t) { e = e.concat(t.prototype.dependencies || []) }), e = g(e, function(t) { return na(t).main }), "dataset" !== t && u(e, "dataset") <= 0 && e.unshift("dataset"), e }

    function Yo(t, e) {
        for (var n = t.length, i = 0; n > i; i++)
            if (t[i].length > e) return t[i];
        return t[n - 1]
    }

    function Uo(t) {
        var e = t.get("coordinateSystem"),
            n = { coordSysName: e, coordSysDims: [], axisMap: B(), categoryAxisMap: B() },
            i = dM[e];
        return i ? (i(t, n, n.axisMap, n.categoryAxisMap), n) : void 0
    }

    function jo(t) { return "category" === t.get("type") }

    function Zo(t) { this.fromDataset = t.fromDataset, this.data = t.data || (t.sourceFormat === mM ? {} : []), this.sourceFormat = t.sourceFormat || vM, this.seriesLayoutBy = t.seriesLayoutBy || xM, this.dimensionsDefine = t.dimensionsDefine, this.encodeDefine = t.encodeDefine && B(t.encodeDefine), this.startIndex = t.startIndex || 0, this.dimensionsDetectCount = t.dimensionsDetectCount }

    function qo(t) {
        var e = t.option.source,
            n = vM;
        if (M(e)) n = yM;
        else if (_(e)) { 0 === e.length && (n = gM); for (var i = 0, a = e.length; a > i; i++) { var r = e[i]; if (null != r) { if (_(r)) { n = gM; break } if (S(r)) { n = pM; break } } } } else if (S(e)) {
            for (var o in e)
                if (e.hasOwnProperty(o) && d(e[o])) { n = mM; break }
        } else if (null != e) throw new Error("Invalid data");
        wM(t).sourceFormat = n
    }

    function Ko(t) { return wM(t).source }

    function $o(t) { wM(t).datasetMap = B() }

    function Jo(t) {
        var e = t.option,
            n = e.data,
            i = M(n) ? yM : fM,
            a = !1,
            r = e.seriesLayoutBy,
            o = e.sourceHeader,
            s = e.dimensions,
            l = as(t);
        if (l) {
            var u = l.option;
            n = u.source, i = wM(l).sourceFormat, a = !0, r = r || u.seriesLayoutBy, null == o && (o = u.sourceHeader), s = s || u.dimensions
        }
        var h = Qo(n, i, r, o, s),
            c = e.encode;
        !c && l && (c = is(t, l, n, i, r, h)), wM(t).source = new Zo({ data: n, fromDataset: a, seriesLayoutBy: r, sourceFormat: i, dimensionsDefine: h.dimensionsDefine, startIndex: h.startIndex, dimensionsDetectCount: h.dimensionsDetectCount, encodeDefine: c })
    }

    function Qo(t, e, n, i, a) {
        if (!t) return { dimensionsDefine: ts(a) };
        var r, o, s;
        if (e === gM) "auto" === i || null == i ? es(function(t) { null != t && "-" !== t && (b(t) ? null == o && (o = 1) : o = 0) }, n, t, 10) : o = i ? 1 : 0, a || 1 !== o || (a = [], es(function(t, e) { a[e] = null != t ? t : "" }, n, t)), r = a ? a.length : n === _M ? t.length : t[0] ? t[0].length : null;
        else if (e === pM) a || (a = ns(t), s = !0);
        else if (e === mM) a || (a = [], s = !0, f(t, function(t, e) { a.push(e) }));
        else if (e === fM) {
            var l = Wi(t[0]);
            r = _(l) && l.length || 1
        }
        var u;
        return s && f(a, function(t, e) { "name" === (S(t) ? t.name : t) && (u = e) }), { startIndex: o, dimensionsDefine: ts(a), dimensionsDetectCount: r, potentialNameDimIndex: u }
    }

    function ts(t) {
        if (t) {
            var e = B();
            return g(t, function(t) {
                if (t = o({}, S(t) ? t : { name: t }), null == t.name) return t;
                t.name += "", null == t.displayName && (t.displayName = t.name);
                var n = e.get(t.name);
                return n ? t.name += "-" + n.count++ : e.set(t.name, { count: 1 }), t
            })
        }
    }

    function es(t, e, n, i) {
        if (null == i && (i = 1 / 0), e === _M)
            for (var a = 0; a < n.length && i > a; a++) t(n[a] ? n[a][0] : null, a);
        else
            for (var r = n[0] || [], a = 0; a < r.length && i > a; a++) t(r[a], a)
    }

    function ns(t) { for (var e, n = 0; n < t.length && !(e = t[n++]);); if (e) { var i = []; return f(e, function(t, e) { i.push(e) }), i } }

    function is(t, e, n, i, a, r) {
        var o = Uo(t),
            s = {},
            l = [],
            u = [],
            h = t.subType,
            c = B(["pie", "map", "funnel"]),
            d = B(["line", "bar", "pictorialBar", "scatter", "effectScatter", "candlestick", "boxplot"]);
        if (o && null != d.get(h)) {
            var g = t.ecModel,
                p = wM(g).datasetMap,
                m = e.uid + "_" + a,
                v = p.get(m) || p.set(m, { categoryWayDim: 1, valueWayDim: 0 });
            f(o.coordSysDims, function(t) {
                if (null == o.firstCategoryDimIndex) {
                    var e = v.valueWayDim++;
                    s[t] = e, u.push(e)
                } else if (o.categoryAxisMap.get(t)) s[t] = 0, l.push(0);
                else {
                    var e = v.categoryWayDim++;
                    s[t] = e, u.push(e)
                }
            })
        } else if (null != c.get(h)) {
            for (var y, x = 0; 5 > x && null == y; x++) os(n, i, a, r.dimensionsDefine, r.startIndex, x) || (y = x);
            if (null != y) {
                s.value = y;
                var _ = r.potentialNameDimIndex || Math.max(y - 1, 0);
                u.push(_), l.push(_)
            }
        }
        return l.length && (s.itemName = l), u.length && (s.seriesName = u), s
    }

    function as(t) {
        var e = t.option,
            n = e.data;
        return n ? void 0 : t.ecModel.getComponent("dataset", e.datasetIndex || 0)
    }

    function rs(t, e) { return os(t.data, t.sourceFormat, t.seriesLayoutBy, t.dimensionsDefine, t.startIndex, e) }

    function os(t, e, n, i, a, r) {
        function o(t) { return null != t && isFinite(t) && "" !== t ? !1 : b(t) && "-" !== t ? !0 : void 0 }
        var s, l = 5;
        if (M(t)) return !1;
        var u;
        if (i && (u = i[r], u = S(u) ? u.name : u), e === gM)
            if (n === _M) {
                for (var h = t[r], c = 0; c < (h || []).length && l > c; c++)
                    if (null != (s = o(h[a + c]))) return s
            } else
                for (var c = 0; c < t.length && l > c; c++) { var d = t[a + c]; if (d && null != (s = o(d[r]))) return s } else if (e === pM) { if (!u) return; for (var c = 0; c < t.length && l > c; c++) { var f = t[c]; if (f && null != (s = o(f[u]))) return s } } else if (e === mM) {
            if (!u) return;
            var h = t[u];
            if (!h || M(h)) return !1;
            for (var c = 0; c < h.length && l > c; c++)
                if (null != (s = o(h[c]))) return s
        } else if (e === fM)
            for (var c = 0; c < t.length && l > c; c++) {
                var f = t[c],
                    g = Wi(f);
                if (!_(g)) return !1;
                if (null != (s = o(g[r]))) return s
            }
        return !1
    }

    function ss(t, e) {
        if (e) {
            var n = e.seiresIndex,
                i = e.seriesId,
                a = e.seriesName;
            return null != n && t.componentIndex !== n || null != i && t.id !== i || null != a && t.name !== a
        }
    }

    function ls(t, e) {
        var n = t.color && !t.colorLayer;
        f(e, function(e, r) { "colorLayer" === r && n || sM.hasClass(r) || ("object" == typeof e ? t[r] = t[r] ? a(t[r], e, !1) : i(e) : null == t[r] && (t[r] = e)) })
    }

    function us(t) { t = t, this.option = {}, this.option[bM] = 1, this._componentsMap = B({ series: [] }), this._seriesIndices, this._seriesIndicesMap, ls(t, this._theme.option), a(t, uM, !1), this.mergeOption(t) }

    function hs(t, e) { _(e) || (e = e ? [e] : []); var n = {}; return f(e, function(e) { n[e] = (t.get(e) || []).slice() }), n }

    function cs(t, e, n) { var i = e.type ? e.type : n ? n.subType : sM.determineSubType(t, e); return i }

    function ds(t, e) { t._seriesIndicesMap = B(t._seriesIndices = g(e, function(t) { return t.componentIndex }) || []) }

    function fs(t, e) { return e.hasOwnProperty("subType") ? m(t, function(t) { return t.subType === e.subType }) : t }

    function gs(t) { f(IM, function(e) { this[e] = y(t[e], t) }, this) }

    function ps() { this._coordinateSystems = [] }

    function ms(t) { this._api = t, this._timelineOptions = [], this._mediaList = [], this._mediaDefault, this._currentMediaIndices = [], this._optionBackup, this._newBaseOption }

    function vs(t, e, n) {
        var i, a, r = [],
            o = [],
            s = t.timeline;
        if (t.baseOption && (a = t.baseOption), (s || t.options) && (a = a || {}, r = (t.options || []).slice()), t.media) {
            a = a || {};
            var l = t.media;
            DM(l, function(t) { t && t.option && (t.query ? o.push(t) : i || (i = t)) })
        }
        return a || (a = t), a.timeline || (a.timeline = s), DM([a].concat(r).concat(g(o, function(t) { return t.option })), function(t) { DM(e, function(e) { e(t, n) }) }), { baseOption: a, timelineOptions: r, mediaDefault: i, mediaList: o }
    }

    function ys(t, e, n) {
        var i = { width: e, height: n, aspectratio: e / n },
            a = !0;
        return f(t, function(t, e) {
            var n = e.match(LM);
            if (n && n[1] && n[2]) {
                var r = n[1],
                    o = n[2].toLowerCase();
                xs(i[o], t, r) || (a = !1)
            }
        }), a
    }

    function xs(t, e, n) { return "min" === n ? t >= e : "max" === n ? e >= t : t === e }

    function _s(t, e) { return t.join(",") === e.join(",") }

    function ws(t, e) {
        e = e || {}, DM(e, function(e, n) {
            if (null != e) {
                var i = t[n];
                if (sM.hasClass(n)) {
                    e = Gi(e), i = Gi(i);
                    var a = Xi(i, e);
                    t[n] = AM(a, function(t) { return t.option && t.exist ? CM(t.exist, t.option, !0) : t.exist || t.option })
                } else t[n] = CM(i, e, !0)
            }
        })
    }

    function bs(t) {
        var e = t && t.itemStyle;
        if (e)
            for (var n = 0, i = NM.length; i > n; n++) {
                var r = NM[n],
                    o = e.normal,
                    s = e.emphasis;
                o && o[r] && (t[r] = t[r] || {}, t[r].normal ? a(t[r].normal, o[r]) : t[r].normal = o[r], o[r] = null), s && s[r] && (t[r] = t[r] || {}, t[r].emphasis ? a(t[r].emphasis, s[r]) : t[r].emphasis = s[r], s[r] = null)
            }
    }

    function Ss(t, e, n) {
        if (t && t[e] && (t[e].normal || t[e].emphasis)) {
            var i = t[e].normal,
                a = t[e].emphasis;
            i && (n ? (t[e].normal = t[e].emphasis = null, s(t[e], i)) : t[e] = i), a && (t.emphasis = t.emphasis || {}, t.emphasis[e] = a)
        }
    }

    function Is(t) { Ss(t, "itemStyle"), Ss(t, "lineStyle"), Ss(t, "areaStyle"), Ss(t, "label"), Ss(t, "labelLine"), Ss(t, "upperLabel"), Ss(t, "edgeLabel") }

    function Ms(t, e) {
        var n = kM(t) && t[e],
            i = kM(n) && n.textStyle;
        if (i)
            for (var a = 0, r = Fb.length; r > a; a++) {
                var e = Fb[a];
                i.hasOwnProperty(e) && (n[e] = i[e])
            }
    }

    function Ds(t) { t && (Is(t), Ms(t, "label"), t.emphasis && Ms(t.emphasis, "label")) }

    function Ts(t) {
        if (kM(t)) {
            bs(t), Is(t), Ms(t, "label"), Ms(t, "upperLabel"), Ms(t, "edgeLabel"), t.emphasis && (Ms(t.emphasis, "label"), Ms(t.emphasis, "upperLabel"), Ms(t.emphasis, "edgeLabel"));
            var e = t.markPoint;
            e && (bs(e), Ds(e));
            var n = t.markLine;
            n && (bs(n), Ds(n));
            var i = t.markArea;
            i && Ds(i);
            var a = t.data;
            if ("graph" === t.type) {
                a = a || t.nodes;
                var r = t.links || t.edges;
                if (r && !M(r))
                    for (var o = 0; o < r.length; o++) Ds(r[o]);
                f(t.categories, function(t) { Is(t) })
            }
            if (a && !M(a))
                for (var o = 0; o < a.length; o++) Ds(a[o]);
            var e = t.markPoint;
            if (e && e.data)
                for (var s = e.data, o = 0; o < s.length; o++) Ds(s[o]);
            var n = t.markLine;
            if (n && n.data)
                for (var l = n.data, o = 0; o < l.length; o++) _(l[o]) ? (Ds(l[o][0]), Ds(l[o][1])) : Ds(l[o]);
            "gauge" === t.type ? (Ms(t, "axisLabel"), Ms(t, "title"), Ms(t, "detail")) : "treemap" === t.type ? (Ss(t.breadcrumb, "itemStyle"), f(t.levels, function(t) { Is(t) })) : "tree" === t.type && Is(t.leaves)
        }
    }

    function As(t) { return _(t) ? t : t ? [t] : [] }

    function Cs(t) { return (_(t) ? t[0] : t) || {} }

    function Ls(t, e) { e = e.split(","); for (var n = t, i = 0; i < e.length && (n = n && n[e[i]], null != n); i++); return n }

    function Ps(t, e, n, i) {
        e = e.split(",");
        for (var a, r = t, o = 0; o < e.length - 1; o++) a = e[o], null == r[a] && (r[a] = {}), r = r[a];
        (i || null == r[e[o]]) && (r[e[o]] = n)
    }

    function ks(t) { f(EM, function(e) { e[0] in t && !(e[1] in t) && (t[e[1]] = t[e[0]]) }) }

    function Ns(t) {
        f(t, function(e, n) {
            var i = [],
                a = [0 / 0, 0 / 0],
                r = [e.stackResultDimension, e.stackedOverDimension],
                o = e.data,
                s = e.isStackedByIndex,
                l = o.map(r, function(r, l, u) {
                    var h = o.get(e.stackedDimension, u);
                    if (isNaN(h)) return a;
                    var c, d;
                    s ? d = o.getRawIndex(u) : c = o.get(e.stackedByDimension, u);
                    for (var f = 0 / 0, g = n - 1; g >= 0; g--) { var p = t[g]; if (s || (d = p.data.rawIndexOf(p.stackedByDimension, c)), d >= 0) { var m = p.data.getByRawIndex(p.stackResultDimension, d); if (h >= 0 && m > 0 || 0 >= h && 0 > m) { h += m, f = m; break } } }
                    return i[0] = h, i[1] = f, i
                });
            o.hostModel.setData(l), e.data = l
        })
    }

    function Os(t, e) {
        Zo.isInstance(t) || (t = Zo.seriesDataToSource(t)), this._source = t;
        var n = this._data = t.data,
            i = t.sourceFormat;
        i === yM && (this._offset = 0, this._dimSize = e, this._data = n);
        var a = GM[i === gM ? i + "_" + t.seriesLayoutBy : i];
        o(this, a)
    }

    function Es() { return this._data.length }

    function zs(t) { return this._data[t] }

    function Rs(t) { for (var e = 0; e < t.length; e++) this._data.push(t[e]) }

    function Bs(t, e, n) { return null != n ? t[n] : t }

    function Vs(t, e, n, i) { return Gs(t[i], this._dimensionInfos[e]) }

    function Gs(t, e) { var n = e && e.type; if ("ordinal" === n) { var i = e && e.ordinalMeta; return i ? i.parseAndCollect(t) : t } return "time" === n && "number" != typeof t && null != t && "-" !== t && (t = +yo(t)), null == t || "" === t ? 0 / 0 : +t }

    function Fs(t, e, n) {
        if (t) {
            var i = t.getRawDataItem(e);
            if (null != i) {
                var a, r, o = t.getProvider().getSource().sourceFormat,
                    s = t.getDimensionInfo(n);
                return s && (a = s.name, r = s.index), FM[o](i, e, r, a)
            }
        }
    }

    function Ws(t, e, n) { if (t) { var i = t.getProvider().getSource().sourceFormat; if (i === fM || i === pM) { var a = t.getRawDataItem(e); return i !== fM || S(a) || (a = null), a ? a[n] : void 0 } } }

    function Hs(t) { return new Xs(t) }

    function Xs(t) { t = t || {}, this._reset = t.reset, this._plan = t.plan, this._count = t.count, this._onDirty = t.onDirty, this._dirty = !0, this.context }

    function Ys(t, e, n, i, a, r) { UM.reset(n, i, a, r), t._callingProgress = e, t._callingProgress({ start: n, end: i, count: i - n, next: UM.next }, t.context) }

    function Us(t, e) { t._dueIndex = t._outputDueEnd = t._dueEnd = 0, t._settedOutputEnd = null; var n, i;!e && t._reset && (n = t._reset(t.context), n && n.progress && (i = n.forceFirstProgress, n = n.progress), _(n) && !n.length && (n = null)), t._progress = n, t._modBy = t._modDataCount = null; var a = t._downstream; return a && a.dirty(), i }

    function js(t) {
        var e = t.name;
        Ui(t) || (t.name = Zs(t) || e)
    }

    function Zs(t) {
        var e = t.getRawData(),
            n = e.mapDimension("seriesName", !0),
            i = [];
        return f(n, function(t) {
            var n = e.getDimensionInfo(t);
            n.displayName && i.push(n.displayName)
        }), i.join(" ")
    }

    function qs(t) { return t.model.getRawData().count() }

    function Ks(t) { var e = t.model; return e.setData(e.getRawData().cloneShallow()), $s }

    function $s(t, e) { t.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData) }

    function Js(t, e) { f(t.CHANGABLE_METHODS, function(n) { t.wrapMethod(n, x(Qs, e)) }) }

    function Qs(t) {
        var e = tl(t);
        e && e.setOutputEnd(this.count())
    }

    function tl(t) {
        var e = (t.ecModel || {}).scheduler,
            n = e && e.getPipeline(t.uid);
        if (n) {
            var i = n.currentTask;
            if (i) {
                var a = i.agentStubMap;
                a && (i = a.get(t.uid))
            }
            return i
        }
    }

    function el() { this.group = new Vw, this.uid = io("viewChart"), this.renderTask = Hs({ plan: al, reset: rl }), this.renderTask.context = { view: this } }

    function nl(t, e, n) {
        if (t && (t.trigger(e, n), t.isGroup && !Tr(t)))
            for (var i = 0, a = t.childCount(); a > i; i++) nl(t.childAt(i), e, n)
    }

    function il(t, e, n) {
        var i = Zi(t, e),
            a = e && null != e.highlightKey ? Ar(e.highlightKey) : null;
        null != i ? f(Gi(i), function(e) { nl(t.getItemGraphicEl(e), n, a) }) : t.eachItemGraphicEl(function(t) { nl(t, n, a) })
    }

    function al(t) { return QM(t.model) }

    function rl(t) {
        var e = t.model,
            n = t.ecModel,
            i = t.api,
            a = t.payload,
            r = e.pipelineContext.progressiveRender,
            o = t.view,
            s = a && JM(a).updateMethod,
            l = r ? "incrementalPrepareRender" : s && o[s] ? s : "render";
        return "render" !== l && o[l](e, n, i, a), eD[l]
    }

    function ol(t, e, n) {
        function i() { h = (new Date).getTime(), c = null, t.apply(o, s || []) }
        var a, r, o, s, l, u = 0,
            h = 0,
            c = null;
        e = e || 0;
        var d = function() {
            a = (new Date).getTime(), o = this, s = arguments;
            var t = l || e,
                d = l || n;
            l = null, r = a - (d ? u : h) - t, clearTimeout(c), d ? c = setTimeout(i, t) : r >= 0 ? i() : c = setTimeout(i, -r), u = a
        };
        return d.clear = function() { c && (clearTimeout(c), c = null) }, d.debounceNextCall = function(t) { l = t }, d
    }

    function sl(t, e, n, i) {
        var a = t[e];
        if (a) {
            var r = a[nD] || a,
                o = a[aD],
                s = a[iD];
            if (s !== n || o !== i) {
                if (null == n || !i) return t[e] = r;
                a = t[e] = ol(r, n, "debounce" === i), a[nD] = r, a[aD] = i, a[iD] = n
            }
            return a
        }
    }

    function ll(t, e, n, i) {
        this.ecInstance = t, this.api = e, this.unfinished;
        var n = this._dataProcessorHandlers = n.slice(),
            i = this._visualHandlers = i.slice();
        this._allHandlers = n.concat(i), this._stageTaskMap = B()
    }

    function ul(t, e, n, i, a) {
        function r(t, e) { return t.setDirty && (!t.dirtyMap || t.dirtyMap.get(e.__pipeline.id)) }
        a = a || {};
        var o;
        f(e, function(e) {
            if (!a.visualType || a.visualType === e.visualType) {
                var s = t._stageTaskMap.get(e.uid),
                    l = s.seriesTaskMap,
                    u = s.overallTask;
                if (u) {
                    var h, c = u.agentStubMap;
                    c.each(function(t) { r(a, t) && (t.dirty(), h = !0) }), h && u.dirty(), cD(u, i);
                    var d = t.getPerformArgs(u, a.block);
                    c.each(function(t) { t.perform(d) }), o |= u.perform(d)
                } else l && l.each(function(s) {
                    r(a, s) && s.dirty();
                    var l = t.getPerformArgs(s, a.block);
                    l.skip = !e.performRawSeries && n.isSeriesFiltered(s.context.model), cD(s, i), o |= s.perform(l)
                })
            }
        }), t.unfinished |= o
    }

    function hl(t, e, n, i, a) {
        function r(n) {
            var r = n.uid,
                s = o.get(r) || o.set(r, Hs({ plan: ml, reset: vl, count: xl }));
            s.context = { model: n, ecModel: i, api: a, useClearVisual: e.isVisual && !e.isLayout, plan: e.plan, reset: e.reset, scheduler: t }, _l(t, n, s)
        }
        var o = n.seriesTaskMap || (n.seriesTaskMap = B()),
            s = e.seriesType,
            l = e.getTargetSeries;
        e.createOnAllSeries ? i.eachRawSeries(r) : s ? i.eachRawSeriesByType(s, r) : l && l(i, a).each(r);
        var u = t._pipelineMap;
        o.each(function(t, e) { u.get(e) || (t.dispose(), o.removeKey(e)) })
    }

    function cl(t, e, n, i, a) {
        function r(e) {
            var n = e.uid,
                i = s.get(n);
            i || (i = s.set(n, Hs({ reset: fl, onDirty: pl })), o.dirty()), i.context = { model: e, overallProgress: h, modifyOutputEnd: c }, i.agent = o, i.__block = h, _l(t, e, i)
        }
        var o = n.overallTask = n.overallTask || Hs({ reset: dl });
        o.context = { ecModel: i, api: a, overallReset: e.overallReset, scheduler: t };
        var s = o.agentStubMap = o.agentStubMap || B(),
            l = e.seriesType,
            u = e.getTargetSeries,
            h = !0,
            c = e.modifyOutputEnd;
        l ? i.eachRawSeriesByType(l, r) : u ? u(i, a).each(r) : (h = !1, f(i.getSeries(), r));
        var d = t._pipelineMap;
        s.each(function(t, e) { d.get(e) || (t.dispose(), o.dirty(), s.removeKey(e)) })
    }

    function dl(t) { t.overallReset(t.ecModel, t.api, t.payload) }

    function fl(t) { return t.overallProgress && gl }

    function gl() { this.agent.dirty(), this.getDownstream().dirty() }

    function pl() { this.agent && this.agent.dirty() }

    function ml(t) { return t.plan && t.plan(t.model, t.ecModel, t.api, t.payload) }

    function vl(t) { t.useClearVisual && t.data.clearAllVisual(); var e = t.resetDefines = Gi(t.reset(t.model, t.ecModel, t.api, t.payload)); return e.length > 1 ? g(e, function(t, e) { return yl(e) }) : dD }

    function yl(t) {
        return function(e, n) {
            var i = n.data,
                a = n.resetDefines[t];
            if (a && a.dataEach)
                for (var r = e.start; r < e.end; r++) a.dataEach(i, r);
            else a && a.progress && a.progress(e, i)
        }
    }

    function xl(t) { return t.data.count() }

    function _l(t, e, n) {
        var i = e.uid,
            a = t._pipelineMap.get(i);
        !a.head && (a.head = n), a.tail && a.tail.pipe(n), a.tail = n, n.__idxInPipeline = a.count++, n.__pipeline = a
    }

    function wl(t) { fD = null; try { t(gD, pD) } catch (e) {} return fD }

    function bl(t, e) { for (var n in e.prototype) t[n] = G }

    function Sl(t) {
        if (b(t)) {
            var e = new DOMParser;
            t = e.parseFromString(t, "text/xml")
        }
        for (9 === t.nodeType && (t = t.firstChild);
            "svg" !== t.nodeName.toLowerCase() || 1 !== t.nodeType;) t = t.nextSibling;
        return t
    }

    function Il() { this._defs = {}, this._root = null, this._isDefine = !1, this._isText = !1 }

    function Ml(t, e) {
        for (var n = t.firstChild; n;) {
            if (1 === n.nodeType) {
                var i = n.getAttribute("offset");
                i = i.indexOf("%") > 0 ? parseInt(i, 10) / 100 : i ? parseFloat(i) : 0;
                var a = n.getAttribute("stop-color") || "#000000";
                e.addColorStop(i, a)
            }
            n = n.nextSibling
        }
    }

    function Dl(t, e) { t && t.__inheritedStyle && (e.__inheritedStyle || (e.__inheritedStyle = {}), s(e.__inheritedStyle, t.__inheritedStyle)) }

    function Tl(t) {
        for (var e = O(t).split(SD), n = [], i = 0; i < e.length; i += 2) {
            var a = parseFloat(e[i]),
                r = parseFloat(e[i + 1]);
            n.push([a, r])
        }
        return n
    }

    function Al(t, e, n, i) {
        var a = e.__inheritedStyle || {},
            r = "text" === e.type;
        if (1 === t.nodeType && (Ll(t, e), o(a, Pl(t)), !i))
            for (var s in DD)
                if (DD.hasOwnProperty(s)) {
                    var l = t.getAttribute(s);
                    null != l && (a[DD[s]] = l)
                }
        var u = r ? "textFill" : "fill",
            h = r ? "textStroke" : "stroke";
        e.style = e.style || new Zw;
        var c = e.style;
        null != a.fill && c.set(u, Cl(a.fill, n)), null != a.stroke && c.set(h, Cl(a.stroke, n)), f(["lineWidth", "opacity", "fillOpacity", "strokeOpacity", "miterLimit", "fontSize"], function(t) {
            var e = "lineWidth" === t && r ? "textStrokeWidth" : t;
            null != a[t] && c.set(e, parseFloat(a[t]))
        }), a.textBaseline && "auto" !== a.textBaseline || (a.textBaseline = "alphabetic"), "alphabetic" === a.textBaseline && (a.textBaseline = "bottom"), "start" === a.textAlign && (a.textAlign = "left"), "end" === a.textAlign && (a.textAlign = "right"), f(["lineDashOffset", "lineCap", "lineJoin", "fontWeight", "fontFamily", "fontStyle", "textAlign", "textBaseline"], function(t) { null != a[t] && c.set(t, a[t]) }), a.lineDash && (e.style.lineDash = O(a.lineDash).split(SD)), c[h] && "none" !== c[h] && (e[h] = !0), e.__inheritedStyle = a
    }

    function Cl(t, e) {
        var n = e && t && t.match(TD);
        if (n) {
            var i = O(n[1]),
                a = e[i];
            return a
        }
        return t
    }

    function Ll(t, e) {
        var n = t.getAttribute("transform");
        if (n) {
            n = n.replace(/,/g, " ");
            var i = null,
                a = [];
            n.replace(AD, function(t, e, n) { a.push(e, n) });
            for (var r = a.length - 1; r > 0; r -= 2) {
                var o = a[r],
                    s = a[r - 1];
                switch (i = i || Ae(), s) {
                    case "translate":
                        o = O(o).split(SD), ke(i, i, [parseFloat(o[0]), parseFloat(o[1] || 0)]);
                        break;
                    case "scale":
                        o = O(o).split(SD), Oe(i, i, [parseFloat(o[0]), parseFloat(o[1] || o[0])]);
                        break;
                    case "rotate":
                        o = O(o).split(SD), Ne(i, i, parseFloat(o[0]));
                        break;
                    case "skew":
                        o = O(o).split(SD), console.warn("Skew transform is not supported yet");
                        break;
                    case "matrix":
                        var o = O(o).split(SD);
                        i[0] = parseFloat(o[0]), i[1] = parseFloat(o[1]), i[2] = parseFloat(o[2]), i[3] = parseFloat(o[3]), i[4] = parseFloat(o[4]), i[5] = parseFloat(o[5])
                }
            }
            e.setLocalTransform(i)
        }
    }

    function Pl(t) {
        var e = t.getAttribute("style"),
            n = {};
        if (!e) return n;
        var i = {};
        CD.lastIndex = 0;
        for (var a; null != (a = CD.exec(e));) i[a[1]] = a[2];
        for (var r in DD) DD.hasOwnProperty(r) && null != i[r] && (n[DD[r]] = i[r]);
        return n
    }

    function kl(t, e, n) {
        var i = e / t.width,
            a = n / t.height,
            r = Math.min(i, a),
            o = [r, r],
            s = [-(t.x + t.width / 2) * r + e / 2, -(t.y + t.height / 2) * r + n / 2];
        return { scale: o, position: s }
    }

    function Nl(t, e) { var n = new Il; return n.parse(t, e) }

    function Ol(t, e) {
        return function(n, i, a) {
            (e || !this._disposed) && (n = n && n.toLowerCase(), Z_.prototype[t].call(this, n, i, a))
        }
    }

    function El() { Z_.call(this) }

    function zl(t, e, n) {
        function a(t, e) { return t.__prio - e.__prio }
        n = n || {}, "string" == typeof e && (e = cT[e]), this.id, this.group, this._dom = t;
        var r = "canvas",
            o = this._zr = Ei(t, { renderer: n.renderer || r, devicePixelRatio: n.devicePixelRatio, width: n.width, height: n.height });
        this._throttledZrFlush = ol(y(o.flush, o), 17);
        var e = i(e);
        e && RM(e, !0), this._theme = e, this._chartsViews = [], this._chartsMap = {}, this._componentsViews = [], this._componentsMap = {}, this._coordSysMgr = new ps;
        var s = this._api = tu(this);
        Ln(hT, a), Ln(sT, a), this._scheduler = new ll(this, s, sT, hT), Z_.call(this, this._ecEventProcessor = new eu), this._messageCenter = new El, this._initEvents(), this.resize = y(this.resize, this), this._pendingActions = [], o.animation.on("frame", this._onframe, this), Xl(o, this), E(this)
    }

    function Rl(t, e, n) {
        if (!this._disposed) {
            var i, a = this._model,
                r = this._coordSysMgr.getCoordinateSystems();
            e = Ki(a, e);
            for (var o = 0; o < r.length; o++) { var s = r[o]; if (s[t] && null != (i = s[t](a, e, n))) return i }
        }
    }

    function Bl(t) {
        var e = t._model,
            n = t._scheduler;
        n.restorePipelines(e), n.prepareStageTasks(), Yl(t, "component", e, n), Yl(t, "chart", e, n), n.plan()
    }

    function Vl(t, e, n, i, a) {
        function r(i) { i && i.__alive && i[e] && i[e](i.__model, o, t._api, n) }
        var o = t._model;
        if (!i) return void OD(t._componentsViews.concat(t._chartsViews), r);
        var s = {};
        s[i + "Id"] = n[i + "Id"], s[i + "Index"] = n[i + "Index"], s[i + "Name"] = n[i + "Name"];
        var l = { mainType: i, query: s };
        a && (l.subType = a);
        var u = n.excludeSeriesId;
        null != u && (u = B(Gi(u))), o && o.eachComponent(l, function(e) { u && null != u.get(e.id) || r(t["series" === i ? "_chartsMap" : "_componentsMap"][e.__viewId]) }, t)
    }

    function Gl(t, e) {
        var n = t._chartsMap,
            i = t._scheduler;
        e.eachSeries(function(t) { i.updateStreamModes(t, n[t.__viewId]) })
    }

    function Fl(t, e) {
        var n = t.type,
            i = t.escapeConnect,
            a = rT[n],
            r = a.actionInfo,
            l = (r.update || "update").split(":"),
            u = l.pop();
        l = null != l[0] && RD(l[0]), this[QD] = !0;
        var h = [t],
            c = !1;
        t.batch && (c = !0, h = g(t.batch, function(e) { return e = s(o({}, e), t), e.batch = null, e }));
        var d, f = [],
            p = "highlight" === n || "downplay" === n;
        OD(h, function(t) { d = a.action(t, this._model, this._api), d = d || o({}, t), d.type = r.event || d.type, f.push(d), p ? Vl(this, u, t, "series") : l && Vl(this, u, t, l.main, l.sub) }, this), "none" === u || p || l || (this[tT] ? (Bl(this), iT.update.call(this, t), this[tT] = !1) : iT[u].call(this, t)), d = c ? { type: r.event || n, escapeConnect: i, batch: f } : f[0], this[QD] = !1, !e && this._messageCenter.trigger(d.type, d)
    }

    function Wl(t) {
        for (var e = this._pendingActions; e.length;) {
            var n = e.shift();
            Fl.call(this, n, t)
        }
    }

    function Hl(t) {!t && this.trigger("updated") }

    function Xl(t, e) { t.on("rendered", function() { e.trigger("rendered"), !t.animation.isFinished() || e[tT] || e._scheduler.unfinished || e._pendingActions.length || e.trigger("finished") }) }

    function Yl(t, e, n, i) {
        function a(t) {
            var e = "_ec_" + t.id + "_" + t.type,
                a = s[e];
            if (!a) {
                var h = RD(t.type),
                    c = r ? qM.getClass(h.main, h.sub) : el.getClass(h.sub);
                a = new c, a.init(n, u), s[e] = a, o.push(a), l.add(a.group)
            }
            t.__viewId = a.__id = e, a.__alive = !0, a.__model = t, a.group.__ecComponentInfo = { mainType: t.mainType, index: t.componentIndex }, !r && i.prepareView(a, t, n, u)
        }
        for (var r = "component" === e, o = r ? t._componentsViews : t._chartsViews, s = r ? t._componentsMap : t._chartsMap, l = t._zr, u = t._api, h = 0; h < o.length; h++) o[h].__alive = !1;
        r ? n.eachComponent(function(t, e) { "series" !== t && a(e) }) : n.eachSeries(a);
        for (var h = 0; h < o.length;) {
            var c = o[h];
            c.__alive ? h++ : (!r && c.renderTask.dispose(), l.remove(c.group), c.dispose(n, u), o.splice(h, 1), delete s[c.__id], c.__id = c.group.__ecComponentInfo = null)
        }
    }

    function Ul(t) { t.clearColorPalette(), t.eachSeries(function(t) { t.clearColorPalette() }) }

    function jl(t, e, n, i) { Zl(t, e, n, i), OD(t._chartsViews, function(t) { t.__alive = !1 }), ql(t, e, n, i), OD(t._chartsViews, function(t) { t.__alive || t.remove(e, n) }) }

    function Zl(t, e, n, i, a) {
        OD(a || t._componentsViews, function(t) {
            var a = t.__model;
            t.render(a, e, n, i), Ql(a, t)
        })
    }

    function ql(t, e, n, i, a) {
        var r, o = t._scheduler;
        e.eachSeries(function(e) {
            var n = t._chartsMap[e.__viewId];
            n.__alive = !0;
            var s = n.renderTask;
            o.updatePayload(s, i), a && a.get(e.uid) && s.dirty(), r |= s.perform(o.getPerformArgs(s)), n.group.silent = !!e.get("silent"), Ql(e, n), Jl(e, n)
        }), o.unfinished |= r, $l(t, e), sD(t._zr.dom, e)
    }

    function Kl(t, e) { OD(uT, function(n) { n(t, e) }) }

    function $l(t, e) {
        var n = t._zr,
            i = n.storage,
            a = 0;
        i.traverse(function() { a++ }), a > e.get("hoverLayerThreshold") && !D_.node && e.eachSeries(function(e) {
            if (!e.preventUsingHoverLayer) {
                var n = t._chartsMap[e.__viewId];
                n.__alive && n.group.traverse(function(t) { t.useHoverLayer = !0 })
            }
        })
    }

    function Jl(t, e) {
        var n = t.get("blendMode") || null;
        e.group.traverse(function(t) { t.isGroup || t.style.blend !== n && t.setStyle("blend", n), t.eachPendingDisplayable && t.eachPendingDisplayable(function(t) { t.setStyle("blend", n) }) })
    }

    function Ql(t, e) {
        var n = t.get("z"),
            i = t.get("zlevel");
        e.group.traverse(function(t) { "group" !== t.type && (null != n && (t.z = n), null != i && (t.zlevel = i)) })
    }

    function tu(t) {
        var e = t._coordSysMgr;
        return o(new gs(t), {
            getCoordinateSystems: y(e.getCoordinateSystems, e),
            getComponentByElement: function(e) {
                for (; e;) {
                    var n = e.__ecComponentInfo;
                    if (null != n) return t._model.getComponent(n.mainType, n.index);
                    e = e.parent
                }
            }
        })
    }

    function eu() { this.eventInfo }

    function nu(t) {
        function e(t, e) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i[r] = e
            }
        }
        var n = 0,
            i = 1,
            a = 2,
            r = "__connectUpdateStatus";
        OD(oT, function(o, s) {
            t._messageCenter.on(s, function(o) {
                if (gT[t.group] && t[r] !== n) {
                    if (o && o.escapeConnect) return;
                    var s = t.makeActionFromEvent(o),
                        l = [];
                    OD(fT, function(e) { e !== t && e.group === t.group && l.push(e) }), e(l, n), OD(l, function(t) { t[r] !== i && t.dispatchAction(s) }), e(l, a)
                }
            })
        })
    }

    function iu(t, e, n) { var i = su(t); if (i) return i; var a = new zl(t, e, n); return a.id = "ec_" + pT++, fT[a.id] = a, Ji(t, vT, a.id), nu(a), a }

    function au(t) {
        if (_(t)) {
            var e = t;
            t = null, OD(e, function(e) { null != e.group && (t = e.group) }), t = t || "g_" + mT++, OD(e, function(e) { e.group = t })
        }
        return gT[t] = !0, t
    }

    function ru(t) { gT[t] = !1 }

    function ou(t) { "string" == typeof t ? t = fT[t] : t instanceof zl || (t = su(t)), t instanceof zl && !t.isDisposed() && t.dispose() }

    function su(t) { return fT[Qi(t, vT)] }

    function lu(t) { return fT[t] }

    function uu(t, e) { cT[t] = e }

    function hu(t) { lT.push(t) }

    function cu(t, e) { yu(sT, t, e, FD) }

    function du(t) { uT.push(t) }

    function fu(t, e, n) {
        "function" == typeof e && (n = e, e = "");
        var i = zD(t) ? t.type : [t, t = { event: e }][0];
        t.event = (t.event || i).toLowerCase(), e = t.event, ND(eT.test(i) && eT.test(e)), rT[i] || (rT[i] = { action: n, actionInfo: t }), oT[e] = i
    }

    function gu(t, e) { ps.register(t, e) }

    function pu(t) { var e = ps.get(t); return e ? e.getDimensionsInfo ? e.getDimensionsInfo() : e.dimensions.slice() : void 0 }

    function mu(t, e) {
        yu(hT, t, e, YD, "layout")
    }

    function vu(t, e) { yu(hT, t, e, ZD, "visual") }

    function yu(t, e, n, i, a) {
        (ED(e) || zD(e)) && (n = e, e = i);
        var r = ll.wrapStageHandler(n, a);
        return r.__prio = e, r.__raw = n, t.push(r), r
    }

    function xu(t, e) { dT[t] = e }

    function _u(t) { return sM.extend(t) }

    function wu(t) { return qM.extend(t) }

    function bu(t) { return ZM.extend(t) }

    function Su(t) { return el.extend(t) }

    function Iu(t) { n("createCanvas", t) }

    function Mu(t, e, n) { PD.registerMap(t, e, n) }

    function Du(t) { var e = PD.retrieveMap(t); return e && e[0] && { geoJson: e[0].geoJSON, specialAreas: e[0].specialAreas } }

    function Tu(t) { return t }

    function Au(t, e, n, i, a) { this._old = t, this._new = e, this._oldKeyGetter = n || Tu, this._newKeyGetter = i || Tu, this.context = a }

    function Cu(t, e, n, i, a) {
        for (var r = 0; r < t.length; r++) {
            var o = "_ec_" + a[i](t[r], r),
                s = e[o];
            null == s ? (n.push(o), e[o] = r) : (s.length || (e[o] = s = [s]), s.push(r))
        }
    }

    function Lu(t) {
        var e = {},
            n = e.encode = {},
            i = B(),
            a = [],
            r = [],
            o = e.userOutput = { dimensionNames: t.dimensions.slice(), encode: {} };
        f(t.dimensions, function(e) {
            var s = t.getDimensionInfo(e),
                l = s.coordDim;
            if (l) {
                var u = s.coordDimIndex;
                Pu(n, l)[u] = e, s.isExtraCoord || (i.set(l, 1), Nu(s.type) && (a[0] = e), Pu(o.encode, l)[u] = s.index), s.defaultTooltip && r.push(e)
            }
            _T.each(function(t, e) {
                var i = Pu(n, e),
                    a = s.otherDims[e];
                null != a && a !== !1 && (i[a] = s.name)
            })
        });
        var s = [],
            l = {};
        i.each(function(t, e) {
            var i = n[e];
            l[e] = i[0], s = s.concat(i)
        }), e.dataDimsOnCoord = s, e.encodeFirstDimNotExtra = l;
        var u = n.label;
        u && u.length && (a = u.slice());
        var h = n.tooltip;
        return h && h.length ? r = h.slice() : r.length || (r = a.slice()), n.defaultedLabel = a, n.defaultedTooltip = r, e
    }

    function Pu(t, e) { return t.hasOwnProperty(e) || (t[e] = []), t[e] }

    function ku(t) { return "category" === t ? "ordinal" : "time" === t ? "time" : "float" }

    function Nu(t) { return !("ordinal" === t || "time" === t) }

    function Ou(t) { return t._rawCount > 65535 ? DT : AT }

    function Eu(t) { var e = t.constructor; return e === Array ? t.slice() : new e(t) }

    function zu(t, e) { f(CT.concat(e.__wrappedMethods || []), function(n) { e.hasOwnProperty(n) && (t[n] = e[n]) }), t.__wrappedMethods = e.__wrappedMethods, f(LT, function(n) { t[n] = i(e[n]) }), t._calculationInfo = o(e._calculationInfo) }

    function Ru(t, e, n, i, a) {
        var r = MT[e.type],
            o = i - 1,
            s = e.name,
            l = t[s][o];
        if (l && l.length < n) {
            for (var u = new r(Math.min(a - o * n, n)), h = 0; h < l.length; h++) u[h] = l[h];
            t[s][o] = u
        }
        for (var c = i * n; a > c; c += n) t[s].push(new r(Math.min(a - c, n)))
    }

    function Bu(t) {
        var e = t._invertedIndicesMap;
        f(e, function(n, i) {
            var a = t._dimensionInfos[i],
                r = a.ordinalMeta;
            if (r) { n = e[i] = new TT(r.categories.length); for (var o = 0; o < n.length; o++) n[o] = ST; for (var o = 0; o < t._count; o++) n[t.get(i, o)] = o }
        })
    }

    function Vu(t, e, n) {
        var i;
        if (null != e) {
            var a = t._chunkSize,
                r = Math.floor(n / a),
                o = n % a,
                s = t.dimensions[e],
                l = t._storage[s][r];
            if (l) {
                i = l[o];
                var u = t._dimensionInfos[s].ordinalMeta;
                u && u.categories.length && (i = u.categories[i])
            }
        }
        return i
    }

    function Gu(t) { return t }

    function Fu(t) { return t < this._count && t >= 0 ? this._indices[t] : -1 }

    function Wu(t, e) { var n = t._idList[e]; return null == n && (n = Vu(t, t._idDimIdx, e)), null == n && (n = IT + e), n }

    function Hu(t) { return _(t) || (t = [t]), t }

    function Xu(t, e) {
        var n = t.dimensions,
            i = new PT(g(n, t.getDimensionInfo, t), t.hostModel);
        zu(i, t);
        for (var a = i._storage = {}, r = t._storage, o = 0; o < n.length; o++) {
            var s = n[o];
            r[s] && (u(e, s) >= 0 ? (a[s] = Yu(r[s]), i._rawExtent[s] = Uu(), i._extent[s] = null) : a[s] = r[s])
        }
        return i
    }

    function Yu(t) { for (var e = new Array(t.length), n = 0; n < t.length; n++) e[n] = Eu(t[n]); return e }

    function Uu() { return [1 / 0, -1 / 0] }

    function ju(t, e, n) {
        function a(t, e, n) { null != _T.get(e) ? t.otherDims[e] = n : (t.coordDim = e, t.coordDimIndex = n, h.set(e, !0)) }
        Zo.isInstance(e) || (e = Zo.seriesDataToSource(e)), n = n || {}, t = (t || []).slice();
        for (var r = (n.dimsDef || []).slice(), l = B(n.encodeDef), u = B(), h = B(), c = [], d = Zu(e, t, r, n.dimCount), g = 0; d > g; g++) {
            var p = r[g] = o({}, S(r[g]) ? r[g] : { name: r[g] }),
                m = p.name,
                v = c[g] = { otherDims: {} };
            null != m && null == u.get(m) && (v.name = v.displayName = m, u.set(m, g)), null != p.type && (v.type = p.type), null != p.displayName && (v.displayName = p.displayName)
        }
        l.each(function(t, e) {
            if (t = Gi(t).slice(), 1 === t.length && !b(t[0]) && t[0] < 0) return void l.set(e, !1);
            var n = l.set(e, []);
            f(t, function(t, i) { b(t) && (t = u.get(t)), null != t && d > t && (n[i] = t, a(c[t], e, i)) })
        });
        var y = 0;
        f(t, function(t) {
            var e, t, n, r;
            if (b(t)) e = t, t = {};
            else {
                e = t.name;
                var o = t.ordinalMeta;
                t.ordinalMeta = null, t = i(t), t.ordinalMeta = o, n = t.dimsDef, r = t.otherDims, t.name = t.coordDim = t.coordDimIndex = t.dimsDef = t.otherDims = null
            }
            var u = l.get(e);
            if (u !== !1) {
                var u = Gi(u);
                if (!u.length)
                    for (var h = 0; h < (n && n.length || 1); h++) {
                        for (; y < c.length && null != c[y].coordDim;) y++;
                        y < c.length && u.push(y++)
                    }
                f(u, function(i, o) {
                    var l = c[i];
                    if (a(s(l, t), e, o), null == l.name && n) { var u = n[o];!S(u) && (u = { name: u }), l.name = l.displayName = u.name, l.defaultTooltip = u.defaultTooltip }
                    r && s(l.otherDims, r)
                })
            }
        });
        var x = n.generateCoord,
            _ = n.generateCoordCount,
            w = null != _;
        _ = x ? _ || 1 : 0;
        for (var I = x || "value", M = 0; d > M; M++) {
            var v = c[M] = c[M] || {},
                D = v.coordDim;
            null == D && (v.coordDim = qu(I, h, w), v.coordDimIndex = 0, (!x || 0 >= _) && (v.isExtraCoord = !0), _--), null == v.name && (v.name = qu(v.coordDim, u)), null == v.type && rs(e, M, v.name) && (v.type = "ordinal")
        }
        return c
    }

    function Zu(t, e, n, i) {
        var a = Math.max(t.dimensionsDetectCount || 1, e.length, n.length, i || 0);
        return f(e, function(t) {
            var e = t.dimsDef;
            e && (a = Math.max(a, e.length))
        }), a
    }

    function qu(t, e, n) {
        if (n || null != e.get(t)) {
            for (var i = 0; null != e.get(t + i);) i++;
            t += i
        }
        return e.set(t, !0), t
    }

    function Ku(t, e, n) {
        n = n || {};
        var i, a, r, o, s = n.byIndex,
            l = n.stackedCoordDimension,
            u = !(!t || !t.get("stack"));
        if (f(e, function(t, n) { b(t) && (e[n] = t = { name: t }), u && !t.isExtraCoord && (s || i || !t.ordinalMeta || (i = t), a || "ordinal" === t.type || "time" === t.type || l && l !== t.coordDim || (a = t)) }), !a || s || i || (s = !0), a) {
            r = "__\x00ecstackresult", o = "__\x00ecstackedover", i && (i.createInvertedIndices = !0);
            var h = a.coordDim,
                c = a.type,
                d = 0;
            f(e, function(t) { t.coordDim === h && d++ }), e.push({ name: r, coordDim: h, coordDimIndex: d, type: c, isExtraCoord: !0, isCalculationCoord: !0 }), d++, e.push({ name: o, coordDim: o, coordDimIndex: d, type: c, isExtraCoord: !0, isCalculationCoord: !0 })
        }
        return { stackedDimension: a && a.name, stackedByDimension: i && i.name, isStackedByIndex: s, stackedOverDimension: o, stackResultDimension: r }
    }

    function $u(t, e) { return !!e && e === t.getCalculationInfo("stackedDimension") }

    function Ju(t, e) { return $u(t, e) ? t.getCalculationInfo("stackResultDimension") : e }

    function Qu(t, e, n) {
        n = n || {}, Zo.isInstance(t) || (t = Zo.seriesDataToSource(t));
        var i, a = e.get("coordinateSystem"),
            r = ps.get(a),
            o = Uo(e);
        o && (i = g(o.coordSysDims, function(t) {
            var e = { name: t },
                n = o.axisMap.get(t);
            if (n) {
                var i = n.get("type");
                e.type = ku(i)
            }
            return e
        })), i || (i = r && (r.getDimensionsInfo ? r.getDimensionsInfo() : r.dimensions.slice()) || ["x", "y"]);
        var s, l, u = OT(t, { coordDimensions: i, generateCoord: n.generateCoord });
        o && f(u, function(t, e) {
            var n = t.coordDim,
                i = o.categoryAxisMap.get(n);
            i && (null == s && (s = e), t.ordinalMeta = i.getOrdinalMeta()), null != t.otherDims.itemName && (l = !0)
        }), l || null == s || (u[s].otherDims.itemName = 0);
        var h = Ku(e, u),
            c = new PT(u, e);
        c.setCalculationInfo(h);
        var d = null != s && th(t) ? function(t, e, n, i) { return i === s ? n : this.defaultDimValueGetter(t, e, n, i) } : null;
        return c.hasItemOption = !1, c.initData(t, null, d), c
    }

    function th(t) { if (t.sourceFormat === fM) { var e = eh(t.data || []); return null != e && !_(Wi(e)) } }

    function eh(t) { for (var e = 0; e < t.length && null == t[e];) e++; return t[e] }

    function nh(t) { this._setting = t || {}, this._extent = [1 / 0, -1 / 0], this._interval = 0, this.init && this.init.apply(this, arguments) }

    function ih(t) { this.categories = t.categories || [], this._needCollect = t.needCollect, this._deduplication = t.deduplication, this._map }

    function ah(t) { return t._map || (t._map = B(t.categories)) }

    function rh(t) { return S(t) && null != t.value ? t.value : t + "" }

    function oh(t, e, n, i) {
        var a = {},
            r = t[1] - t[0],
            o = a.interval = wo(r / e, !0);
        null != n && n > o && (o = a.interval = n), null != i && o > i && (o = a.interval = i);
        var s = a.intervalPrecision = sh(o),
            l = a.niceTickExtent = [BT(Math.ceil(t[0] / o) * o, s), BT(Math.floor(t[1] / o) * o, s)];
        return uh(l, t), a
    }

    function sh(t) { return fo(t) + 2 }

    function lh(t, e, n) { t[e] = Math.max(Math.min(t[e], n[1]), n[0]) }

    function uh(t, e) {!isFinite(t[0]) && (t[0] = e[0]), !isFinite(t[1]) && (t[1] = e[1]), lh(t, 0, e), lh(t, 1, e), t[0] > t[1] && (t[0] = t[1]) }

    function hh(t, e, n, i) {
        var a = [];
        if (!t) return a;
        var r = 1e4;
        e[0] < n[0] && a.push(e[0]);
        for (var o = n[0]; o <= n[1] && (a.push(o), o = BT(o + t, i), o !== a[a.length - 1]);)
            if (a.length > r) return [];
        return e[1] > (a.length ? a[a.length - 1] : n[1]) && a.push(e[1]), a
    }

    function ch(t) { return t.get("stack") || FT + t.seriesIndex }

    function dh(t) { return t.dim + t.index }

    function fh(t) {
        var e = [],
            n = t.axis,
            i = "axis0";
        if ("category" === n.type) {
            for (var a = n.getBandWidth(), r = 0; r < t.count; r++) e.push(s({ bandWidth: a, axisKey: i, stackId: FT + r }, t));
            for (var o = vh(e), l = [], r = 0; r < t.count; r++) {
                var u = o[i][FT + r];
                u.offsetCenter = u.offset + u.width / 2, l.push(u)
            }
            return l
        }
    }

    function gh(t, e) { var n = []; return e.eachSeriesByType(t, function(t) { _h(t) && !wh(t) && n.push(t) }), n }

    function ph(t) {
        var e = {};
        f(t, function(t) {
            var n = t.coordinateSystem,
                i = n.getBaseAxis();
            if ("time" === i.type || "value" === i.type)
                for (var a = t.getData(), r = i.dim + "_" + i.index, o = a.mapDimension(i.dim), s = 0, l = a.count(); l > s; ++s) {
                    var u = a.get(o, s);
                    e[r] ? e[r].push(u) : e[r] = [u]
                }
        });
        var n = [];
        for (var i in e)
            if (e.hasOwnProperty(i)) {
                var a = e[i];
                if (a) {
                    a.sort(function(t, e) { return t - e });
                    for (var r = null, o = 1; o < a.length; ++o) {
                        var s = a[o] - a[o - 1];
                        s > 0 && (r = null === r ? s : Math.min(r, s))
                    }
                    n[i] = r
                }
            }
        return n
    }

    function mh(t) {
        var e = ph(t),
            n = [];
        return f(t, function(t) {
            var i, a = t.coordinateSystem,
                r = a.getBaseAxis(),
                o = r.getExtent();
            if ("category" === r.type) i = r.getBandWidth();
            else if ("value" === r.type || "time" === r.type) {
                var s = r.dim + "_" + r.index,
                    l = e[s],
                    u = Math.abs(o[1] - o[0]),
                    h = r.scale.getExtent(),
                    c = Math.abs(h[1] - h[0]);
                i = l ? u / c * l : u
            } else {
                var d = t.getData();
                i = Math.abs(o[1] - o[0]) / d.count()
            }
            var f = lo(t.get("barWidth"), i),
                g = lo(t.get("barMaxWidth"), i),
                p = lo(t.get("barMinWidth") || 1, i),
                m = t.get("barGap"),
                v = t.get("barCategoryGap");
            n.push({ bandWidth: i, barWidth: f, barMaxWidth: g, barMinWidth: p, barGap: m, barCategoryGap: v, axisKey: dh(r), stackId: ch(t) })
        }), vh(n)
    }

    function vh(t) {
        var e = {};
        f(t, function(t) {
            var n = t.axisKey,
                i = t.bandWidth,
                a = e[n] || { bandWidth: i, remainedWidth: i, autoWidthCount: 0, categoryGap: "20%", gap: "30%", stacks: {} },
                r = a.stacks;
            e[n] = a;
            var o = t.stackId;
            r[o] || a.autoWidthCount++, r[o] = r[o] || { width: 0, maxWidth: 0 };
            var s = t.barWidth;
            s && !r[o].width && (r[o].width = s, s = Math.min(a.remainedWidth, s), a.remainedWidth -= s);
            var l = t.barMaxWidth;
            l && (r[o].maxWidth = l);
            var u = t.barMinWidth;
            u && (r[o].minWidth = u);
            var h = t.barGap;
            null != h && (a.gap = h);
            var c = t.barCategoryGap;
            null != c && (a.categoryGap = c)
        });
        var n = {};
        return f(e, function(t, e) {
            n[e] = {};
            var i = t.stacks,
                a = t.bandWidth,
                r = lo(t.categoryGap, a),
                o = lo(t.gap, 1),
                s = t.remainedWidth,
                l = t.autoWidthCount,
                u = (s - r) / (l + (l - 1) * o);
            u = Math.max(u, 0), f(i, function(t) {
                var e = t.maxWidth,
                    n = t.minWidth;
                if (t.width) {
                    var i = t.width;
                    e && (i = Math.min(i, e)), n && (i = Math.max(i, n)), t.width = i, s -= i, l--
                } else {
                    var i = u;
                    e && i > e && (i = Math.min(e, s)), n && n > i && (i = n), i !== u && (t.width = i, s -= i, l--)
                }
            }), u = (s - r) / (l + (l - 1) * o), u = Math.max(u, 0);
            var h, c = 0;
            f(i, function(t) { t.width || (t.width = u), h = t, c += t.width * (1 + o) }), h && (c -= h.width * o);
            var d = -c / 2;
            f(i, function(t, i) { n[e][i] = n[e][i] || { bandWidth: a, offset: d, width: t.width }, d += t.width * (1 + o) })
        }), n
    }

    function yh(t, e, n) { if (t && e) { var i = t[dh(e)]; return null != i && null != n && (i = i[ch(n)]), i } }

    function xh(t, e) {
        var n = gh(t, e),
            i = mh(n),
            a = {};
        f(n, function(t) {
            var e = t.getData(),
                n = t.coordinateSystem,
                r = n.getBaseAxis(),
                o = ch(t),
                s = i[dh(r)][o],
                l = s.offset,
                u = s.width,
                h = n.getOtherAxis(r),
                c = t.get("barMinHeight") || 0;
            a[o] = a[o] || [], e.setLayout({ bandWidth: s.bandWidth, offset: l, size: u });
            for (var d = e.mapDimension(h.dim), f = e.mapDimension(r.dim), g = $u(e, d), p = h.isHorizontal(), m = bh(r, h, g), v = 0, y = e.count(); y > v; v++) {
                var x = e.get(d, v),
                    _ = e.get(f, v);
                if (!isNaN(x) && !isNaN(_)) {
                    var w = x >= 0 ? "p" : "n",
                        b = m;
                    g && (a[o][_] || (a[o][_] = { p: m, n: m }), b = a[o][_][w]);
                    var S, I, M, D;
                    if (p) {
                        var T = n.dataToPoint([x, _]);
                        S = b, I = T[1] + l, M = T[0] - m, D = u, Math.abs(M) < c && (M = (0 > M ? -1 : 1) * c), g && (a[o][_][w] += M)
                    } else {
                        var T = n.dataToPoint([_, x]);
                        S = T[0] + l, I = b, M = u, D = T[1] - m, Math.abs(D) < c && (D = (0 >= D ? -1 : 1) * c), g && (a[o][_][w] += D)
                    }
                    e.setItemLayout(v, { x: S, y: I, width: M, height: D })
                }
            }
        }, this)
    }

    function _h(t) { return t.coordinateSystem && "cartesian2d" === t.coordinateSystem.type }

    function wh(t) { return t.pipelineContext && t.pipelineContext.large }

    function bh(t, e) { return e.toGlobalCoord(e.dataToCoord("log" === e.type ? 1 : 0)) }

    function Sh(t, e) { return aA(t, iA(e)) }

    function Ih(t, e) {
        var n, i, a, r = t.type,
            o = e.getMin(),
            s = e.getMax(),
            l = null != o,
            u = null != s,
            h = t.getExtent();
        "ordinal" === r ? n = e.getCategories().length : (i = e.get("boundaryGap"), _(i) || (i = [i || 0, i || 0]), "boolean" == typeof i[0] && (i = [0, 0]), i[0] = lo(i[0], 1), i[1] = lo(i[1], 1), a = h[1] - h[0] || Math.abs(h[0])), null == o && (o = "ordinal" === r ? n ? 0 : 0 / 0 : h[0] - i[0] * a), null == s && (s = "ordinal" === r ? n ? n - 1 : 0 / 0 : h[1] + i[1] * a), "dataMin" === o ? o = h[0] : "function" == typeof o && (o = o({ min: h[0], max: h[1] })), "dataMax" === s ? s = h[1] : "function" == typeof s && (s = s({ min: h[0], max: h[1] })), (null == o || !isFinite(o)) && (o = 0 / 0), (null == s || !isFinite(s)) && (s = 0 / 0), t.setBlank(T(o) || T(s) || "ordinal" === r && !t.getOrdinalMeta().categories.length), e.getNeedCrossZero() && (o > 0 && s > 0 && !l && (o = 0), 0 > o && 0 > s && !u && (s = 0));
        var c = e.ecModel;
        if (c && "time" === r) {
            var d, g = gh("bar", c);
            if (f(g, function(t) { d |= t.getBaseAxis() === e.axis }), d) {
                var p = mh(g),
                    m = Mh(o, s, e, p);
                o = m.min, s = m.max
            }
        }
        return [o, s]
    }

    function Mh(t, e, n, i) {
        var a = n.axis.getExtent(),
            r = a[1] - a[0],
            o = yh(i, n.axis);
        if (void 0 === o) return { min: t, max: e };
        var s = 1 / 0;
        f(o, function(t) { s = Math.min(t.offset, s) });
        var l = -1 / 0;
        f(o, function(t) { l = Math.max(t.offset + t.width, l) }), s = Math.abs(s), l = Math.abs(l);
        var u = s + l,
            h = e - t,
            c = 1 - (s + l) / r,
            d = h / c - h;
        return e += d * (l / u), t -= d * (s / u), { min: t, max: e }
    }

    function Dh(t, e) {
        var n = Ih(t, e),
            i = null != e.getMin(),
            a = null != e.getMax(),
            r = e.get("splitNumber");
        "log" === t.type && (t.base = e.get("logBase"));
        var o = t.type;
        t.setExtent(n[0], n[1]), t.niceExtent({ splitNumber: r, fixMin: i, fixMax: a, minInterval: "interval" === o || "time" === o ? e.get("minInterval") : null, maxInterval: "interval" === o || "time" === o ? e.get("maxInterval") : null });
        var s = e.get("interval");
        null != s && t.setInterval && t.setInterval(s)
    }

    function Th(t, e) {
        if (e = e || t.get("type")) switch (e) {
            case "category":
                return new RT(t.getOrdinalMeta ? t.getOrdinalMeta() : t.getCategories(), [1 / 0, -1 / 0]);
            case "value":
                return new GT;
            default:
                return (nh.getClass(e) || GT).create(t)
        }
    }

    function Ah(t) {
        var e = t.scale.getExtent(),
            n = e[0],
            i = e[1];
        return !(n > 0 && i > 0 || 0 > n && 0 > i)
    }

    function Ch(t) {
        var e = t.getLabelModel().get("formatter"),
            n = "category" === t.type ? t.scale.getExtent()[0] : null;
        return "string" == typeof e ? e = function(e) { return function(n) { return n = t.scale.getLabel(n), e.replace("{value}", null != n ? n : "") } }(e) : "function" == typeof e ? function(i, a) { return null != n && (a = i - n), e(Lh(t, i), a) } : function(e) { return t.scale.getLabel(e) }
    }

    function Lh(t, e) { return "category" === t.type ? t.scale.getLabel(e) : e }

    function Ph(t) {
        var e = t.model,
            n = t.scale;
        if (e.get("axisLabel.show") && !n.isBlank()) {
            var i, a, r = "category" === t.type,
                o = n.getExtent();
            r ? a = n.count() : (i = n.getTicks(), a = i.length);
            var s, l = t.getLabelModel(),
                u = Ch(t),
                h = 1;
            a > 40 && (h = Math.ceil(a / 40));
            for (var c = 0; a > c; c += h) {
                var d = i ? i[c] : o[0] + c,
                    f = u(d),
                    g = l.getTextRect(f),
                    p = kh(g, l.get("rotate") || 0);
                s ? s.union(p) : s = p
            }
            return s
        }
    }

    function kh(t, e) {
        var n = e * Math.PI / 180,
            i = t.plain(),
            a = i.width,
            r = i.height,
            o = a * Math.cos(n) + r * Math.sin(n),
            s = a * Math.sin(n) + r * Math.cos(n),
            l = new bn(i.x, i.y, o, s);
        return l
    }

    function Nh(t) { var e = t.get("interval"); return null == e ? "auto" : e }

    function Oh(t) { return "category" === t.type && 0 === Nh(t.getLabelModel()) }

    function Eh(t, e) {
        if ("image" !== this.type) {
            var n = this.style,
                i = this.shape;
            i && "line" === i.symbolType ? n.stroke = t : this.__isEmptyBrush ? (n.stroke = t, n.fill = e || "#fff") : (n.fill && (n.fill = t), n.stroke && (n.stroke = t)), this.dirty(!1)
        }
    }

    function zh(t, e, n, i, a, r, o) {
        var s = 0 === t.indexOf("empty");
        s && (t = t.substr(5, 1).toLowerCase() + t.substr(6));
        var l;
        return l = 0 === t.indexOf("image://") ? sr(t.slice(8), new bn(e, n, i, a), o ? "center" : "cover") : 0 === t.indexOf("path://") ? or(t.slice(7), {}, new bn(e, n, i, a), o ? "center" : "cover") : new yA({ shape: { symbolType: t, x: e, y: n, width: i, height: a } }), l.__isEmptyBrush = s, l.setColor = Eh, l.setColor(r), l
    }

    function Rh(t) { return Qu(t.getSource(), t) }

    function Bh(t, e) {
        var n = e;
        to.isInstance(e) || (n = new to(e), c(n, hA));
        var i = Th(n);
        return i.setExtent(t[0], t[1]), Dh(i, n), i
    }

    function Vh(t) { c(t, hA) }

    function Gh(t, e) { return Math.abs(t - e) < wA }

    function Fh(t, e, n) {
        var i = 0,
            a = t[0];
        if (!a) return !1;
        for (var r = 1; r < t.length; r++) {
            var o = t[r];
            i += Na(a[0], a[1], o[0], o[1], e, n), a = o
        }
        var s = t[0];
        return Gh(a[0], s[0]) && Gh(a[1], s[1]) || (i += Na(a[0], a[1], s[0], s[1], e, n)), 0 !== i
    }

    function Wh(t, e, n) {
        if (this.name = t, this.geometries = e, n) n = [n[0], n[1]];
        else {
            var i = this.getBoundingRect();
            n = [i.x + i.width / 2, i.y + i.height / 2]
        }
        this.center = n
    }

    function Hh(t) {
        if (!t.UTF8Encoding) return t;
        var e = t.UTF8Scale;
        null == e && (e = 1024);
        for (var n = t.features, i = 0; i < n.length; i++)
            for (var a = n[i], r = a.geometry, o = r.coordinates, s = r.encodeOffsets, l = 0; l < o.length; l++) {
                var u = o[l];
                if ("Polygon" === r.type) o[l] = Xh(u, s[l], e);
                else if ("MultiPolygon" === r.type)
                    for (var h = 0; h < u.length; h++) {
                        var c = u[h];
                        u[h] = Xh(c, s[l][h], e)
                    }
            }
        return t.UTF8Encoding = !1, t
    }

    function Xh(t, e, n) {
        for (var i = [], a = e[0], r = e[1], o = 0; o < t.length; o += 2) {
            var s = t.charCodeAt(o) - 64,
                l = t.charCodeAt(o + 1) - 64;
            s = s >> 1 ^ -(1 & s), l = l >> 1 ^ -(1 & l), s += a, l += r, a = s, r = l, i.push([s / n, l / n])
        }
        return i
    }

    function Yh(t) { return "category" === t.type ? jh(t) : Kh(t) }

    function Uh(t, e) { return "category" === t.type ? qh(t, e) : { ticks: t.scale.getTicks() } }

    function jh(t) {
        var e = t.getLabelModel(),
            n = Zh(t, e);
        return !e.get("show") || t.scale.isBlank() ? { labels: [], labelCategoryInterval: n.labelCategoryInterval } : n
    }

    function Zh(t, e) {
        var n = $h(t, "labels"),
            i = Nh(e),
            a = Jh(n, i);
        if (a) return a;
        var r, o;
        return w(i) ? r = ac(t, i) : (o = "auto" === i ? tc(t) : i, r = ic(t, o)), Qh(n, i, { labels: r, labelCategoryInterval: o })
    }

    function qh(t, e) {
        var n = $h(t, "ticks"),
            i = Nh(e),
            a = Jh(n, i);
        if (a) return a;
        var r, o;
        if ((!e.get("show") || t.scale.isBlank()) && (r = []), w(i)) r = ac(t, i, !0);
        else if ("auto" === i) {
            var s = Zh(t, t.getLabelModel());
            o = s.labelCategoryInterval, r = g(s.labels, function(t) { return t.tickValue })
        } else o = i, r = ic(t, o, !0);
        return Qh(n, i, { ticks: r, tickCategoryInterval: o })
    }

    function Kh(t) {
        var e = t.scale.getTicks(),
            n = Ch(t);
        return { labels: g(e, function(e, i) { return { formattedLabel: n(e, i), rawLabel: t.scale.getLabel(e), tickValue: e } }) }
    }

    function $h(t, e) { return SA(t)[e] || (SA(t)[e] = []) }

    function Jh(t, e) {
        for (var n = 0; n < t.length; n++)
            if (t[n].key === e) return t[n].value
    }

    function Qh(t, e, n) { return t.push({ key: e, value: n }), n }

    function tc(t) { var e = SA(t).autoInterval; return null != e ? e : SA(t).autoInterval = t.calculateCategoryInterval() }

    function ec(t) {
        var e = nc(t),
            n = Ch(t),
            i = (e.axisRotate - e.labelRotate) / 180 * Math.PI,
            a = t.scale,
            r = a.getExtent(),
            o = a.count();
        if (r[1] - r[0] < 1) return 0;
        var s = 1;
        o > 40 && (s = Math.max(1, Math.floor(o / 40)));
        for (var l = r[0], u = t.dataToCoord(l + 1) - t.dataToCoord(l), h = Math.abs(u * Math.cos(i)), c = Math.abs(u * Math.sin(i)), d = 0, f = 0; l <= r[1]; l += s) {
            var g = 0,
                p = 0,
                m = Fn(n(l), e.font, "center", "top");
            g = 1.3 * m.width, p = 1.3 * m.height, d = Math.max(d, g, 7), f = Math.max(f, p, 7)
        }
        var v = d / h,
            y = f / c;
        isNaN(v) && (v = 1 / 0), isNaN(y) && (y = 1 / 0);
        var x = Math.max(0, Math.floor(Math.min(v, y))),
            _ = SA(t.model),
            w = t.getExtent(),
            b = _.lastAutoInterval,
            S = _.lastTickCount;
        return null != b && null != S && Math.abs(b - x) <= 1 && Math.abs(S - o) <= 1 && b > x && _.axisExtend0 === w[0] && _.axisExtend1 === w[1] ? x = b : (_.lastTickCount = o, _.lastAutoInterval = x, _.axisExtend0 = w[0], _.axisExtend1 = w[1]), x
    }

    function nc(t) { var e = t.getLabelModel(); return { axisRotate: t.getRotate ? t.getRotate() : t.isHorizontal && !t.isHorizontal() ? 90 : 0, labelRotate: e.get("rotate") || 0, font: e.getFont() } }

    function ic(t, e, n) {
        function i(t) { l.push(n ? t : { formattedLabel: a(t), rawLabel: r.getLabel(t), tickValue: t }) }
        var a = Ch(t),
            r = t.scale,
            o = r.getExtent(),
            s = t.getLabelModel(),
            l = [],
            u = Math.max((e || 0) + 1, 1),
            h = o[0],
            c = r.count();
        0 !== h && u > 1 && c / u > 2 && (h = Math.round(Math.ceil(h / u) * u));
        var d = Oh(t),
            f = s.get("showMinLabel") || d,
            g = s.get("showMaxLabel") || d;
        f && h !== o[0] && i(o[0]);
        for (var p = h; p <= o[1]; p += u) i(p);
        return g && p - u !== o[1] && i(o[1]), l
    }

    function ac(t, e, n) {
        var i = t.scale,
            a = Ch(t),
            r = [];
        return f(i.getTicks(), function(t) {
            var o = i.getLabel(t);
            e(t, o) && r.push(n ? t : { formattedLabel: a(t), rawLabel: o, tickValue: t })
        }), r
    }

    function rc(t, e) {
        var n = t[1] - t[0],
            i = e,
            a = n / i / 2;
        t[0] += a, t[1] -= a
    }

    function oc(t, e, n, i) {
        function a(t, e) { return t = uo(t), e = uo(e), d ? t > e : e > t }
        var r = e.length;
        if (t.onBand && !n && r) {
            var o, s, l = t.getExtent();
            if (1 === r) e[0].coord = l[0], o = e[1] = { coord: l[0] };
            else {
                var u = e[r - 1].tickValue - e[0].tickValue,
                    h = (e[r - 1].coord - e[0].coord) / u;
                f(e, function(t) { t.coord -= h / 2 });
                var c = t.scale.getExtent();
                s = 1 + c[1] - e[r - 1].tickValue, o = { coord: e[r - 1].coord + h * s }, e.push(o)
            }
            var d = l[0] > l[1];
            a(e[0].coord, l[0]) && (i ? e[0].coord = l[0] : e.shift()), i && a(l[0], e[0].coord) && e.unshift({ coord: l[0] }), a(l[1], o.coord) && (i ? o.coord = l[1] : e.pop()), i && a(o.coord, l[1]) && e.push({ coord: l[1] })
        }
    }

    function sc(t) { return this._axes[t] }

    function lc(t) { CA.call(this, t) }

    function uc(t, e) { return e.type || (e.data ? "category" : "value") }

    function hc(t, e) { return t.getCoordSysModel() === e }

    function cc(t, e, n) { this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this._initCartesian(t, e, n), this.model = t }

    function dc(t, e, n, i) {
        function a(t) { return t.dim + "_" + t.index }
        n.getAxesOnZeroOf = function() { return r ? [r] : [] };
        var r, o = t[e],
            s = n.model,
            l = s.get("axisLine.onZero"),
            u = s.get("axisLine.onZeroAxisIndex");
        if (l) {
            if (null != u) fc(o[u]) && (r = o[u]);
            else
                for (var h in o)
                    if (o.hasOwnProperty(h) && fc(o[h]) && !i[a(o[h])]) { r = o[h]; break }
            r && (i[a(r)] = !0)
        }
    }

    function fc(t) { return t && "category" !== t.type && "time" !== t.type && Ah(t) }

    function gc(t, e) {
        var n = t.getExtent(),
            i = n[0] + n[1];
        t.toGlobalCoord = "x" === t.dim ? function(t) { return t + e } : function(t) { return i - t + e }, t.toLocalCoord = "x" === t.dim ? function(t) { return t - e } : function(t) { return i - t + e }
    }

    function pc(t) { return g(BA, function(e) { var n = t.getReferringComponents(e)[0]; return n }) }

    function mc(t) { return "cartesian2d" === t.get("coordinateSystem") }

    function vc(t, e) {
        var n = t.mapDimension("defaultedLabel", !0),
            i = n.length;
        if (1 === i) return Fs(t, e, n[0]);
        if (i) {
            for (var a = [], r = 0; r < n.length; r++) {
                var o = Fs(t, e, n[r]);
                a.push(o)
            }
            return a.join(" ")
        }
    }

    function yc(t, e, n, i, a, r) {
        var o = n.getModel("label"),
            s = n.getModel("emphasis.label");
        Cr(t, e, o, s, { labelFetcher: a, labelDataIndex: r, defaultText: vc(a.getData(), r), isRectText: !0, autoColor: i }), xc(t), xc(e)
    }

    function xc(t, e) { "outside" === t.textPosition && (t.textPosition = e) }

    function _c(t, e, n) {
        var i = t.getArea(),
            a = t.getBaseAxis().isHorizontal(),
            r = i.x,
            o = i.y,
            s = i.width,
            l = i.height,
            u = n.get("lineStyle.width") || 2;
        r -= u / 2, o -= u / 2, s += u, l += u;
        var h = new cI({ shape: { x: r, y: o, width: s, height: l } });
        return e && (h.shape[a ? "width" : "height"] = 0, Wr(h, { shape: { width: s, height: l } }, n)), h
    }

    function wc(t, e, n) {
        var i = t.getArea(),
            a = new iI({ shape: { cx: uo(t.cx, 1), cy: uo(t.cy, 1), r0: uo(i.r0, 1), r: uo(i.r, 1), startAngle: i.startAngle, endAngle: i.endAngle, clockwise: i.clockwise } });
        return e && (a.shape.endAngle = i.startAngle, Wr(a, { shape: { endAngle: i.endAngle } }, n)), a
    }

    function bc(t, e, n) { return t ? "polar" === t.type ? wc(t, e, n) : "cartesian2d" === t.type ? _c(t, e, n) : null : null }

    function Sc(t, e) {
        var n = t.getArea && t.getArea();
        if ("cartesian2d" === t.type) {
            var i = t.getBaseAxis();
            if ("category" !== i.type || !i.onBand) {
                var a = e.getLayout("bandWidth");
                i.isHorizontal() ? (n.x -= a, n.width += 2 * a) : (n.y -= a, n.height += 2 * a)
            }
        }
        return n
    }

    function Ic(t, e, n) { n.style.text = null, Fr(n, { shape: { width: 0 } }, e, t, function() { n.parent && n.parent.remove(n) }) }

    function Mc(t, e, n) { n.style.text = null, Fr(n, { shape: { r: n.shape.r0 } }, e, t, function() { n.parent && n.parent.remove(n) }) }

    function Dc(t, e, n, i, a, r, o, l) {
        var u = e.getItemVisual(n, "color"),
            h = e.getItemVisual(n, "opacity"),
            c = i.getModel("itemStyle"),
            d = i.getModel("emphasis.itemStyle").getBarItemStyle();
        l || t.setShape("r", c.get("barBorderRadius") || 0), t.useStyle(s({ fill: u, opacity: h }, c.getBarItemStyle()));
        var f = i.getShallow("cursor");
        f && t.attr("cursor", f);
        var g = o ? a.height > 0 ? "bottom" : "top" : a.width > 0 ? "left" : "right";
        l || yc(t.style, d, i, u, r, n, g), Mr(t, d)
    }

    function Tc(t, e) { var n = t.get(HA) || 0; return Math.min(n, Math.abs(e.width), Math.abs(e.height)) }

    function Ac(t, e, n) {
        var i = t.getData(),
            a = [],
            r = i.getLayout("valueAxisHorizontal") ? 1 : 0;
        a[1 - r] = i.getLayout("valueAxisStart");
        var o = new KA({ shape: { points: i.getLayout("largePoints") }, incremental: !!n, __startPoint: a, __baseDimIdx: r, __largeDataIndices: i.getLayout("largeDataIndices"), __barWidth: i.getLayout("barWidth") });
        e.add(o), Lc(o, t, i), o.seriesIndex = t.seriesIndex, t.get("silent") || (o.on("mousedown", $A), o.on("mousemove", $A))
    }

    function Cc(t, e, n) {
        var i = t.__baseDimIdx,
            a = 1 - i,
            r = t.shape.points,
            o = t.__largeDataIndices,
            s = Math.abs(t.__barWidth / 2),
            l = t.__startPoint[a];
        XA[0] = e, XA[1] = n;
        for (var u = XA[i], h = XA[1 - i], c = u - s, d = u + s, f = 0, g = r.length / 2; g > f; f++) {
            var p = 2 * f,
                m = r[p + i],
                v = r[p + a];
            if (m >= c && d >= m && (v >= l ? h >= l && v >= h : h >= v && l >= h)) return o[f]
        }
        return -1
    }

    function Lc(t, e, n) {
        var i = n.getVisual("borderColor") || n.getVisual("color"),
            a = e.getModel("itemStyle").getItemStyle(["color", "borderColor"]);
        t.useStyle(a), t.style.fill = null, t.style.stroke = i, t.style.lineWidth = n.getLayout("barWidth")
    }

    function Pc(t, e, n, i) {
        var a, r, o = mo(n - t.rotation),
            s = i[0] > i[1],
            l = "start" === e && !s || "start" !== e && s;
        return vo(o - JA / 2) ? (r = l ? "bottom" : "top", a = "center") : vo(o - 1.5 * JA) ? (r = l ? "top" : "bottom", a = "center") : (r = "middle", a = 1.5 * JA > o && o > JA / 2 ? l ? "left" : "right" : l ? "right" : "left"), { rotation: o, textAlign: a, textVerticalAlign: r }
    }

    function kc(t, e, n) {
        if (!Oh(t.axis)) {
            var i = t.get("axisLabel.showMinLabel"),
                a = t.get("axisLabel.showMaxLabel");
            e = e || [], n = n || [];
            var r = e[0],
                o = e[1],
                s = e[e.length - 1],
                l = e[e.length - 2],
                u = n[0],
                h = n[1],
                c = n[n.length - 1],
                d = n[n.length - 2];
            i === !1 ? (Nc(r), Nc(u)) : Oc(r, o) && (i ? (Nc(o), Nc(h)) : (Nc(r), Nc(u))), a === !1 ? (Nc(s), Nc(c)) : Oc(l, s) && (a ? (Nc(l), Nc(d)) : (Nc(s), Nc(c)))
        }
    }

    function Nc(t) { t && (t.ignore = !0) }

    function Oc(t, e) {
        var n = t && t.getBoundingRect().clone(),
            i = e && e.getBoundingRect().clone();
        if (n && i) { var a = Ce([]); return Ne(a, a, -t.rotation), n.applyTransform(Pe([], a, t.getLocalTransform())), i.applyTransform(Pe([], a, e.getLocalTransform())), n.intersect(i) }
    }

    function Ec(t) { return "middle" === t || "center" === t }

    function zc(t, e, n) {
        var i = e.axis;
        if (e.get("axisTick.show") && !i.scale.isBlank()) {
            for (var a = e.getModel("axisTick"), r = a.getModel("lineStyle"), o = a.get("length"), l = i.getTicksCoords(), u = [], h = [], c = t._transform, d = [], f = 0; f < l.length; f++) {
                var g = l[f].coord;
                u[0] = g, u[1] = 0, h[0] = g, h[1] = n.tickDirection * o, c && (re(u, u, c), re(h, h, c));
                var p = new fI({ anid: "tick_" + l[f].tickValue, subPixelOptimize: !0, shape: { x1: u[0], y1: u[1], x2: h[0], y2: h[1] }, style: s(r.getLineStyle(), { stroke: e.get("axisLine.lineStyle.color") }), z2: 2, silent: !0 });
                t.group.add(p), d.push(p)
            }
            return d
        }
    }

    function Rc(t, e, n) {
        var i = e.axis,
            a = A(n.axisLabelShow, e.get("axisLabel.show"));
        if (a && !i.scale.isBlank()) {
            var r = e.getModel("axisLabel"),
                o = r.get("margin"),
                s = i.getViewLabels(),
                l = (A(n.labelRotate, r.get("rotate")) || 0) * JA / 180,
                u = nC(n.rotation, l, n.labelDirection),
                h = e.getCategories && e.getCategories(!0),
                c = [],
                d = iC(e),
                g = e.get("triggerEvent");
            return f(s, function(a, s) {
                var l = a.tickValue,
                    f = a.formattedLabel,
                    p = a.rawLabel,
                    m = r;
                h && h[l] && h[l].textStyle && (m = new to(h[l].textStyle, r, e.ecModel));
                var v = m.getTextColor() || e.get("axisLine.lineStyle.color"),
                    y = i.dataToCoord(l),
                    x = [y, n.labelOffset + n.labelDirection * o],
                    _ = new QS({ anid: "label_" + l, position: x, rotation: u.rotation, silent: d, z2: 10 });
                Pr(_.style, m, { text: f, textAlign: m.getShallow("align", !0) || u.textAlign, textVerticalAlign: m.getShallow("verticalAlign", !0) || m.getShallow("baseline", !0) || u.textVerticalAlign, textFill: "function" == typeof v ? v("category" === i.type ? p : "value" === i.type ? l + "" : l, s) : v }), g && (_.eventData = eC(e), _.eventData.targetType = "axisLabel", _.eventData.value = p), t._dumbGroup.add(_), _.updateTransform(), c.push(_), t.group.add(_), _.decomposeTransform()
            }), c
        }
    }

    function Bc(t, e) { var n = { axesInfo: {}, seriesInvolved: !1, coordSysAxesInfo: {}, coordSysMap: {} }; return Vc(n, t, e), n.seriesInvolved && Fc(n, t), n }

    function Vc(t, e, n) {
        var i = e.getComponent("tooltip"),
            a = e.getComponent("axisPointer"),
            r = a.get("link", !0) || [],
            o = [];
        aC(n.getCoordinateSystems(), function(n) {
            function s(i, s, l) {
                var h = l.model.getModel("axisPointer", a),
                    d = h.get("show");
                if (d && ("auto" !== d || i || jc(h))) {
                    null == s && (s = h.get("triggerTooltip")), h = i ? Gc(l, c, a, e, i, s) : h;
                    var f = h.get("snap"),
                        g = Zc(l.model),
                        p = s || f || "category" === l.type,
                        m = t.axesInfo[g] = { key: g, axis: l, coordSys: n, axisPointerModel: h, triggerTooltip: s, involveSeries: p, snap: f, useHandle: jc(h), seriesModels: [] };
                    u[g] = m, t.seriesInvolved |= p;
                    var v = Wc(r, l);
                    if (null != v) {
                        var y = o[v] || (o[v] = { axesInfo: {} });
                        y.axesInfo[g] = m, y.mapper = r[v].mapper, m.linkGroup = y
                    }
                }
            }
            if (n.axisPointerEnabled) {
                var l = Zc(n.model),
                    u = t.coordSysAxesInfo[l] = {};
                t.coordSysMap[l] = n;
                var h = n.model,
                    c = h.getModel("tooltip", i);
                if (aC(n.getAxes(), rC(s, !1, null)), n.getTooltipAxes && i && c.get("show")) {
                    var d = "axis" === c.get("trigger"),
                        f = "cross" === c.get("axisPointer.type"),
                        g = n.getTooltipAxes(c.get("axisPointer.axis"));
                    (d || f) && aC(g.baseAxes, rC(s, f ? "cross" : !0, d)), f && aC(g.otherAxes, rC(s, "cross", !1))
                }
            }
        })
    }

    function Gc(t, e, n, a, r, o) {
        var l = e.getModel("axisPointer"),
            u = {};
        aC(["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], function(t) { u[t] = i(l.get(t)) }), u.snap = "category" !== t.type && !!o, "cross" === l.get("type") && (u.type = "line");
        var h = u.label || (u.label = {});
        if (null == h.show && (h.show = !1), "cross" === r) {
            var c = l.get("label.show");
            if (h.show = null != c ? c : !0, !o) {
                var d = u.lineStyle = l.get("crossStyle");
                d && s(h, d.textStyle)
            }
        }
        return t.model.getModel("axisPointer", new to(u, n, a))
    }

    function Fc(t, e) {
        e.eachSeries(function(e) {
            var n = e.coordinateSystem,
                i = e.get("tooltip.trigger", !0),
                a = e.get("tooltip.show", !0);
            n && "none" !== i && i !== !1 && "item" !== i && a !== !1 && e.get("axisPointer.show", !0) !== !1 && aC(t.coordSysAxesInfo[Zc(n.model)], function(t) {
                var i = t.axis;
                n.getAxis(i.dim) === i && (t.seriesModels.push(e), null == t.seriesDataCount && (t.seriesDataCount = 0), t.seriesDataCount += e.getData().count())
            })
        }, this)
    }

    function Wc(t, e) { for (var n = e.model, i = e.dim, a = 0; a < t.length; a++) { var r = t[a] || {}; if (Hc(r[i + "AxisId"], n.id) || Hc(r[i + "AxisIndex"], n.componentIndex) || Hc(r[i + "AxisName"], n.name)) return a } }

    function Hc(t, e) { return "all" === t || _(t) && u(t, e) >= 0 || t === e }

    function Xc(t) {
        var e = Yc(t);
        if (e) {
            var n = e.axisPointerModel,
                i = e.axis.scale,
                a = n.option,
                r = n.get("status"),
                o = n.get("value");
            null != o && (o = i.parse(o));
            var s = jc(n);
            null == r && (a.status = s ? "show" : "hide");
            var l = i.getExtent().slice();
            l[0] > l[1] && l.reverse(), (null == o || o > l[1]) && (o = l[1]), o < l[0] && (o = l[0]), a.value = o, s && (a.status = e.axis.scale.isBlank() ? "hide" : "show")
        }
    }

    function Yc(t) { var e = (t.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo; return e && e.axesInfo[Zc(t)] }

    function Uc(t) { var e = Yc(t); return e && e.axisPointerModel }

    function jc(t) { return !!t.get("handle.show") }

    function Zc(t) { return t.type + "||" + t.id }

    function qc(t, e, n, i, a, r) {
        var o = oC.getAxisPointerClass(t.axisPointerClass);
        if (o) {
            var s = Uc(e);
            s ? (t._axisPointer || (t._axisPointer = new o)).render(e, s, i, r) : Kc(t, i)
        }
    }

    function Kc(t, e, n) {
        var i = t._axisPointer;
        i && i.dispose(e, n), t._axisPointer = null
    }

    function $c(t, e, n) {
        n = n || {};
        var i = t.coordinateSystem,
            a = e.axis,
            r = {},
            o = a.getAxesOnZeroOf()[0],
            s = a.position,
            l = o ? "onZero" : s,
            u = a.dim,
            h = i.getRect(),
            c = [h.x, h.x + h.width, h.y, h.y + h.height],
            d = { left: 0, right: 1, top: 0, bottom: 1, onZero: 2 },
            f = e.get("offset") || 0,
            g = "x" === u ? [c[2] - f, c[3] + f] : [c[0] - f, c[1] + f];
        if (o) {
            var p = o.toGlobalCoord(o.dataToCoord(0));
            g[d.onZero] = Math.max(Math.min(p, g[1]), g[0])
        }
        r.position = ["y" === u ? g[d[l]] : c[0], "x" === u ? g[d[l]] : c[3]], r.rotation = Math.PI / 2 * ("x" === u ? 0 : 1);
        var m = { top: -1, bottom: 1, left: -1, right: 1 };
        r.labelDirection = r.tickDirection = r.nameDirection = m[s], r.labelOffset = o ? g[d[s]] - g[d.onZero] : 0, e.get("axisTick.inside") && (r.tickDirection = -r.tickDirection), A(n.labelInside, e.get("axisLabel.inside")) && (r.labelDirection = -r.labelDirection);
        var v = e.get("axisLabel.rotate");
        return r.labelRotate = "top" === l ? -v : v, r.z2 = 1, r
    }

    function Jc(t, e, n) { Vw.call(this), this.updateData(t, e, n) }

    function Qc(t) { return [t[0] / 2, t[1] / 2] }

    function td(t, e) { this.parent.drift(t, e) }

    function ed(t, e) {
        if (!this.incremental && !this.useHoverLayer)
            if ("emphasis" === e) {
                var n = this.__symbolOriginalScale,
                    i = n[1] / n[0],
                    a = { scale: [Math.max(1.1 * n[0], n[0] + 3), Math.max(1.1 * n[1], n[1] + 3 * i)] };
                this.animateTo(a, 400, "elasticOut")
            } else "normal" === e && this.animateTo({ scale: this.__symbolOriginalScale }, 400, "elasticOut")
    }

    function nd(t) { this.group = new Vw, this._symbolCtor = t || Jc }

    function id(t, e, n, i) { return !(!e || isNaN(e[0]) || isNaN(e[1]) || i.isIgnore && i.isIgnore(n) || i.clipShape && !i.clipShape.contain(e[0], e[1]) || "none" === t.getItemVisual(n, "symbol")) }

    function ad(t) { return null == t || S(t) || (t = { isIgnore: t }), t || {} }

    function rd(t) { var e = t.hostModel; return { itemStyle: e.getModel("itemStyle").getItemStyle(["color"]), hoverItemStyle: e.getModel("emphasis.itemStyle").getItemStyle(), symbolRotate: e.get("symbolRotate"), symbolOffset: e.get("symbolOffset"), hoverAnimation: e.get("hoverAnimation"), labelModel: e.getModel("label"), hoverLabelModel: e.getModel("emphasis.label"), cursorStyle: e.get("cursor") } }

    function od(t, e, n) {
        var i, a = t.getBaseAxis(),
            r = t.getOtherAxis(a),
            o = sd(r, n),
            s = a.dim,
            l = r.dim,
            u = e.mapDimension(l),
            h = e.mapDimension(s),
            c = "x" === l || "radius" === l ? 1 : 0,
            d = g(t.dimensions, function(t) { return e.mapDimension(t) }),
            f = e.getCalculationInfo("stackResultDimension");
        return (i |= $u(e, d[0])) && (d[0] = f), (i |= $u(e, d[1])) && (d[1] = f), { dataDimsForPoint: d, valueStart: o, valueAxisDim: l, baseAxisDim: s, stacked: !!i, valueDim: u, baseDim: h, baseDataOffset: c, stackedOverDimension: e.getCalculationInfo("stackedOverDimension") }
    }

    function sd(t, e) {
        var n = 0,
            i = t.scale.getExtent();
        return "start" === e ? n = i[0] : "end" === e ? n = i[1] : i[0] > 0 ? n = i[0] : i[1] < 0 && (n = i[1]), n
    }

    function ld(t, e, n, i) {
        var a = 0 / 0;
        t.stacked && (a = n.get(n.getCalculationInfo("stackedOverDimension"), i)), isNaN(a) && (a = t.valueStart);
        var r = t.baseDataOffset,
            o = [];
        return o[r] = n.get(t.baseDim, i), o[1 - r] = a, e.dataToPoint(o)
    }

    function ud(t, e) { var n = []; return e.diff(t).add(function(t) { n.push({ cmd: "+", idx: t }) }).update(function(t, e) { n.push({ cmd: "=", idx: e, idx1: t }) }).remove(function(t) { n.push({ cmd: "-", idx: t }) }).execute(), n }

    function hd(t) { return isNaN(t[0]) || isNaN(t[1]) }

    function cd(t, e, n, i, a, r, o, s, l, u) { return "none" !== u && u ? dd.apply(this, arguments) : fd.apply(this, arguments) }

    function dd(t, e, n, i, a, r, o, s, l, u, h) {
        for (var c = 0, d = n, f = 0; i > f; f++) {
            var g = e[d];
            if (d >= a || 0 > d) break;
            if (hd(g)) { if (h) { d += r; continue } break }
            if (d === n) t[r > 0 ? "moveTo" : "lineTo"](g[0], g[1]);
            else if (l > 0) {
                var p = e[c],
                    m = "y" === u ? 1 : 0,
                    v = (g[m] - p[m]) * l;
                bC(IC, p), IC[m] = p[m] + v, bC(MC, g), MC[m] = g[m] - v, t.bezierCurveTo(IC[0], IC[1], MC[0], MC[1], g[0], g[1])
            } else t.lineTo(g[0], g[1]);
            c = d, d += r
        }
        return f
    }

    function fd(t, e, n, i, a, r, o, s, l, u, h) {
        for (var c = 0, d = n, f = 0; i > f; f++) {
            var g = e[d];
            if (d >= a || 0 > d) break;
            if (hd(g)) { if (h) { d += r; continue } break }
            if (d === n) t[r > 0 ? "moveTo" : "lineTo"](g[0], g[1]), bC(IC, g);
            else if (l > 0) {
                var p = d + r,
                    m = e[p];
                if (h)
                    for (; m && hd(e[p]);) p += r, m = e[p];
                var v = .5,
                    y = e[c],
                    m = e[p];
                if (!m || hd(m)) bC(MC, g);
                else {
                    hd(m) && !h && (m = g), j(SC, m, y);
                    var x, _;
                    if ("x" === u || "y" === u) {
                        var w = "x" === u ? 0 : 1;
                        x = Math.abs(g[w] - y[w]), _ = Math.abs(g[w] - m[w])
                    } else x = X_(g, y), _ = X_(g, m);
                    v = _ / (_ + x), wC(MC, g, SC, -l * (1 - v))
                }
                xC(IC, IC, s), _C(IC, IC, o), xC(MC, MC, s), _C(MC, MC, o), t.bezierCurveTo(IC[0], IC[1], MC[0], MC[1], g[0], g[1]), wC(IC, g, SC, l * v)
            } else t.lineTo(g[0], g[1]);
            c = d, d += r
        }
        return f
    }

    function gd(t, e) {
        var n = [1 / 0, 1 / 0],
            i = [-1 / 0, -1 / 0];
        if (e)
            for (var a = 0; a < t.length; a++) {
                var r = t[a];
                r[0] < n[0] && (n[0] = r[0]), r[1] < n[1] && (n[1] = r[1]), r[0] > i[0] && (i[0] = r[0]), r[1] > i[1] && (i[1] = r[1])
            }
        return { min: e ? n : i, max: e ? i : n }
    }

    function pd(t, e) {
        if (t.length === e.length) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n],
                    a = e[n];
                if (i[0] !== a[0] || i[1] !== a[1]) return
            }
            return !0
        }
    }

    function md(t) { return "number" == typeof t ? t : t ? .5 : 0 }

    function vd(t, e, n) { if (!n.valueDim) return []; for (var i = [], a = 0, r = e.count(); r > a; a++) i.push(ld(n, t, e, a)); return i }

    function yd(t, e, n) {
        for (var i = e.getBaseAxis(), a = "x" === i.dim || "radius" === i.dim ? 0 : 1, r = [], o = 0; o < t.length - 1; o++) {
            var s = t[o + 1],
                l = t[o];
            r.push(l);
            var u = [];
            switch (n) {
                case "end":
                    u[a] = s[a], u[1 - a] = l[1 - a], r.push(u);
                    break;
                case "middle":
                    var h = (l[a] + s[a]) / 2,
                        c = [];
                    u[a] = c[a] = h, u[1 - a] = l[1 - a], c[1 - a] = s[1 - a], r.push(u), r.push(c);
                    break;
                default:
                    u[a] = l[a], u[1 - a] = s[1 - a], r.push(u)
            }
        }
        return t[o] && r.push(t[o]), r
    }

    function xd(t, e) {
        var n = t.getVisual("visualMeta");
        if (n && n.length && t.count() && "cartesian2d" === e.type) {
            for (var i, a, r = n.length - 1; r >= 0; r--) {
                var o = n[r].dimension,
                    s = t.dimensions[o],
                    l = t.getDimensionInfo(s);
                if (i = l && l.coordDim, "x" === i || "y" === i) { a = n[r]; break }
            }
            if (a) {
                var u = e.getAxis(i),
                    h = g(a.stops, function(t) { return { coord: u.toGlobalCoord(u.dataToCoord(t.value)), color: t.color } }),
                    c = h.length,
                    d = a.outerColors.slice();
                c && h[0].coord > h[c - 1].coord && (h.reverse(), d.reverse());
                var p = 10,
                    m = h[0].coord - p,
                    v = h[c - 1].coord + p,
                    y = v - m;
                if (.001 > y) return "transparent";
                f(h, function(t) { t.offset = (t.coord - m) / y }), h.push({ offset: c ? h[c - 1].offset : .5, color: d[1] || "transparent" }), h.unshift({ offset: c ? h[0].offset : .5, color: d[0] || "transparent" });
                var x = new xI(0, 0, 0, 0, h, !0);
                return x[i] = m, x[i + "2"] = v, x
            }
        }
    }

    function _d(t, e, n) {
        var i = t.get("showAllSymbol"),
            a = "auto" === i;
        if (!i || a) {
            var r = n.getAxesByScale("ordinal")[0];
            if (r && (!a || !wd(r, e))) {
                var o = e.mapDimension(r.dim),
                    s = {};
                return f(r.getViewLabels(), function(t) { s[t.tickValue] = 1 }),
                    function(t) { return !s.hasOwnProperty(e.get(o, t)) }
            }
        }
    }

    function wd(t, e) {
        var n = t.getExtent(),
            i = Math.abs(n[1] - n[0]) / t.scale.count();
        isNaN(i) && (i = 0);
        for (var a = e.count(), r = Math.max(1, Math.round(a / 5)), o = 0; a > o; o += r)
            if (1.5 * Jc.getSymbolSize(e, o)[t.isHorizontal() ? 1 : 0] > i) return !1;
        return !0
    }

    function bd(t, e, n) {
        if ("cartesian2d" === t.type) {
            var i = t.getBaseAxis().isHorizontal(),
                a = _c(t, e, n);
            if (!n.get("clip", !0)) {
                var r = a.shape,
                    o = Math.max(r.width, r.height);
                i ? (r.y -= o, r.height += 2 * o) : (r.x -= o, r.width += 2 * o)
            }
            return a
        }
        return wc(t, e, n)
    }

    function Sd(t, e, n, i) {
        var a = e.getData(),
            r = this.dataIndex,
            o = a.getName(r),
            s = e.get("selectedOffset");
        i.dispatchAction({ type: "pieToggleSelect", from: t, name: o, seriesId: e.id }), a.each(function(t) { Id(a.getItemGraphicEl(t), a.getItemLayout(t), e.isSelected(a.getName(t)), s, n) })
    }

    function Id(t, e, n, i, a) {
        var r = (e.startAngle + e.endAngle) / 2,
            o = Math.cos(r),
            s = Math.sin(r),
            l = n ? i : 0,
            u = [o * l, s * l];
        a ? t.animate().when(200, { position: u }).start("bounceOut") : t.attr("position", u)
    }

    function Md(t, e) {
        Vw.call(this);
        var n = new iI({ z2: 2 }),
            i = new lI,
            a = new QS;
        this.add(n), this.add(i), this.add(a), this.updateData(t, e, !0)
    }

    function Dd(t, e, n, i, a, r, o) {
        function s(e, n, i) {
            for (var a = e; n > a; a++)
                if (t[a].y += i, a > e && n > a + 1 && t[a + 1].y > t[a].y + t[a].height) return void l(a, i / 2);
            l(n - 1, i / 2)
        }

        function l(e, n) { for (var i = e; i >= 0 && (t[i].y -= n, !(i > 0 && t[i].y > t[i - 1].y + t[i - 1].height)); i--); }

        function u(t, e, n, i, a, r) {
            for (var o = r > 0 ? e ? Number.MAX_VALUE : 0 : e ? Number.MAX_VALUE : 0, s = 0, l = t.length; l > s; s++) {
                var u = Math.abs(t[s].y - i),
                    h = t[s].len,
                    c = t[s].len2,
                    d = a + h > u ? Math.sqrt((a + h + c) * (a + h + c) - u * u) : Math.abs(t[s].x - n);
                e && d >= o && (d = o - 10), !e && o >= d && (d = o + 10), t[s].x = n + d * r, o = d
            }
        }
        t.sort(function(t, e) { return t.y - e.y });
        for (var h, c = 0, d = t.length, f = [], g = [], p = 0; d > p; p++) h = t[p].y - c, 0 > h && s(p, d, -h, a), c = t[p].y + t[p].height;
        0 > o - c && l(d - 1, c - o);
        for (var p = 0; d > p; p++) t[p].y >= n ? g.push(t[p]) : f.push(t[p]);
        u(f, !1, e, n, i, a), u(g, !0, e, n, i, a)
    }

    function Td(t, e, n, i, a, r) {
        for (var o = [], s = [], l = 0; l < t.length; l++) Ad(t[l]) || (t[l].x < e ? o.push(t[l]) : s.push(t[l]));
        Dd(s, e, n, i, 1, a, r), Dd(o, e, n, i, -1, a, r);
        for (var l = 0; l < t.length; l++)
            if (!Ad(t[l])) {
                var u = t[l].linePoints;
                if (u) {
                    var h = u[1][0] - u[2][0];
                    u[2][0] = t[l].x < e ? t[l].x + 3 : t[l].x - 3, u[1][1] = u[2][1] = t[l].y, u[1][0] = u[2][0] + h
                }
            }
    }

    function Ad(t) { return "center" === t.position }

    function Cd() { this.group = new Vw }

    function Ld(t) { return _(t) || (t = [+t, +t]), t }

    function Pd(t, e) {
        var n = e.rippleEffectColor || e.color;
        t.eachChild(function(t) { t.attr({ z: e.z, zlevel: e.zlevel, style: { stroke: "stroke" === e.brushType ? n : null, fill: "fill" === e.brushType ? n : null } }) })
    }

    function kd(t, e) {
        Vw.call(this);
        var n = new Jc(t, e),
            i = new Vw;
        this.add(n), this.add(i), i.beforeUpdate = function() { this.attr(n.getScale()) }, this.updateData(t, e)
    }

    function Nd(t, e, n) { var i = t.ends; return new eL({ shape: { points: n ? zd(i, t) : i }, z2: 100 }) }

    function Od(t, e) {
        for (var n = !0, i = 0; i < e.ends.length; i++)
            if (t.contain(e.ends[i][0], e.ends[i][1])) { n = !1; break }
        return n
    }

    function Ed(t, e, n, i) {
        var a = e.getItemModel(n),
            r = a.getModel(JC),
            o = e.getItemVisual(n, "color"),
            s = e.getItemVisual(n, "borderColor") || o,
            l = r.getItemStyle(tL);
        t.useStyle(l), t.style.strokeNoScale = !0, t.style.fill = o, t.style.stroke = s, t.__simpleBox = i;
        var u = a.getModel(QC).getItemStyle();
        Mr(t, u)
    }

    function zd(t, e) { return g(t, function(t) { return t = t.slice(), t[1] = e.initBaseline, t }) }

    function Rd(t, e, n) {
        var i = t.getData(),
            a = i.getLayout("largePoints"),
            r = new nL({ shape: { points: a }, __sign: 1 });
        e.add(r);
        var o = new nL({ shape: { points: a }, __sign: -1 });
        e.add(o), Bd(1, r, t, i), Bd(-1, o, t, i), n && (r.incremental = !0, o.incremental = !0)
    }

    function Bd(t, e, n, i) {
        var a = t > 0 ? "P" : "N",
            r = i.getVisual("borderColor" + a) || i.getVisual("color" + a),
            o = n.getModel(JC).getItemStyle(tL);
        e.useStyle(o), e.style.fill = null, e.style.stroke = r
    }

    function Vd(t, e, n, i, a) { var r; return r = n > i ? -1 : i > n ? 1 : e > 0 ? t.get(a, e - 1) <= i ? 1 : -1 : 1 }

    function Gd(t, e) {
        var n, i = t.getBaseAxis(),
            a = "category" === i.type ? i.getBandWidth() : (n = i.getExtent(), Math.abs(n[1] - n[0]) / e.count()),
            r = lo(C(t.get("barMaxWidth"), a), a),
            o = lo(C(t.get("barMinWidth"), 1), a),
            s = t.get("barWidth");
        return null != s ? lo(s, a) : Math.max(Math.min(a / 2, r), o)
    }

    function Fd(t, e, n) { MA.call(this, t, e, n), this.type = "value", this.angle = 0, this.name = "", this.model }

    function Wd(t, e, n) {
        this._model = t, this.dimensions = [], this._indicatorAxes = g(t.getIndicatorModels(), function(t, e) {
            var n = "indicator_" + e,
                i = new Fd(n, "log" === t.get("axisType") ? new uA : new GT);
            return i.name = t.get("name"), i.model = t, t.axis = i, this.dimensions.push(n), i
        }, this), this.resize(t, n), this.cx, this.cy, this.r, this.r0, this.startAngle
    }

    function Hd(t, e) { return s({ show: e }, t) }

    function Xd(t) { return _(t) || (t = [+t, +t]), t }

    function Yd(t) { return !isNaN(t[0]) && !isNaN(t[1]) }

    function Ud(t) { return [t.cx, t.cy] }

    function jd() {
        var t = R_();
        this.canvas = t, this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = {}
    }

    function Zd(t, e, n) {
        var i = t[1] - t[0];
        e = g(e, function(e) { return { interval: [(e.interval[0] - t[0]) / i, (e.interval[1] - t[0]) / i] } });
        var a = e.length,
            r = 0;
        return function(t) {
            for (var i = r; a > i; i++) { var o = e[i].interval; if (o[0] <= t && t <= o[1]) { r = i; break } }
            if (i === a)
                for (var i = r - 1; i >= 0; i--) { var o = e[i].interval; if (o[0] <= t && t <= o[1]) { r = i; break } }
            return i >= 0 && a > i && n[i]
        }
    }

    function qd(t, e) {
        var n = t[1] - t[0];
        return e = [(e[0] - t[0]) / n, (e[1] - t[0]) / n],
            function(t) { return t >= e[0] && t <= e[1] }
    }

    function Kd(t) { var e = t.dimensions; return "lng" === e[0] && "lat" === e[1] }

    function $d(t) {
        var e = t.mainData,
            n = t.datas;
        n || (n = { main: e }, t.datasAttr = { main: "data" }), t.datas = t.mainData = null, af(e, n, t), vL(n, function(n) { vL(e.TRANSFERABLE_METHODS, function(e) { n.wrapMethod(e, x(Jd, t)) }) }), e.wrapMethod("cloneShallow", x(tf, t)), vL(e.CHANGABLE_METHODS, function(n) { e.wrapMethod(n, x(Qd, t)) }), N(n[e.dataType] === e)
    }

    function Jd(t, e) {
        if (nf(this)) {
            var n = o({}, this[yL]);
            n[this.dataType] = e, af(e, n, t)
        } else rf(e, this.dataType, this[xL], t);
        return e
    }

    function Qd(t, e) { return t.struct && t.struct.update(this), e }

    function tf(t, e) { return vL(e[yL], function(n, i) { n !== e && rf(n.cloneShallow(), i, e, t) }), e }

    function ef(t) { var e = this[xL]; return null == t || null == e ? e : e[yL][t] }

    function nf(t) { return t[xL] === t }

    function af(t, e, n) { t[yL] = {}, vL(e, function(e, i) { rf(e, i, t, n) }) }

    function rf(t, e, n, i) { n[yL][e] = t, t[xL] = n, t.dataType = e, i.struct && (t[i.structAttr] = i.struct, i.struct[i.datasAttr[e]] = t), t.getLinkedData = ef }

    function of(t, e, n) { this.root, this.data, this._nodes = [], this.hostModel = t, this.levelModels = g(e || [], function(e) { return new to(e, t, t.ecModel) }), this.leavesModel = new to(n || {}, t, t.ecModel) }

    function sf(t, e) {
        var n = e.children;
        t.parentNode !== e && (n.push(t), t.parentNode = e)
    }

    function lf(t) {
        t.hierNode = { defaultAncestor: null, ancestor: t, prelim: 0, modifier: 0, change: 0, shift: 0, i: 0, thread: null };
        for (var e, n, i = [t]; e = i.pop();)
            if (n = e.children, e.isExpand && n.length)
                for (var a = n.length, r = a - 1; r >= 0; r--) {
                    var o = n[r];
                    o.hierNode = { defaultAncestor: null, ancestor: o, prelim: 0, modifier: 0, change: 0, shift: 0, i: r, thread: null }, i.push(o)
                }
    }

    function uf(t, e) {
        var n = t.isExpand ? t.children : [],
            i = t.parentNode.children,
            a = t.hierNode.i ? i[t.hierNode.i - 1] : null;
        if (n.length) {
            gf(t);
            var r = (n[0].hierNode.prelim + n[n.length - 1].hierNode.prelim) / 2;
            a ? (t.hierNode.prelim = a.hierNode.prelim + e(t, a), t.hierNode.modifier = t.hierNode.prelim - r) : t.hierNode.prelim = r
        } else a && (t.hierNode.prelim = a.hierNode.prelim + e(t, a));
        t.parentNode.hierNode.defaultAncestor = pf(t, a, t.parentNode.hierNode.defaultAncestor || i[0], e)
    }

    function hf(t) {
        var e = t.hierNode.prelim + t.parentNode.hierNode.modifier;
        t.setLayout({ x: e }, !0), t.hierNode.modifier += t.parentNode.hierNode.modifier
    }

    function cf(t) { return arguments.length ? t : _f }

    function df(t, e) { var n = {}; return t -= Math.PI / 2, n.x = e * Math.cos(t), n.y = e * Math.sin(t), n }

    function ff(t, e) { return Bo(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() }) }

    function gf(t) {
        for (var e = t.children, n = e.length, i = 0, a = 0; --n >= 0;) {
            var r = e[n];
            r.hierNode.prelim += i, r.hierNode.modifier += i, a += r.hierNode.change, i += r.hierNode.shift + a
        }
    }

    function pf(t, e, n, i) {
        if (e) {
            for (var a = t, r = t, o = r.parentNode.children[0], s = e, l = a.hierNode.modifier, u = r.hierNode.modifier, h = o.hierNode.modifier, c = s.hierNode.modifier; s = mf(s), r = vf(r), s && r;) {
                a = mf(a), o = vf(o), a.hierNode.ancestor = t;
                var d = s.hierNode.prelim + c - r.hierNode.prelim - u + i(s, r);
                d > 0 && (xf(yf(s, t, n), t, d), u += d, l += d), c += s.hierNode.modifier, u += r.hierNode.modifier, l += a.hierNode.modifier, h += o.hierNode.modifier
            }
            s && !mf(a) && (a.hierNode.thread = s, a.hierNode.modifier += c - l), r && !vf(o) && (o.hierNode.thread = r, o.hierNode.modifier += u - h, n = t)
        }
        return n
    }

    function mf(t) { var e = t.children; return e.length && t.isExpand ? e[e.length - 1] : t.hierNode.thread }

    function vf(t) { var e = t.children; return e.length && t.isExpand ? e[0] : t.hierNode.thread }

    function yf(t, e, n) { return t.hierNode.ancestor.parentNode === e.parentNode ? t.hierNode.ancestor : n }

    function xf(t, e, n) {
        var i = n / (e.hierNode.i - t.hierNode.i);
        e.hierNode.change -= i, e.hierNode.shift += n, e.hierNode.modifier += n, e.hierNode.prelim += n, t.hierNode.change += i
    }

    function _f(t, e) { return t.parentNode === e.parentNode ? 1 : 2 }

    function wf() { hw.call(this) }

    function bf(t) { this.name = t, this.zoomLimit, hw.call(this), this._roamTransformable = new wf, this._rawTransformable = new wf, this._center, this._zoom }

    function Sf(t, e, n, i) {
        var a = n.seriesModel,
            r = a ? a.coordinateSystem : null;
        return r === this ? r[t](i) : null
    }

    function If(t, e, n) {
        var i = t.target,
            a = i.position;
        a[0] += e, a[1] += n, i.dirty()
    }

    function Mf(t, e, n, i) {
        var a = t.target,
            r = t.zoomLimit,
            o = a.position,
            s = a.scale,
            l = t.zoom = t.zoom || 1;
        if (l *= e, r) {
            var u = r.min || 0,
                h = r.max || 1 / 0;
            l = Math.max(Math.min(h, l), u)
        }
        var c = l / t.zoom;
        t.zoom = l, o[0] -= (n - o[0]) * (c - 1), o[1] -= (i - o[1]) * (c - 1), s[0] *= c, s[1] *= c, a.dirty()
    }

    function Df(t, e, n) {
        var i = Cf(t);
        i[e] = n
    }

    function Tf(t, e, n) {
        var i = Cf(t),
            a = i[e];
        a === n && (i[e] = null)
    }

    function Af(t, e) { return !!Cf(t)[e] }

    function Cf(t) { return t[bL] || (t[bL] = {}) }

    function Lf(t) {
        this.pointerChecker, this._zr = t, this._opt = {};
        var e = y,
            n = e(Pf, this),
            a = e(kf, this),
            r = e(Nf, this),
            o = e(Of, this),
            l = e(Ef, this);
        Z_.call(this), this.setPointerChecker = function(t) { this.pointerChecker = t }, this.enable = function(e, u) { this.disable(), this._opt = s(i(u) || {}, { zoomOnMouseWheel: !0, moveOnMouseMove: !0, moveOnMouseWheel: !1, preventDefaultMouseMove: !0 }), null == e && (e = !0), (e === !0 || "move" === e || "pan" === e) && (t.on("mousedown", n), t.on("mousemove", a), t.on("mouseup", r)), (e === !0 || "scale" === e || "zoom" === e) && (t.on("mousewheel", o), t.on("pinch", l)) }, this.disable = function() { t.off("mousedown", n), t.off("mousemove", a), t.off("mouseup", r), t.off("mousewheel", o), t.off("pinch", l) }, this.dispose = this.disable, this.isDragging = function() { return this._dragging }, this.isPinching = function() { return this._pinching }
    }

    function Pf(t) {
        if (!(we(t) || t.target && t.target.draggable)) {
            var e = t.offsetX,
                n = t.offsetY;
            this.pointerChecker && this.pointerChecker(t, e, n) && (this._x = e, this._y = n, this._dragging = !0)
        }
    }

    function kf(t) {
        if (this._dragging && Bf("moveOnMouseMove", t, this._opt) && "pinch" !== t.gestureEvent && !Af(this._zr, "globalPan")) {
            var e = t.offsetX,
                n = t.offsetY,
                i = this._x,
                a = this._y,
                r = e - i,
                o = n - a;
            this._x = e, this._y = n, this._opt.preventDefaultMouseMove && tw(t.event), Rf(this, "pan", "moveOnMouseMove", t, { dx: r, dy: o, oldX: i, oldY: a, newX: e, newY: n })
        }
    }

    function Nf(t) { we(t) || (this._dragging = !1) }

    function Of(t) {
        var e = Bf("zoomOnMouseWheel", t, this._opt),
            n = Bf("moveOnMouseWheel", t, this._opt),
            i = t.wheelDelta,
            a = Math.abs(i),
            r = t.offsetX,
            o = t.offsetY;
        if (0 !== i && (e || n)) {
            if (e) {
                var s = a > 3 ? 1.4 : a > 1 ? 1.2 : 1.1,
                    l = i > 0 ? s : 1 / s;
                zf(this, "zoom", "zoomOnMouseWheel", t, { scale: l, originX: r, originY: o })
            }
            if (n) {
                var u = Math.abs(i),
                    h = (i > 0 ? 1 : -1) * (u > 3 ? .4 : u > 1 ? .15 : .05);
                zf(this, "scrollMove", "moveOnMouseWheel", t, { scrollDelta: h, originX: r, originY: o })
            }
        }
    }

    function Ef(t) {
        if (!Af(this._zr, "globalPan")) {
            var e = t.pinchScale > 1 ? 1.1 : 1 / 1.1;
            zf(this, "zoom", null, t, { scale: e, originX: t.pinchX, originY: t.pinchY })
        }
    }

    function zf(t, e, n, i, a) { t.pointerChecker && t.pointerChecker(i, a.originX, a.originY) && (tw(i.event), Rf(t, e, n, i, a)) }

    function Rf(t, e, n, i, a) { a.isAvailableBehavior = y(Bf, null, n, i), t.trigger(e, a) }

    function Bf(t, e, n) { var i = n[t]; return !t || i && (!b(i) || e.event[i + "Key"]) }

    function Vf(t, e, n) {
        var i = e.getComponentByElement(t.topTarget),
            a = i && i.coordinateSystem;
        return i && i !== n && !SL[i.mainType] && a && a.model !== n
    }

    function Gf(t, e) { var n = t.getItemLayout(e); return n && !isNaN(n.x) && !isNaN(n.y) && "none" !== t.getItemVisual(e, "symbol") }

    function Ff(t, e, n) { return n.itemModel = e, n.itemStyle = e.getModel("itemStyle").getItemStyle(), n.hoverItemStyle = e.getModel("emphasis.itemStyle").getItemStyle(), n.lineStyle = e.getModel("lineStyle").getLineStyle(), n.labelModel = e.getModel("label"), n.hoverLabelModel = e.getModel("emphasis.label"), n.symbolInnerColor = t.isExpand === !1 && 0 !== t.children.length ? n.itemStyle.fill : "#fff", n }

    function Wf(t, e, n, i, a, r) {
        var o = !n,
            l = t.tree.getNodeByDataIndex(e),
            u = l.getModel(),
            r = Ff(l, u, r),
            h = t.tree.root,
            c = l.parentNode === h ? l : l.parentNode || l,
            d = t.getItemGraphicEl(c.dataIndex),
            f = c.getLayout(),
            g = d ? { x: d.position[0], y: d.position[1], rawX: d.__radialOldRawX, rawY: d.__radialOldRawY } : f,
            p = l.getLayout();
        o ? (n = new Jc(t, e, r), n.attr("position", [g.x, g.y])) : n.updateData(t, e, r), n.__radialOldRawX = n.__radialRawX, n.__radialOldRawY = n.__radialRawY, n.__radialRawX = p.rawX, n.__radialRawY = p.rawY, i.add(n), t.setItemGraphicEl(e, n), Fr(n, { position: [p.x, p.y] }, a);
        var m = n.getSymbolPath();
        if ("radial" === r.layout) {
            var v, y, x = h.children[0],
                _ = x.getLayout(),
                w = x.children.length;
            if (p.x === _.x && l.isExpand === !0) {
                var b = {};
                b.x = (x.children[0].getLayout().x + x.children[w - 1].getLayout().x) / 2, b.y = (x.children[0].getLayout().y + x.children[w - 1].getLayout().y) / 2, v = Math.atan2(b.y - _.y, b.x - _.x), 0 > v && (v = 2 * Math.PI + v), y = b.x < _.x, y && (v -= Math.PI)
            } else v = Math.atan2(p.y - _.y, p.x - _.x), 0 > v && (v = 2 * Math.PI + v), 0 === l.children.length || 0 !== l.children.length && l.isExpand === !1 ? (y = p.x < _.x, y && (v -= Math.PI)) : (y = p.x > _.x, y || (v -= Math.PI));
            var S = y ? "left" : "right",
                I = r.labelModel.get("rotate"),
                M = I * (Math.PI / 180);
            m.setStyle({ textPosition: r.labelModel.get("position") || S, textRotation: null == I ? -v : M, textOrigin: "center", verticalAlign: "middle" })
        }
        if (l.parentNode && l.parentNode !== h) {
            var D = n.__edge;
            D || (D = n.__edge = new pI({ shape: Xf(r, g, g), style: s({ opacity: 0, strokeNoScale: !0 }, r.lineStyle) })), Fr(D, { shape: Xf(r, f, p), style: { opacity: 1 } }, a), i.add(D)
        }
    }

    function Hf(t, e, n, i, a, r) {
        for (var o, s = t.tree.getNodeByDataIndex(e), l = t.tree.root, u = s.getModel(), r = Ff(s, u, r), h = s.parentNode === l ? s : s.parentNode || s; o = h.getLayout(), null == o;) h = h.parentNode === l ? h : h.parentNode || h;
        Fr(n, { position: [o.x + 1, o.y + 1] }, a, function() { i.remove(n), t.setItemGraphicEl(e, null) }), n.fadeOut(null, { keepLabel: !0 });
        var c = n.__edge;
        c && Fr(c, { shape: Xf(r, o, o), style: { opacity: 0 } }, a, function() { i.remove(c) })
    }

    function Xf(t, e, n) {
        var i, a, r, o, s, l, u, h, c = t.orient;
        if ("radial" === t.layout) {
            s = e.rawX, u = e.rawY, l = n.rawX, h = n.rawY;
            var d = df(s, u),
                f = df(s, u + (h - u) * t.curvature),
                g = df(l, h + (u - h) * t.curvature),
                p = df(l, h);
            return { x1: d.x, y1: d.y, x2: p.x, y2: p.y, cpx1: f.x, cpy1: f.y, cpx2: g.x, cpy2: g.y }
        }
        return s = e.x, u = e.y, l = n.x, h = n.y, ("LR" === c || "RL" === c) && (i = s + (l - s) * t.curvature, a = u, r = l + (s - l) * t.curvature, o = h), ("TB" === c || "BT" === c) && (i = s, a = u + (h - u) * t.curvature, r = l, o = h + (u - h) * t.curvature), { x1: s, y1: u, x2: l, y2: h, cpx1: i, cpy1: a, cpx2: r, cpy2: o }
    }

    function Yf(t, e, n) {
        var i = t.getZoom(),
            a = t.getCenter(),
            r = e.zoom,
            o = t.dataToPoint(a);
        if (null != e.dx && null != e.dy) {
            o[0] -= e.dx, o[1] -= e.dy;
            var a = t.pointToData(o);
            t.setCenter(a)
        }
        if (null != r) {
            if (n) {
                var s = n.min || 0,
                    l = n.max || 1 / 0;
                r = Math.max(Math.min(i * r, l), s) / i
            }
            t.scale[0] *= r, t.scale[1] *= r;
            var u = t.position,
                h = (e.originX - u[0]) * (r - 1),
                c = (e.originY - u[1]) * (r - 1);
            u[0] -= h, u[1] -= c, t.updateTransform();
            var a = t.pointToData(o);
            t.setCenter(a), t.setZoom(r * i)
        }
        return { center: t.getCenter(), zoom: t.getZoom() }
    }

    function Uf(t, e, n) {
        for (var i, a = [t], r = []; i = a.pop();)
            if (r.push(i), i.isExpand) {
                var o = i.children;
                if (o.length)
                    for (var s = 0; s < o.length; s++) a.push(o[s])
            }
        for (; i = r.pop();) e(i, n)
    }

    function jf(t, e) {
        for (var n, i = [t]; n = i.pop();)
            if (e(n), n.isExpand) {
                var a = n.children;
                if (a.length)
                    for (var r = a.length - 1; r >= 0; r--) i.push(a[r])
            }
    }

    function Zf(t, e) {
        var n = ff(t, e);
        t.layoutInfo = n;
        var i = t.get("layout"),
            a = 0,
            r = 0,
            o = null;
        "radial" === i ? (a = 2 * Math.PI, r = Math.min(n.height, n.width) / 2, o = cf(function(t, e) { return (t.parentNode === e.parentNode ? 1 : 2) / t.depth })) : (a = n.width, r = n.height, o = cf());
        var s = t.getData().tree.root,
            l = s.children[0];
        if (l) {
            lf(s), Uf(l, uf, o), s.hierNode.modifier = -l.hierNode.prelim, jf(l, hf);
            var u = l,
                h = l,
                c = l;
            jf(l, function(t) {
                var e = t.getLayout().x;
                e < u.getLayout().x && (u = t), e > h.getLayout().x && (h = t), t.depth > c.depth && (c = t)
            });
            var d = u === h ? 1 : o(u, h) / 2,
                f = d - u.getLayout().x,
                g = 0,
                p = 0,
                m = 0,
                v = 0;
            if ("radial" === i) g = a / (h.getLayout().x + d + f), p = r / (c.depth - 1 || 1), jf(l, function(t) {
                m = (t.getLayout().x + f) * g, v = (t.depth - 1) * p;
                var e = df(m, v);
                t.setLayout({ x: e.x, y: e.y, rawX: m, rawY: v }, !0)
            });
            else { var y = t.getOrient(); "RL" === y || "LR" === y ? (p = r / (h.getLayout().x + d + f), g = a / (c.depth - 1 || 1), jf(l, function(t) { v = (t.getLayout().x + f) * p, m = "LR" === y ? (t.depth - 1) * g : a - (t.depth - 1) * g, t.setLayout({ x: m, y: v }, !0) })) : ("TB" === y || "BT" === y) && (g = a / (h.getLayout().x + d + f), p = r / (c.depth - 1 || 1), jf(l, function(t) { m = (t.getLayout().x + f) * g, v = "TB" === y ? (t.depth - 1) * p : r - (t.depth - 1) * p, t.setLayout({ x: m, y: v }, !0) })) }
        }
    }

    function qf(t, e, n) {
        if (t && u(e, t.type) >= 0) {
            var i = n.getData().tree.root,
                a = t.targetNode;
            if ("string" == typeof a && (a = i.getNodeById(a)), a && i.contains(a)) return { node: a };
            var r = t.targetNodeId;
            if (null != r && (a = i.getNodeById(r))) return { node: a }
        }
    }

    function Kf(t) { for (var e = []; t;) t = t.parentNode, t && e.push(t); return e.reverse() }

    function $f(t, e) { var n = Kf(t); return u(n, e) >= 0 }

    function Jf(t, e) {
        for (var n = []; t;) {
            var i = t.dataIndex;
            n.push({ name: t.name, dataIndex: i, value: e.getRawValue(i) }), t = t.parentNode
        }
        return n.reverse(), n
    }

    function Qf(t) {
        var e = 0;
        f(t.children, function(t) {
            Qf(t);
            var n = t.value;
            _(n) && (n = n[0]), e += n
        });
        var n = t.value;
        _(n) && (n = n[0]), (null == n || isNaN(n)) && (n = e), 0 > n && (n = 0), _(t.value) ? t.value[0] = n : t.value = n
    }

    function tg(t, e) {
        var n = e.get("color");
        if (n) {
            t = t || [];
            var i;
            if (f(t, function(t) {
                    var e = new to(t),
                        n = e.get("color");
                    (e.get("itemStyle.color") || n && "none" !== n) && (i = !0)
                }), !i) {
                var a = t[0] || (t[0] = {});
                a.color = n.slice()
            }
            return t
        }
    }

    function eg(t) { this.group = new Vw, t.add(this.group) }

    function ng(t, e, n, i, a, r) {
        var o = [
            [a ? t : t - TL, e],
            [t + n, e],
            [t + n, e + i],
            [a ? t : t - TL, e + i]
        ];
        return !r && o.splice(2, 0, [t + n + TL, e + i / 2]), !a && o.push([t, e + i / 2]), o
    }

    function ig(t, e, n) { t.eventData = { componentType: "series", componentSubType: "treemap", componentIndex: e.componentIndex, seriesIndex: e.componentIndex, seriesName: e.name, seriesType: "treemap", selfType: "breadcrumb", nodeData: { dataIndex: n && n.dataIndex, name: n && n.name }, treePathInfo: n && Jf(n, e) } }

    function ag() {
        var t, e = [],
            n = {};
        return {
            add: function(t, i, a, r, o) { return b(r) && (o = r, r = 0), n[t.id] ? !1 : (n[t.id] = 1, e.push({ el: t, target: i, time: a, delay: r, easing: o }), !0) },
            done: function(e) { return t = e, this },
            start: function() {
                function i() { a--, a || (e.length = 0, n = {}, t && t()) }
                for (var a = e.length, r = 0, o = e.length; o > r; r++) {
                    var s = e[r];
                    s.el.animateTo(s.target, s.time, s.delay, s.easing, i)
                }
                return this
            }
        }
    }

    function rg() { return { nodeGroup: [], background: [], content: [] } }

    function og(t, e, n, a, r, s, l, u, h, c) {
        function d(e, n, i) {
            n.dataIndex = l.dataIndex, n.seriesIndex = t.seriesIndex, n.setShape({ x: 0, y: 0, width: _, height: w });
            var a = l.getVisual("borderColor", !0),
                r = P.get("borderColor");
            g(n, function() {
                var t = FL(L);
                t.fill = a;
                var e = GL(P);
                if (e.fill = r, i) {
                    var o = _ - 2 * b;
                    p(t, e, a, o, T, { x: b, y: 0, width: o, height: T })
                } else t.text = e.text = null;
                n.setStyle(t), Mr(n, e)
            }), e.add(n)
        }

        function f(e, n) {
            n.dataIndex = l.dataIndex, n.seriesIndex = t.seriesIndex;
            var i = Math.max(_ - 2 * b, 0),
                a = Math.max(w - 2 * b, 0);
            n.culling = !0, n.setShape({ x: b, y: b, width: i, height: a });
            var r = l.getVisual("color", !0);
            g(n, function() {
                var t = FL(L);
                t.fill = r;
                var e = GL(P);
                p(t, e, r, i, a), n.setStyle(t), Mr(n, e)
            }), e.add(n)
        }

        function g(t, e) { S ? !t.invisible && s.push(t) : (e(), t.__tmWillVisible || (t.invisible = !1)) }

        function p(e, n, a, r, o, s) {
            var u = l.getModel(),
                h = A(t.getFormattedLabel(l.dataIndex, "normal", null, null, s ? "upperLabel" : "label"), u.get("name"));
            if (!s && x.isLeafRoot) {
                var c = t.get("drillDownIcon", !0);
                h = c ? c + " " + h : h
            }
            var d = u.getModel(s ? EL : NL),
                f = u.getModel(s ? zL : OL),
                g = d.getShallow("show");
            Cr(e, n, d, f, { defaultText: g ? h : null, autoColor: a, isRectText: !0 }), s && (e.textRect = i(s)), e.truncate = g && d.get("ellipsis") ? { outerWidth: r, outerHeight: o, minChar: 2 } : null
        }

        function m(t, i, a, o) {
            var s = null != M && n[t][M],
                l = r[t];
            return s ? (n[t][M] = null, v(l, s, t)) : S || (s = new i({ z: sg(a, o) }), s.__tmDepth = a, s.__tmStorageName = t, y(l, s, t)), e[t][I] = s
        }

        function v(t, e, n) {
            var i = t[I] = {};
            i.old = "nodeGroup" === n ? e.position.slice() : o({}, e.shape)
        }

        function y(t, e, n) {
            var i = t[I] = {},
                o = l.parentNode;
            if (o && (!a || "drillDown" === a.direction)) {
                var s = 0,
                    u = 0,
                    h = r.background[o.getRawIndex()];
                !a && h && h.old && (s = h.old.width, u = h.old.height), i.old = "nodeGroup" === n ? [0, u] : { x: s, y: u, width: 0, height: 0 }
            }
            i.fadein = "nodeGroup" !== n
        }
        if (l) {
            var x = l.getLayout();
            if (x && x.isInView) {
                var _ = x.width,
                    w = x.height,
                    b = x.borderWidth,
                    S = x.invisible,
                    I = l.getRawIndex(),
                    M = u && u.getRawIndex(),
                    D = l.viewChildren,
                    T = x.upperHeight,
                    C = D && D.length,
                    L = l.getModel("itemStyle"),
                    P = l.getModel("emphasis.itemStyle"),
                    k = m("nodeGroup", CL);
                if (k) {
                    if (h.add(k), k.attr("position", [x.x || 0, x.y || 0]), k.__tmNodeWidth = _, k.__tmNodeHeight = w, x.isAboveViewRoot) return k;
                    var N = m("background", LL, c, BL);
                    if (N && d(k, N, C && x.upperHeight), !C) {
                        var O = m("content", LL, c, VL);
                        O && f(k, O)
                    }
                    return k
                }
            }
        }
    }

    function sg(t, e) { var n = t * RL + e; return (n - 1) / n }

    function lg(t) {
        var e = t.pieceList;
        t.hasSpecialVisual = !1, f(e, function(e, n) { e.originIndex = n, null != e.visual && (t.hasSpecialVisual = !0) })
    }

    function ug(t) {
        var e = t.categories,
            n = t.visual,
            i = t.categoryMap = {};
        if (YL(e, function(t, e) { i[t] = e }), !_(n)) {
            var a = [];
            S(n) ? YL(n, function(t, e) {
                var n = i[e];
                a[null != n ? n : jL] = t
            }) : a[jL] = n, n = yg(t, a)
        }
        for (var r = e.length - 1; r >= 0; r--) null == n[r] && (delete i[e[r]], e.pop())
    }

    function hg(t, e) {
        var n = t.visual,
            i = [];
        S(n) ? YL(n, function(t) { i.push(t) }) : null != n && i.push(n);
        var a = { color: 1, symbol: 1 };
        e || 1 !== i.length || a.hasOwnProperty(t.type) || (i[1] = i[0]), yg(t, i)
    }

    function cg(t) { return { applyVisual: function(e, n, i) { e = this.mapValueToVisual(e), i("color", t(n("color"), e)) }, _doMap: mg([0, 1]) } }

    function dg(t) { var e = this.option.visual; return e[Math.round(so(t, [0, 1], [0, e.length - 1], !0))] || {} }

    function fg(t) { return function(e, n, i) { i(t, this.mapValueToVisual(e)) } }

    function gg(t) { var e = this.option.visual; return e[this.option.loop && t !== jL ? t % e.length : t] }

    function pg() { return this.option.visual[0] }

    function mg(t) { return { linear: function(e) { return so(e, t, this.option.visual, !0) }, category: gg, piecewise: function(e, n) { var i = vg.call(this, n); return null == i && (i = so(e, t, this.option.visual, !0)), i }, fixed: pg } }

    function vg(t) {
        var e = this.option,
            n = e.pieceList;
        if (e.hasSpecialVisual) {
            var i = ZL.findPieceIndex(t, n),
                a = n[i];
            if (a && a.visual) return a.visual[this.type]
        }
    }

    function yg(t, e) { return t.visual = e, "color" === t.type && (t.parsedVisual = g(e, function(t) { return qe(t) })), e }

    function xg(t, e, n) { return t ? n >= e : n > e }

    function _g(t, e, n, i, a, r) {
        var o = t.getModel(),
            s = t.getLayout();
        if (s && !s.invisible && s.isInView) {
            var l, u = t.getModel(JL),
                h = n[t.depth],
                c = wg(u, e, h, i),
                d = u.get("borderColor"),
                g = u.get("borderColorSaturation");
            null != g && (l = bg(c, t), d = Sg(g, l)), t.setVisual("borderColor", d);
            var p = t.viewChildren;
            if (p && p.length) {
                var m = Mg(t, o, s, u, c, p);
                f(p, function(t, e) {
                    if (t.depth >= a.length || t === a[t.depth]) {
                        var s = Tg(o, c, t, e, m, r);
                        _g(t, s, n, i, a, r)
                    }
                })
            } else l = bg(c, t), t.setVisual("color", l)
        }
    }

    function wg(t, e, n, i) {
        var a = o({}, e);
        return f(["color", "colorAlpha", "colorSaturation"], function(r) {
            var o = t.get(r, !0);
            null == o && n && (o = n[r]), null == o && (o = e[r]), null == o && (o = i.get(r)), null != o && (a[r] = o)
        }), a
    }

    function bg(t) {
        var e = Ig(t, "color");
        if (e) {
            var n = Ig(t, "colorAlpha"),
                i = Ig(t, "colorSaturation");
            return i && (e = nn(e, null, null, i)), n && (e = an(e, n)), e
        }
    }

    function Sg(t, e) { return null != e ? nn(e, null, null, t) : null }

    function Ig(t, e) { var n = t[e]; return null != n && "none" !== n ? n : void 0 }

    function Mg(t, e, n, i, a, r) {
        if (r && r.length) {
            var o = Dg(e, "color") || null != a.color && "none" !== a.color && (Dg(e, "colorAlpha") || Dg(e, "colorSaturation"));
            if (o) {
                var s = e.get("visualMin"),
                    l = e.get("visualMax"),
                    u = n.dataExtent.slice();
                null != s && s < u[0] && (u[0] = s), null != l && l > u[1] && (u[1] = l);
                var h = e.get("colorMappingBy"),
                    c = { type: o.name, dataExtent: u, visual: o.range };
                "color" !== c.type || "index" !== h && "id" !== h ? c.mappingMethod = "linear" : (c.mappingMethod = "category", c.loop = !0);
                var d = new ZL(c);
                return d.__drColorMappingBy = h, d
            }
        }
    }

    function Dg(t, e) { var n = t.get(e); return $L(n) && n.length ? { name: e, range: n } : null }

    function Tg(t, e, n, i, a, r) {
        var s = o({}, e);
        if (a) {
            var l = a.type,
                u = "color" === l && a.__drColorMappingBy,
                h = "index" === u ? i : "id" === u ? r.mapIdToIndex(n.getId()) : n.getValue(t.get("visualDimension"));
            s[l] = a.mapValueToVisual(h)
        }
        return s
    }

    function Ag(t, e, n, i) {
        var a, r;
        if (!t.isRemoved()) {
            var o = t.getLayout();
            a = o.width, r = o.height;
            var s = t.getModel(),
                l = s.get(aP),
                u = s.get(rP) / 2,
                h = Bg(s),
                c = Math.max(l, h),
                d = l - u,
                f = c - u,
                s = t.getModel();
            t.setLayout({ borderWidth: l, upperHeight: c, upperLabelHeight: h }, !0), a = tP(a - 2 * d, 0), r = tP(r - d - f, 0);
            var g = a * r,
                p = Cg(t, s, g, e, n, i);
            if (p.length) {
                var m = { x: d, y: f, width: a, height: r },
                    v = eP(a, r),
                    y = 1 / 0,
                    x = [];
                x.area = 0;
                for (var _ = 0, w = p.length; w > _;) {
                    var b = p[_];
                    x.push(b), x.area += b.getLayout().area;
                    var S = Ng(x, v, e.squareRatio);
                    y >= S ? (_++, y = S) : (x.area -= x.pop().getLayout().area, Og(x, v, m, u, !1), v = eP(m.width, m.height), x.length = x.area = 0, y = 1 / 0)
                }
                if (x.length && Og(x, v, m, u, !0), !n) {
                    var I = s.get("childrenVisibleMin");
                    null != I && I > g && (n = !0)
                }
                for (var _ = 0, w = p.length; w > _; _++) Ag(p[_], e, n, i + 1)
            }
        }
    }

    function Cg(t, e, n, i, a, r) {
        var o = t.children || [],
            s = i.sort;
        "asc" !== s && "desc" !== s && (s = null);
        var l = null != i.leafDepth && i.leafDepth <= r;
        if (a && !l) return t.viewChildren = [];
        o = m(o, function(t) { return !t.isRemoved() }), Pg(o, s);
        var u = kg(e, o, s);
        if (0 === u.sum) return t.viewChildren = [];
        if (u.sum = Lg(e, n, u.sum, s, o), 0 === u.sum) return t.viewChildren = [];
        for (var h = 0, c = o.length; c > h; h++) {
            var d = o[h].getValue() / u.sum * n;
            o[h].setLayout({ area: d })
        }
        return l && (o.length && t.setLayout({ isLeafRoot: !0 }, !0), o.length = 0), t.viewChildren = o, t.setLayout({ dataExtent: u.dataExtent }, !0), o
    }

    function Lg(t, e, n, i, a) {
        if (!i) return n;
        for (var r = t.get("visibleMin"), o = a.length, s = o, l = o - 1; l >= 0; l--) {
            var u = a["asc" === i ? o - l - 1 : l].getValue();
            r > u / n * e && (s = l, n -= u)
        }
        return "asc" === i ? a.splice(0, o - s) : a.splice(s, o - s), n
    }

    function Pg(t, e) { return e && t.sort(function(t, n) { var i = "asc" === e ? t.getValue() - n.getValue() : n.getValue() - t.getValue(); return 0 === i ? "asc" === e ? t.dataIndex - n.dataIndex : n.dataIndex - t.dataIndex : i }), t }

    function kg(t, e, n) {
        for (var i = 0, a = 0, r = e.length; r > a; a++) i += e[a].getValue();
        var o, s = t.get("visualDimension");
        if (e && e.length)
            if ("value" === s && n) o = [e[e.length - 1].getValue(), e[0].getValue()], "asc" === n && o.reverse();
            else {
                var o = [1 / 0, -1 / 0];
                iP(e, function(t) {
                    var e = t.getValue(s);
                    e < o[0] && (o[0] = e), e > o[1] && (o[1] = e)
                })
            }
        else o = [0 / 0, 0 / 0];
        return { sum: i, dataExtent: o }
    }

    function Ng(t, e, n) {
        for (var i, a = 0, r = 1 / 0, o = 0, s = t.length; s > o; o++) i = t[o].getLayout().area, i && (r > i && (r = i), i > a && (a = i));
        var l = t.area * t.area,
            u = e * e * n;
        return l ? tP(u * a / l, l / (u * r)) : 1 / 0
    }

    function Og(t, e, n, i, a) {
        var r = e === n.width ? 0 : 1,
            o = 1 - r,
            s = ["x", "y"],
            l = ["width", "height"],
            u = n[s[r]],
            h = e ? t.area / e : 0;
        (a || h > n[l[o]]) && (h = n[l[o]]);
        for (var c = 0, d = t.length; d > c; c++) {
            var f = t[c],
                g = {},
                p = h ? f.getLayout().area / h : 0,
                m = g[l[o]] = tP(h - 2 * i, 0),
                v = n[s[r]] + n[l[r]] - u,
                y = c === d - 1 || p > v ? v : p,
                x = g[l[r]] = tP(y - 2 * i, 0);
            g[s[o]] = n[s[o]] + eP(i, m / 2), g[s[r]] = u + eP(i, x / 2), u += y, f.setLayout(g, !0)
        }
        n[s[o]] += h, n[l[o]] -= h
    }

    function Eg(t, e, n, i, a) {
        var r = (e || {}).node,
            o = [i, a];
        if (!r || r === n) return o;
        for (var s, l = i * a, u = l * t.option.zoomToNodeRatio; s = r.parentNode;) {
            for (var h = 0, c = s.children, d = 0, f = c.length; f > d; d++) h += c[d].getValue();
            var g = r.getValue();
            if (0 === g) return o;
            u *= h / g;
            var p = s.getModel(),
                m = p.get(aP),
                v = Math.max(m, Bg(p, m));
            u += 4 * m * m + (3 * m + v) * Math.pow(u, .5), u > YI && (u = YI), r = s
        }
        l > u && (u = l);
        var y = Math.pow(u / l, .5);
        return [i * y, a * y]
    }

    function zg(t, e, n) {
        if (e) return { x: e.x, y: e.y };
        var i = { x: 0, y: 0 };
        if (!n) return i;
        var a = n.node,
            r = a.getLayout();
        if (!r) return i;
        for (var o = [r.width / 2, r.height / 2], s = a; s;) {
            var l = s.getLayout();
            o[0] += l.x, o[1] += l.y, s = s.parentNode
        }
        return { x: t.width / 2 - o[0], y: t.height / 2 - o[1] }
    }

    function Rg(t, e, n, i, a) {
        var r = t.getLayout(),
            o = n[a],
            s = o && o === t;
        if (!(o && !s || a === n.length && t !== i)) {
            t.setLayout({ isInView: !0, invisible: !s && !e.intersect(r), isAboveViewRoot: s }, !0);
            var l = new bn(e.x - r.x, e.y - r.y, e.width, e.height);
            iP(t.viewChildren || [], function(t) { Rg(t, l, n, i, a + 1) })
        }
    }

    function Bg(t) { return t.get(oP) ? t.get(sP) : 0 }

    function Vg(t) {
        var e = 0;
        f(t.children, function(t) {
            Vg(t);
            var n = t.value;
            _(n) && (n = n[0]), e += n
        });
        var n = t.value;
        _(n) && (n = n[0]), (null == n || isNaN(n)) && (n = e), 0 > n && (n = 0), _(t.value) ? t.value[0] = n : t.value = n
    }

    function Gg(t, e, n) {
        function i() { o.ignore = o.hoverIgnore }

        function a() { o.ignore = o.normalIgnore }
        Vw.call(this);
        var r = new iI({ z2: hP });
        r.seriesIndex = e.seriesIndex;
        var o = new QS({ z2: cP, silent: t.getModel("label").get("silent") });
        this.add(r), this.add(o), this.updateData(!0, t, "normal", e, n), this.on("emphasis", i).on("normal", a).on("mouseover", i).on("mouseout", a)
    }

    function Fg(t, e, n) {
        var i = t.getVisual("color"),
            a = t.getVisual("visualMeta");
        a && 0 !== a.length || (i = null);
        var r = t.getModel("itemStyle").get("color");
        if (r) return r;
        if (i) return i;
        if (0 === t.depth) return n.option.color[0];
        var o = n.option.color.length;
        return r = n.option.color[Wg(t) % o]
    }

    function Wg(t) { for (var e = t; e.depth > 1;) e = e.parentNode; var n = t.getAncestors()[0]; return u(n.children, e) }

    function Hg(t, e, n) { return n === uP.NONE ? !1 : n === uP.SELF ? t === e : n === uP.ANCESTOR ? t === e || t.isAncestorOf(e) : t === e || t.isDescendantOf(e) }

    function Xg(t, e, n) {
        var i = e.getData();
        i.setItemVisual(t.dataIndex, "color", n)
    }

    function Yg(t, e) {
        var n = t.children || [];
        t.children = Ug(n, e), n.length && f(t.children, function(t) { Yg(t, e) })
    }

    function Ug(t, e) {
        if ("function" == typeof e) return t.sort(e);
        var n = "asc" === e;
        return t.sort(function(t, e) {
            var i = (t.getValue() - e.getValue()) * (n ? 1 : -1);
            return 0 === i ? (t.dataIndex - e.dataIndex) * (n ? -1 : 1) : i
        })
    }

    function jg(t) {
        for (var e, n = 0; n < t.length; n++) {
            var i = t[n].getBoundingRect();
            e = e || i.clone(), e.union(i)
        }
        return e
    }

    function Zg(t, e) {
        var n, i, a = t.svgXML;
        try { n = a && Nl(a, { ignoreViewBox: !0, ignoreRootClip: !0 }) || {}, i = n.root, N(null != i) } catch (r) { throw new Error("Invalid svg format\n" + r.message) }
        var o = n.width,
            s = n.height,
            l = n.viewBoxRect;
        if (e || (e = null == o || null == s ? i.getBoundingRect() : new bn(0, 0, 0, 0), null != o && (e.width = o), null != s && (e.height = s)), l) {
            var u = kl(l, e.width, e.height),
                h = i;
            i = new Vw, i.add(h), h.scale = u.scale, h.position = u.position
        }
        return i.setClipPath(new cI({ shape: e.plain() })), { root: i, boundingRect: e }
    }

    function qg(t) {
        return function(e, n) {
            var i = Kg(e),
                a = [];
            return f(i, function(i) {
                var r = OP[i.type][t];
                r && a.push(r(e, i, n))
            }), a
        }
    }

    function Kg(t) { var e = PD.retrieveMap(t) || []; return e }

    function $g(t) {
        var e = t.getItemStyle(),
            n = t.get("areaColor");
        return null != n && (e.fill = n), e
    }

    function Jg(t, e, n, i, a) {
        n.off("click"), n.off("mousedown"), e.get("selectedMode") && (n.on("mousedown", function() { t._mouseDownFlag = !0 }), n.on("click", function(r) {
            if (t._mouseDownFlag) {
                t._mouseDownFlag = !1;
                for (var o = r.target; !o.__regions;) o = o.parent;
                if (o) {
                    var s = { type: ("geo" === e.mainType ? "geo" : "map") + "ToggleSelect", batch: g(o.__regions, function(t) { return { name: t.name, from: a.uid } }) };
                    s[e.mainType + "Id"] = e.id, i.dispatchAction(s), Qg(e, n)
                }
            }
        }))
    }

    function Qg(t, e) { e.eachChild(function(e) { f(e.__regions, function(n) { e.trigger(t.isSelected(n.name) ? "emphasis" : "normal") }) }) }

    function tp(t, e) {
        var n = new Vw;
        this.uid = io("ec_map_draw"), this._controller = new Lf(t.getZr()), this._controllerHost = { target: e ? n : null }, this.group = n, this._updateGroup = e, this._mouseDownFlag, this._mapName, this._initialized, n.add(this._regionsGroup = new Vw), n.add(this._backgroundGroup = new Vw)
    }

    function ep(t) {
        var e = this[RP];
        e && e.recordVersion === this[BP] && np(e, t)
    }

    function np(t, e) {
        var n = t.circle,
            i = t.labelModel,
            a = t.hoverLabelModel,
            r = t.emphasisText,
            o = t.normalText;
        e ? (n.style.extendFrom(Pr({}, a, { text: a.get("show") ? r : null }, { isRectText: !0, useInsideStyle: !1 }, !0)), n.__mapOriginalZ2 = n.z2, n.z2 += MI) : (Pr(n.style, i, { text: i.get("show") ? o : null, textPosition: i.getShallow("position") || "bottom" }, { isRectText: !0, useInsideStyle: !1 }), n.dirty(!1), null != n.__mapOriginalZ2 && (n.z2 = n.__mapOriginalZ2, n.__mapOriginalZ2 = null))
    }

    function ip(t, e, n, i) {
        bf.call(this, t), this.map = e;
        var a = EP.load(e, n);
        this._nameCoordMap = a.nameCoordMap, this._regionsMap = a.regionsMap, this._invertLongitute = null == i ? !0 : i, this.regions = a.regions, this._rect = a.boundingRect
    }

    function ap(t, e, n, i) {
        var a = n.geoModel,
            r = n.seriesModel,
            o = a ? a.coordinateSystem : r ? r.coordinateSystem || (r.getReferringComponents("geo")[0] || {}).coordinateSystem : null;
        return o === this ? o[t](i) : null
    }

    function rp(t, e) {
        var n = t.get("boundingCoords");
        if (null != n) {
            var i = n[0],
                a = n[1];
            isNaN(i[0]) || isNaN(i[1]) || isNaN(a[0]) || isNaN(a[1]) || this.setBoundingRect(i[0], i[1], a[0] - i[0], a[1] - i[1])
        }
        var r, o = this.getBoundingRect(),
            s = t.get("layoutCenter"),
            l = t.get("layoutSize"),
            u = e.getWidth(),
            h = e.getHeight(),
            c = o.width / o.height * this.aspectScale,
            d = !1;
        s && l && (s = [lo(s[0], u), lo(s[1], h)], l = lo(l, Math.min(u, h)), isNaN(s[0]) || isNaN(s[1]) || isNaN(l) || (d = !0));
        var f;
        if (d) {
            var f = {};
            c > 1 ? (f.width = l, f.height = l / c) : (f.height = l, f.width = l * c), f.y = s[1] - f.height / 2, f.x = s[0] - f.width / 2
        } else r = t.getBoxLayoutParams(), r.aspect = c, f = Bo(r, { width: u, height: h });
        this.setViewRect(f.x, f.y, f.width, f.height), this.setCenter(t.get("center")), this.setZoom(t.get("zoom"))
    }

    function op(t, e) { f(e.get("geoCoord"), function(e, n) { t.addGeoCoord(n, e) }) }

    function sp(t, e) {
        var n = {};
        return f(t, function(t) {
            t.each(t.mapDimension("value"), function(e, i) {
                var a = "ec-" + t.getName(i);
                n[a] = n[a] || [], isNaN(e) || n[a].push(e)
            })
        }), t[0].map(t[0].mapDimension("value"), function(i, a) { for (var r = "ec-" + t[0].getName(a), o = 0, s = 1 / 0, l = -1 / 0, u = n[r].length, h = 0; u > h; h++) s = Math.min(s, n[r][h]), l = Math.max(l, n[r][h]), o += n[r][h]; var c; return c = "min" === e ? s : "max" === e ? l : "average" === e ? o / u : o, 0 === u ? 0 / 0 : c })
    }

    function lp(t) {
        var e = t.data;
        e && e[0] && e[0][0] && e[0][0].coord && (t.data = g(e, function(t) {
            var e = [t[0].coord, t[1].coord],
                n = { coords: e };
            return t[0].name && (n.fromName = t[0].name), t[1].name && (n.toName = t[1].name), r([n, t[0], t[1]])
        }))
    }

    function up(t) { return isNaN(+t.cpx1) || isNaN(+t.cpy1) }

    function hp(t) { return "_" + t + "Type" }

    function cp(t, e, n) {
        var i = e.getItemVisual(n, "color"),
            a = e.getItemVisual(n, t),
            r = e.getItemVisual(n, t + "Size");
        if (a && "none" !== a) { _(r) || (r = [r, r]); var o = zh(a, -r[0] / 2, -r[1] / 2, r[0], r[1], i); return o.name = t, o }
    }

    function dp(t) { var e = new qP({ name: "line", subPixelOptimize: !0 }); return fp(e.shape, t), e }

    function fp(t, e) {
        t.x1 = e[0][0], t.y1 = e[0][1], t.x2 = e[1][0], t.y2 = e[1][1], t.percent = 1;
        var n = e[2];
        n ? (t.cpx1 = n[0], t.cpy1 = n[1]) : (t.cpx1 = 0 / 0, t.cpy1 = 0 / 0)
    }

    function gp() {
        var t = this,
            e = t.childOfName("fromSymbol"),
            n = t.childOfName("toSymbol"),
            i = t.childOfName("label");
        if (e || n || !i.ignore) {
            for (var a = 1, r = this.parent; r;) r.scale && (a /= r.scale[0]), r = r.parent;
            var o = t.childOfName("line");
            if (this.__dirty || o.__dirty) {
                var s = o.shape.percent,
                    l = o.pointAt(0),
                    u = o.pointAt(s),
                    h = j([], u, l);
                if (te(h, h), e) {
                    e.attr("position", l);
                    var c = o.tangentAt(0);
                    e.attr("rotation", Math.PI / 2 - Math.atan2(c[1], c[0])), e.attr("scale", [a * s, a * s])
                }
                if (n) {
                    n.attr("position", u);
                    var c = o.tangentAt(1);
                    n.attr("rotation", -Math.PI / 2 - Math.atan2(c[1], c[0])), n.attr("scale", [a * s, a * s])
                }
                if (!i.ignore) {
                    i.attr("position", u);
                    var d, f, g, p = 5 * a;
                    if ("end" === i.__position) d = [h[0] * p + u[0], h[1] * p + u[1]], f = h[0] > .8 ? "left" : h[0] < -.8 ? "right" : "center", g = h[1] > .8 ? "top" : h[1] < -.8 ? "bottom" : "middle";
                    else if ("middle" === i.__position) {
                        var m = s / 2,
                            c = o.tangentAt(m),
                            v = [c[1], -c[0]],
                            y = o.pointAt(m);
                        v[1] > 0 && (v[0] = -v[0], v[1] = -v[1]), d = [y[0] + v[0] * p, y[1] + v[1] * p], f = "center", g = "bottom";
                        var x = -Math.atan2(c[1], c[0]);
                        u[0] < l[0] && (x = Math.PI + x), i.attr("rotation", x)
                    } else d = [-h[0] * p + l[0], -h[1] * p + l[1]], f = h[0] > .8 ? "right" : h[0] < -.8 ? "left" : "center", g = h[1] > .8 ? "bottom" : h[1] < -.8 ? "top" : "middle";
                    i.attr({ style: { textVerticalAlign: i.__verticalAlign || g, textAlign: i.__textAlign || f }, position: d, scale: [a, a] })
                }
            }
        }
    }

    function pp(t, e, n) { Vw.call(this), this._createLine(t, e, n) }

    function mp(t) { this._ctor = t || pp, this.group = new Vw }

    function vp(t, e, n, i) {
        var a = e.getItemLayout(n);
        if (wp(a)) {
            var r = new t._ctor(e, n, i);
            e.setItemGraphicEl(n, r), t.group.add(r)
        }
    }

    function yp(t, e, n, i, a, r) { var o = e.getItemGraphicEl(i); return wp(n.getItemLayout(a)) ? (o ? o.updateData(n, a, r) : o = new t._ctor(n, a, r), n.setItemGraphicEl(a, o), void t.group.add(o)) : void t.group.remove(o) }

    function xp(t) { var e = t.hostModel; return { lineStyle: e.getModel("lineStyle").getLineStyle(), hoverLineStyle: e.getModel("emphasis.lineStyle").getLineStyle(), labelModel: e.getModel("label"), hoverLabelModel: e.getModel("emphasis.label") } }

    function _p(t) { return isNaN(t[0]) || isNaN(t[1]) }

    function wp(t) { return !_p(t[0]) && !_p(t[1]) }

    function bp(t, e, n) { Vw.call(this), this.add(this.createLine(t, e, n)), this._updateEffectSymbol(t, e) }

    function Sp(t, e, n) { Vw.call(this), this._createPolyline(t, e, n) }

    function Ip(t, e, n) { bp.call(this, t, e, n), this._lastFrame = 0, this._lastFramePercent = 0 }

    function Mp() { this.group = new Vw }

    function Dp(t) { return t instanceof Array || (t = [t, t]), t }

    function Tp(t) { return "_EC_" + t }

    function Ap(t, e) { this.id = null == t ? "" : t, this.inEdges = [], this.outEdges = [], this.edges = [], this.hostGraph, this.dataIndex = null == e ? -1 : e }

    function Cp(t, e, n) { this.node1 = t, this.node2 = e, this.dataIndex = null == n ? -1 : n }

    function Lp(t) {
        var e = t.coordinateSystem;
        if ("view" !== e.type) return 1;
        var n = t.option.nodeScaleRatio,
            i = e.scale,
            a = i && i[0] || 1,
            r = e.getZoom(),
            o = (r - 1) * n + 1;
        return o / a
    }

    function Pp(t) { var e = t.getVisual("symbolSize"); return e instanceof Array && (e = (e[0] + e[1]) / 2), +e }

    function kp(t, e, n) {
        for (var i, a = t[0], r = t[1], o = t[2], s = 1 / 0, l = n * n, u = .1, h = .1; .9 >= h; h += .1) {
            dk[0] = pk(a[0], r[0], o[0], h), dk[1] = pk(a[1], r[1], o[1], h);
            var c = vk(mk(dk, e) - l);
            s > c && (s = c, i = h)
        }
        for (var d = 0; 32 > d; d++) {
            var f = i + u;
            fk[0] = pk(a[0], r[0], o[0], i), fk[1] = pk(a[1], r[1], o[1], i), gk[0] = pk(a[0], r[0], o[0], f), gk[1] = pk(a[1], r[1], o[1], f);
            var c = mk(fk, e) - l;
            if (vk(c) < .01) break;
            var g = mk(gk, e) - l;
            u /= 2, 0 > c ? g >= 0 ? i += u : i -= u : g >= 0 ? i -= u : i += u
        }
        return i
    }

    function Np(t, e) { var n = t.getVisual("opacity"); return null != n ? n : t.getModel().get(e) }

    function Op(t, e, n) {
        var i = t.getGraphicEl(),
            a = Np(t, e);
        null != n && (null == a && (a = 1), a *= n), i.downplay && i.downplay(), i.traverse(function(t) {
            if (!t.isGroup) {
                var e = t.lineLabelOriginalOpacity;
                (null == e || null != n) && (e = a), t.setStyle("opacity", e)
            }
        })
    }

    function Ep(t, e) {
        var n = Np(t, e),
            i = t.getGraphicEl();
        i.traverse(function(t) {!t.isGroup && t.setStyle("opacity", n) }), i.highlight && i.highlight()
    }

    function zp(t) { return t instanceof Array || (t = [t, t]), t }

    function Rp(t) {
        var e = t.coordinateSystem;
        if (!e || "view" === e.type) {
            var n = t.getGraph();
            n.eachNode(function(t) {
                var e = t.getModel();
                t.setLayout([+e.get("x"), +e.get("y")])
            }), Bp(n)
        }
    }

    function Bp(t) {
        t.eachEdge(function(t) {
            var e = t.getModel().get("lineStyle.curveness") || 0,
                n = H(t.node1.getLayout()),
                i = H(t.node2.getLayout()),
                a = [n, i]; + e && a.push([(n[0] + i[0]) / 2 - (n[1] - i[1]) * e, (n[1] + i[1]) / 2 - (i[0] - n[0]) * e]), t.setLayout(a)
        })
    }

    function Vp(t, e) {
        var n = t.coordinateSystem;
        if (!n || "view" === n.type) {
            var i = n.getBoundingRect(),
                a = t.getData(),
                r = a.graph,
                o = i.width / 2 + i.x,
                s = i.height / 2 + i.y,
                l = Math.min(i.width, i.height) / 2,
                u = a.count();
            a.setLayout({ cx: o, cy: s }), u && (Lk[e](t, n, r, a, l, o, s, u), r.eachEdge(function(t) {
                var e, n = t.getModel().get("lineStyle.curveness") || 0,
                    i = H(t.node1.getLayout()),
                    a = H(t.node2.getLayout()),
                    r = (i[0] + a[0]) / 2,
                    l = (i[1] + a[1]) / 2; + n && (n *= 3, e = [o * n + r * (1 - n), s * n + l * (1 - n)]), t.setLayout([i, a, e])
            }))
        }
    }

    function Gp(t, e, n) {
        for (var i = n.rect, a = i.width, r = i.height, o = [i.x + a / 2, i.y + r / 2], s = null == n.gravity ? .1 : n.gravity, l = 0; l < t.length; l++) {
            var u = t[l];
            u.p || (u.p = F(a * (Math.random() - .5) + o[0], r * (Math.random() - .5) + o[1])), u.pp = H(u.p), u.edges = null
        }
        var h = null == n.friction ? .6 : n.friction,
            c = h;
        return {
            warmUp: function() { c = .8 * h },
            setFixed: function(e) { t[e].fixed = !0 },
            setUnfixed: function(e) { t[e].fixed = !1 },
            step: function(n) {
                for (var i = [], a = t.length, r = 0; r < e.length; r++) {
                    var l = e[r];
                    if (!l.ignoreForceLayout) {
                        var u = l.n1,
                            h = l.n2;
                        j(i, h.p, u.p);
                        var d = Z(i) - l.d,
                            f = h.w / (u.w + h.w);
                        isNaN(f) && (f = 0), te(i, i), !u.fixed && kk(u.p, u.p, i, f * d * c), !h.fixed && kk(h.p, h.p, i, -(1 - f) * d * c)
                    }
                }
                for (var r = 0; a > r; r++) {
                    var g = t[r];
                    g.fixed || (j(i, o, g.p), kk(g.p, g.p, i, s * c))
                }
                for (var r = 0; a > r; r++)
                    for (var u = t[r], p = r + 1; a > p; p++) {
                        var h = t[p];
                        j(i, h.p, u.p);
                        var d = Z(i);
                        0 === d && (X(i, Math.random() - .5, Math.random() - .5), d = 1);
                        var m = (u.rep + h.rep) / d / d;
                        !u.fixed && kk(u.pp, u.pp, i, m), !h.fixed && kk(h.pp, h.pp, i, -m)
                    }
                for (var v = [], r = 0; a > r; r++) {
                    var g = t[r];
                    g.fixed || (j(v, g.p, g.pp), kk(g.p, g.p, v, c), W(g.pp, g.p))
                }
                c = .992 * c, n && n(t, e, .01 > c)
            }
        }
    }

    function Fp(t, e, n) { var i = t.getBoxLayoutParams(); return i.aspect = n, Bo(i, { width: e.getWidth(), height: e.getHeight() }) }

    function Wp(t, e, n, i, a) {
        var r = t.ends,
            o = new Bk({ shape: { points: a ? Xp(r, i, t) : r } });
        return Hp(t, o, e, n, a), o
    }

    function Hp(t, e, n, i, a) {
        var r = n.hostModel,
            o = zI[a ? "initProps" : "updateProps"];
        o(e, { shape: { points: t.ends } }, r, i);
        var s = n.getItemModel(i),
            l = s.getModel(zk),
            u = n.getItemVisual(i, "color"),
            h = l.getItemStyle(["borderColor"]);
        h.stroke = u, h.strokeNoScale = !0, e.useStyle(h), e.z2 = 100;
        var c = s.getModel(Rk).getItemStyle();
        Mr(e, c)
    }

    function Xp(t, e, n) { return g(t, function(t) { return t = t.slice(), t[e] = n.initBaseline, t }) }

    function Yp(t) {
        var e = [],
            n = [];
        return t.eachSeriesByType("boxplot", function(t) {
            var i = t.getBaseAxis(),
                a = u(n, i);
            0 > a && (a = n.length, n[a] = i, e[a] = { axis: i, seriesModels: [] }), e[a].seriesModels.push(t)
        }), e
    }

    function Up(t) {
        var e, n, i = t.axis,
            a = t.seriesModels,
            r = a.length,
            o = t.boxWidthList = [],
            s = t.boxOffsetList = [],
            l = [];
        if ("category" === i.type) n = i.getBandWidth();
        else {
            var u = 0;
            Fk(a, function(t) { u = Math.max(u, t.getData().count()) }), e = i.getExtent(), Math.abs(e[1] - e[0]) / u
        }
        Fk(a, function(t) {
            var e = t.get("boxWidth");
            _(e) || (e = [e, e]), l.push([lo(e[0], n) || 0, lo(e[1], n) || 0])
        });
        var h = .8 * n - 2,
            c = h / r * .3,
            d = (h - c * (r - 1)) / r,
            f = d / 2 - h / 2;
        Fk(a, function(t, e) { s.push(f), f += c + d, o.push(Math.min(Math.max(d, l[e][0]), l[e][1])) })
    }

    function jp(t, e, n) {
        function i(t, n, i) {
            var a = s.get(n, i),
                r = [];
            r[u] = t, r[h] = a;
            var l;
            return isNaN(t) || isNaN(a) ? l = [0 / 0, 0 / 0] : (l = o.dataToPoint(r), l[u] += e), l
        }

        function a(t, e, n) {
            var i = e.slice(),
                a = e.slice();
            i[u] += l, a[u] -= l, n ? t.push(i, a) : t.push(a, i)
        }

        function r(t, e) {
            var n = e.slice(),
                i = e.slice();
            n[u] -= l, i[u] += l, t.push(n, i)
        }
        var o = t.coordinateSystem,
            s = t.getData(),
            l = n / 2,
            u = "horizontal" === t.get("layout") ? 0 : 1,
            h = 1 - u,
            c = ["x", "y"],
            d = s.mapDimension(c[u]),
            f = s.mapDimension(c[h], !0);
        if (!(null == d || f.length < 5))
            for (var g = 0; g < s.count(); g++) {
                var p = s.get(d, g),
                    m = i(p, f[2], g),
                    v = i(p, f[0], g),
                    y = i(p, f[1], g),
                    x = i(p, f[3], g),
                    _ = i(p, f[4], g),
                    w = [];
                a(w, y, 0), a(w, x, 1), w.push(v, y, _, x), r(w, v), r(w, _), r(w, m), s.setItemLayout(g, { initBaseline: m[h], ends: w })
            }
    }

    function Zp(t) {
        if (!t.parallel) {
            var e = !1;
            f(t.series, function(t) { t && "parallel" === t.type && (e = !0) }), e && (t.parallel = [{}])
        }
    }

    function qp(t) {
        var e = Gi(t.parallelAxis);
        f(e, function(e) {
            if (S(e)) {
                var n = e.parallelIndex || 0,
                    i = Gi(t.parallel)[n];
                i && i.parallelAxisDefault && a(e, i.parallelAxisDefault, !1)
            }
        })
    }

    function Kp(t, e) { var n = t[e] - t[1 - e]; return { span: Math.abs(n), sign: n > 0 ? -1 : 0 > n ? 1 : e ? -1 : 1 } }

    function $p(t, e) { return Math.min(null != e[1] ? e[1] : 1 / 0, Math.max(null != e[0] ? e[0] : -1 / 0, t)) }

    function Jp(t, e, n) { this._axesMap = B(), this._axesLayout = {}, this.dimensions = t.dimensions, this._rect, this._model = t, this._init(t, e, n) }

    function Qp(t, e) { return jk(Zk(t, e[0]), e[1]) }

    function tm(t, e) { var n = e.layoutLength / (e.axisCount - 1); return { position: n * t, axisNameAvailableWidth: n, axisLabelShow: !0 } }

    function em(t, e) {
        var n, i, a = e.layoutLength,
            r = e.axisExpandWidth,
            o = e.axisCount,
            s = e.axisCollapseWidth,
            l = e.winInnerIndices,
            u = s,
            h = !1;
        return t < l[0] ? (n = t * s, i = s) : t <= l[1] ? (n = e.axisExpandWindow0Pos + t * r - e.axisExpandWindow[0], u = r, h = !0) : (n = a - (o - 1 - t) * s, i = s), { position: n, axisNameAvailableWidth: u, axisLabelShow: h, nameTruncateMaxWidth: i }
    }

    function nm(t, e) {
        var n = [];
        return t.eachComponent("parallel", function(i, a) {
            var r = new Jp(i, t, e);
            r.name = "parallel_" + a, r.resize(i, e), i.coordinateSystem = r, r.model = i, n.push(r)
        }), t.eachSeries(function(e) {
            if ("parallel" === e.get("coordinateSystem")) {
                var n = t.queryComponents({ mainType: "parallel", index: e.get("parallelIndex"), id: e.get("parallelId") })[0];
                e.coordinateSystem = n.coordinateSystem
            }
        }), n
    }

    function im(t, e) { return e.type || (e.data ? "category" : "value") }

    function am(t) { Z_.call(this), this._zr = t, this.group = new Vw, this._brushType, this._brushOption, this._panels, this._track = [], this._dragging, this._lastMouseMovePoint = {}, this._covers = [], this._creatingCover, this._creatingPanel, this._enableGlobalPan, this._uid = "brushController_" + pN++, this._handlers = {}, iN(mN, function(t, e) { this._handlers[e] = y(t, this) }, this) }

    function rm(t, e) {
        var n = t._zr;
        t._enableGlobalPan || Df(n, cN, t._uid), iN(t._handlers, function(t, e) { n.on(e, t) }), t._brushType = e.brushType, t._brushOption = a(i(gN), e, !0)
    }

    function om(t) {
        var e = t._zr;
        Tf(e, cN, t._uid), iN(t._handlers, function(t, n) { e.off(n, t) }), t._brushType = t._brushOption = null
    }

    function sm(t, e) { var n = vN[e.brushType].createCover(t, e); return n.__brushOption = e, hm(n, e), t.group.add(n), n }

    function lm(t, e) { var n = dm(e); return n.endCreating && (n.endCreating(t, e), hm(e, e.__brushOption)), e }

    function um(t, e) {
        var n = e.__brushOption;
        dm(e).updateCoverShape(t, e, n.range, n)
    }

    function hm(t, e) {
        var n = e.z;
        null == n && (n = lN), t.traverse(function(t) { t.z = n, t.z2 = n })
    }

    function cm(t, e) { dm(e).updateCommon(t, e), um(t, e) }

    function dm(t) { return vN[t.__brushOption.brushType] }

    function fm(t, e, n) { var i = t._panels; if (!i) return !0; var a, r = t._transform; return iN(i, function(t) { t.isTargetByCursor(e, n, r) && (a = t) }), a }

    function gm(t, e) { var n = t._panels; if (!n) return !0; var i = e.__brushOption.panelId; return null != i ? n[i] : !0 }

    function pm(t) {
        var e = t._covers,
            n = e.length;
        return iN(e, function(e) { t.group.remove(e) }, t), e.length = 0, !!n
    }

    function mm(t, e) {
        var n = aN(t._covers, function(t) {
            var e = t.__brushOption,
                n = i(e.range);
            return { brushType: e.brushType, panelId: e.panelId, range: n }
        });
        t.trigger("brush", n, { isEnd: !!e.isEnd, removeOnClick: !!e.removeOnClick })
    }

    function vm(t) {
        var e = t._track;
        if (!e.length) return !1;
        var n = e[e.length - 1],
            i = e[0],
            a = n[0] - i[0],
            r = n[1] - i[1],
            o = sN(a * a + r * r, .5);
        return o > uN
    }

    function ym(t) { var e = t.length - 1; return 0 > e && (e = 0), [t[0], t[e]] }

    function xm(t, e, n, i) { var a = new Vw; return a.add(new cI({ name: "main", style: Sm(n), silent: !0, draggable: !0, cursor: "move", drift: nN(t, e, a, "nswe"), ondragend: nN(mm, e, { isEnd: !0 }) })), iN(i, function(n) { a.add(new cI({ name: n, style: { opacity: 0 }, draggable: !0, silent: !0, invisible: !0, drift: nN(t, e, a, n), ondragend: nN(mm, e, { isEnd: !0 }) })) }), a }

    function _m(t, e, n, i) {
        var a = i.brushStyle.lineWidth || 0,
            r = oN(a, hN),
            o = n[0][0],
            s = n[1][0],
            l = o - a / 2,
            u = s - a / 2,
            h = n[0][1],
            c = n[1][1],
            d = h - r + a / 2,
            f = c - r + a / 2,
            g = h - o,
            p = c - s,
            m = g + a,
            v = p + a;
        bm(t, e, "main", o, s, g, p), i.transformable && (bm(t, e, "w", l, u, r, v), bm(t, e, "e", d, u, r, v), bm(t, e, "n", l, u, m, r), bm(t, e, "s", l, f, m, r), bm(t, e, "nw", l, u, r, r), bm(t, e, "ne", d, u, r, r), bm(t, e, "sw", l, f, r, r), bm(t, e, "se", d, f, r, r))
    }

    function wm(t, e) {
        var n = e.__brushOption,
            i = n.transformable,
            a = e.childAt(0);
        a.useStyle(Sm(n)), a.attr({ silent: !i, cursor: i ? "move" : "default" }), iN(["w", "e", "n", "s", "se", "sw", "ne", "nw"], function(n) {
            var a = e.childOfName(n),
                r = Dm(t, n);
            a && a.attr({ silent: !i, invisible: !i, cursor: i ? fN[r] + "-resize" : null })
        })
    }

    function bm(t, e, n, i, a, r, o) {
        var s = e.childOfName(n);
        s && s.setShape(Pm(Lm(t, e, [
            [i, a],
            [i + r, a + o]
        ])))
    }

    function Sm(t) { return s({ strokeNoScale: !0 }, t.brushStyle) }

    function Im(t, e, n, i) {
        var a = [rN(t, n), rN(e, i)],
            r = [oN(t, n), oN(e, i)];
        return [
            [a[0], r[0]],
            [a[1], r[1]]
        ]
    }

    function Mm(t) { return Hr(t.group) }

    function Dm(t, e) {
        if (e.length > 1) { e = e.split(""); var n = [Dm(t, e[0]), Dm(t, e[1])]; return ("e" === n[0] || "w" === n[0]) && n.reverse(), n.join("") }
        var i = { w: "left", e: "right", n: "top", s: "bottom" },
            a = { left: "w", right: "e", top: "n", bottom: "s" },
            n = Yr(i[e], Mm(t));
        return a[n]
    }

    function Tm(t, e, n, i, a, r, o) {
        var s = i.__brushOption,
            l = t(s.range),
            u = Cm(n, r, o);
        iN(a.split(""), function(t) {
            var e = dN[t];
            l[e[0]][e[1]] += u[e[0]]
        }), s.range = e(Im(l[0][0], l[1][0], l[0][1], l[1][1])), cm(n, i), mm(n, { isEnd: !1 })
    }

    function Am(t, e, n, i) {
        var a = e.__brushOption.range,
            r = Cm(t, n, i);
        iN(a, function(t) { t[0] += r[0], t[1] += r[1] }), cm(t, e), mm(t, { isEnd: !1 })
    }

    function Cm(t, e, n) {
        var i = t.group,
            a = i.transformCoordToLocal(e, n),
            r = i.transformCoordToLocal(0, 0);
        return [a[0] - r[0], a[1] - r[1]]
    }

    function Lm(t, e, n) { var a = gm(t, e); return a && a !== !0 ? a.clipPath(n, t._transform) : i(n) }

    function Pm(t) {
        var e = rN(t[0][0], t[1][0]),
            n = rN(t[0][1], t[1][1]),
            i = oN(t[0][0], t[1][0]),
            a = oN(t[0][1], t[1][1]);
        return { x: e, y: n, width: i - e, height: a - n }
    }

    function km(t, e, n) {
        if (t._brushType) {
            var i = t._zr,
                a = t._covers,
                r = fm(t, e, n);
            if (!t._dragging)
                for (var o = 0; o < a.length; o++) { var s = a[o].__brushOption; if (r && (r === !0 || s.panelId === r.panelId) && vN[s.brushType].contain(a[o], n[0], n[1])) return }
            r && i.setCursorStyle("crosshair")
        }
    }

    function Nm(t) {
        var e = t.event;
        e.preventDefault && e.preventDefault()
    }

    function Om(t, e, n) { return t.childOfName("main").contain(e, n) }

    function Em(t, e, n, a) {
        var r, o = t._creatingCover,
            s = t._creatingPanel,
            l = t._brushOption;
        if (t._track.push(n.slice()), vm(t) || o) {
            if (s && !o) {
                "single" === l.brushMode && pm(t);
                var u = i(l);
                u.brushType = zm(u.brushType, s), u.panelId = s === !0 ? null : s.panelId, o = t._creatingCover = sm(t, u), t._covers.push(o)
            }
            if (o) {
                var h = vN[zm(t._brushType, s)],
                    c = o.__brushOption;
                c.range = h.getCreatingRange(Lm(t, o, t._track)), a && (lm(t, o), h.updateCommon(t, o)), um(t, o), r = { isEnd: a }
            }
        } else a && "single" === l.brushMode && l.removeOnClick && fm(t, e, n) && pm(t) && (r = { isEnd: a, removeOnClick: !0 });
        return r
    }

    function zm(t, e) { return "auto" === t ? e.defaultBrushType : t }

    function Rm(t, e, n) {
        if (t._dragging) {
            !n && Nm(e);
            var i = e.offsetX,
                a = e.offsetY,
                r = t._lastMouseMovePoint;
            n && (i = r.x, a = r.y);
            var o = t.group.transformCoordToLocal(i, a),
                s = Em(t, e, o, !0);
            t._dragging = !1, t._track = [], t._creatingCover = null, s && mm(t, s)
        }
    }

    function Bm(t) {
        return {
            createCover: function(e, n) {
                return xm(nN(Tm, function(e) { var n = [e, [0, 100]]; return t && n.reverse(), n }, function(e) { return e[t] }), e, n, [
                    ["w", "e"],
                    ["n", "s"]
                ][t])
            },
            getCreatingRange: function(e) {
                var n = ym(e),
                    i = rN(n[0][t], n[1][t]),
                    a = oN(n[0][t], n[1][t]);
                return [i, a]
            },
            updateCoverShape: function(e, n, i, a) {
                var r, o = gm(e, n);
                if (o !== !0 && o.getLinearBrushOtherExtent) r = o.getLinearBrushOtherExtent(t, e._transform);
                else {
                    var s = e._zr;
                    r = [0, [s.getWidth(), s.getHeight()][1 - t]]
                }
                var l = [i, r];
                t && l.reverse(), _m(e, n, l, a)
            },
            updateCommon: wm,
            contain: Om
        }
    }

    function Vm(t) {
        return t = Wm(t),
            function(e) { return jr(e, t) }
    }

    function Gm(t, e) {
        return t = Wm(t),
            function(n) {
                var i = null != e ? e : n,
                    a = i ? t.width : t.height,
                    r = i ? t.x : t.y;
                return [r, r + (a || 0)]
            }
    }

    function Fm(t, e, n) {
        return t = Wm(t),
            function(i, a) { return t.contain(a[0], a[1]) && !Vf(i, e, n) }
    }

    function Wm(t) { return bn.create(t) }

    function Hm(t, e, n) { return n && "axisAreaSelect" === n.type && e.findComponents({ mainType: "parallelAxis", query: n })[0] === t }

    function Xm(t) { var e = t.axis; return g(t.activeIntervals, function(t) { return { brushType: "lineX", panelId: "pl", range: [e.dataToCoord(t[0], !0), e.dataToCoord(t[1], !0)] } }) }

    function Ym(t, e) { return e.getComponent("parallel", t.get("parallelIndex")) }

    function Um(t, e) { var n = t._model; return n.get("axisExpandable") && n.get("axisExpandTriggerOn") === e }

    function jm(t, e) {
        if (!t.encodeDefine) {
            var n = e.ecModel.getComponent("parallel", e.get("parallelIndex"));
            if (n) {
                var i = t.encodeDefine = B();
                f(n.dimensions, function(t) {
                    var e = Zm(t);
                    i.set(t, e)
                })
            }
        }
    }

    function Zm(t) { return +t.replace("dim", "") }

    function qm(t, e, n) {
        var i = t.model,
            a = t.getRect(),
            r = new cI({ shape: { x: a.x, y: a.y, width: a.width, height: a.height } }),
            o = "horizontal" === i.get("layout") ? "width" : "height";
        return r.setShape(o, 0), Wr(r, { shape: { width: a.width, height: a.height } }, e, n), r
    }

    function Km(t, e, n, i) {
        for (var a = [], r = 0; r < n.length; r++) {
            var o = n[r],
                s = t.get(t.mapDimension(o), e);
            tv(s, i.getAxis(o).type) || a.push(i.dataToPoint(s, o))
        }
        return a
    }

    function $m(t, e, n, i, a) {
        var r = Km(t, n, i, a),
            o = new lI({ shape: { points: r }, silent: !0, z2: 10 });
        return e.add(o), t.setItemGraphicEl(n, o), o
    }

    function Jm(t) { var e = t.get("smooth", !0); return e === !0 && (e = bN), { lineStyle: t.getModel("lineStyle").getLineStyle(), smooth: null != e ? e : bN } }

    function Qm(t, e, n, i) {
        var a = i.lineStyle;
        if (e.hasItemOption) {
            var r = e.getItemModel(n).getModel("lineStyle");
            a = r.getLineStyle()
        }
        t.useStyle(a);
        var o = t.style;
        o.fill = null, o.stroke = e.getItemVisual(n, "color"), o.opacity = e.getItemVisual(n, "opacity"), i.smooth && (t.shape.smooth = i.smooth)
    }

    function tv(t, e) { return "category" === e ? null == t : null == t || isNaN(t) }

    function ev(t, e) {
        var n = t.get("center"),
            i = e.getWidth(),
            a = e.getHeight(),
            r = Math.min(i, a),
            o = lo(n[0], e.getWidth()),
            s = lo(n[1], e.getHeight()),
            l = lo(t.get("radius"), r / 2);
        return { cx: o, cy: s, r: l }
    }

    function nv(t, e) { return e && ("string" == typeof e ? t = e.replace("{value}", null != t ? t : "") : "function" == typeof e && (t = e(t))), t }

    function iv(t, e) {
        Vw.call(this);
        var n = new sI,
            i = new lI,
            a = new QS;
        this.add(n), this.add(i), this.add(a), this.highDownOnUpdate = function(t, e) { "emphasis" === e ? (i.ignore = i.hoverIgnore, a.ignore = a.hoverIgnore) : (i.ignore = i.normalIgnore, a.ignore = a.normalIgnore) }, this.updateData(t, e, !0)
    }

    function av(t, e) { return Bo(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() }) }

    function rv(t, e) { for (var n = t.mapDimension("value"), i = t.mapArray(n, function(t) { return t }), a = [], r = "ascending" === e, o = 0, s = t.count(); s > o; o++) a[o] = o; return "function" == typeof e ? a.sort(e) : "none" !== e && a.sort(function(t, e) { return r ? i[t] - i[e] : i[e] - i[t] }), a }

    function ov(t) {
        t.each(function(e) {
            var n, i, a, r, o = t.getItemModel(e),
                s = o.getModel("label"),
                l = s.get("position"),
                u = o.getModel("labelLine"),
                h = t.getItemLayout(e),
                c = h.points,
                d = "inner" === l || "inside" === l || "center" === l || "insideLeft" === l || "insideRight" === l;
            if (d) "insideLeft" === l ? (i = (c[0][0] + c[3][0]) / 2 + 5, a = (c[0][1] + c[3][1]) / 2, n = "left") : "insideRight" === l ? (i = (c[1][0] + c[2][0]) / 2 - 5, a = (c[1][1] + c[2][1]) / 2, n = "right") : (i = (c[0][0] + c[1][0] + c[2][0] + c[3][0]) / 4, a = (c[0][1] + c[1][1] + c[2][1] + c[3][1]) / 4, n = "center"), r = [
                [i, a],
                [i, a]
            ];
            else {
                var f, g, p, m = u.get("length");
                "left" === l ? (f = (c[3][0] + c[0][0]) / 2, g = (c[3][1] + c[0][1]) / 2, p = f - m, i = p - 5, n = "right") : "right" === l ? (f = (c[1][0] + c[2][0]) / 2, g = (c[1][1] + c[2][1]) / 2, p = f + m, i = p + 5, n = "left") : "rightTop" === l ? (f = c[1][0], g = c[1][1], p = f + m, i = p + 5, n = "top") : "rightBottom" === l ? (f = c[2][0], g = c[2][1], p = f + m, i = p + 5, n = "bottom") : "leftTop" === l ? (f = c[0][0], g = c[1][1], p = f - m, i = p - 5, n = "right") : "leftBottom" === l ? (f = c[3][0], g = c[2][1], p = f - m, i = p - 5, n = "right") : (f = (c[1][0] + c[2][0]) / 2, g = (c[1][1] + c[2][1]) / 2, p = f + m, i = p + 5, n = "left");
                var v = g;
                r = [
                    [f, g],
                    [p, v]
                ], a = v
            }
            h.label = { linePoints: r, x: i, y: a, verticalAlign: "middle", textAlign: n, inside: d }
        })
    }

    function sv(t, e) { return t.getVisual("opacity") || t.getModel().get(e) }

    function lv(t, e, n) {
        var i = t.getGraphicEl(),
            a = sv(t, e);
        null != n && (null == a && (a = 1), a *= n), i.downplay && i.downplay(), i.traverse(function(t) { "group" !== t.type && t.setStyle("opacity", a) })
    }

    function uv(t, e) {
        var n = sv(t, e),
            i = t.getGraphicEl();
        i.highlight && i.highlight(), i.traverse(function(t) { "group" !== t.type && t.setStyle("opacity", n) })
    }

    function hv(t, e, n) { var i = new cI({ shape: { x: t.x - 10, y: t.y - 10, width: 0, height: t.height + 20 } }); return Wr(i, { shape: { width: t.width + 20, height: t.height + 20 } }, e, n), i }

    function cv(t, e) { return Bo(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() }) }

    function dv(t, e, n, i, a, r, o, s, l) { gv(t, e, n, a, r, s, l), xv(t, e, r, a, i, o, s), Lv(t, s) }

    function fv(t) {
        f(t, function(t) {
            var e = Av(t.outEdges, Tv),
                n = Av(t.inEdges, Tv),
                i = Math.max(e, n);
            t.setLayout({ value: i }, !0)
        })
    }

    function gv(t, e, n, i, a, r, o) {
        for (var s = [], l = [], u = [], h = [], c = 0, d = 0, f = 0; f < e.length; f++) s[f] = 1;
        for (f = 0; f < t.length; f++) l[f] = t[f].inEdges.length, 0 === l[f] && u.push(t[f]);
        for (var g = -1; u.length;) {
            for (var p = 0; p < u.length; p++) {
                var m = u[p],
                    v = m.hostGraph.data.getRawDataItem(m.dataIndex),
                    y = null != v.depth && v.depth >= 0;
                y && v.depth > g && (g = v.depth), m.setLayout({ depth: y ? v.depth : c }, !0), "vertical" === r ? m.setLayout({ dy: n }, !0) : m.setLayout({ dx: n }, !0);
                for (var x = 0; x < m.outEdges.length; x++) {
                    var _ = m.outEdges[x],
                        w = e.indexOf(_);
                    s[w] = 0;
                    var b = _.node2,
                        S = t.indexOf(b);
                    0 === --l[S] && h.indexOf(b) < 0 && h.push(b)
                }
            }++c, u = h, h = []
        }
        for (f = 0; f < s.length; f++)
            if (1 === s[f]) throw new Error("Sankey is a DAG, the original data has cycle!");
        var I = g > c - 1 ? g : c - 1;
        o && "left" !== o && mv(t, o, r, I);
        var d = "vertical" === r ? (a - n) / I : (i - n) / I;
        yv(t, d, r)
    }

    function pv(t) { var e = t.hostGraph.data.getRawDataItem(t.dataIndex); return null != e.depth && e.depth >= 0 }

    function mv(t, e, n, i) {
        if ("right" === e) {
            for (var a = [], r = t, o = 0; r.length;) {
                for (var s = 0; s < r.length; s++) {
                    var l = r[s];
                    l.setLayout({ skNodeHeight: o }, !0);
                    for (var u = 0; u < l.inEdges.length; u++) {
                        var h = l.inEdges[u];
                        a.indexOf(h.node1) < 0 && a.push(h.node1)
                    }
                }
                r = a, a = [], ++o
            }
            f(t, function(t) { pv(t) || t.setLayout({ depth: Math.max(0, i - t.getLayout().skNodeHeight) }, !0) })
        } else "justify" === e && vv(t, i)
    }

    function vv(t, e) { f(t, function(t) { pv(t) || t.outEdges.length || t.setLayout({ depth: e }, !0) }) }

    function yv(t, e, n) { f(t, function(t) { var i = t.getLayout().depth * e; "vertical" === n ? t.setLayout({ y: i }, !0) : t.setLayout({ x: i }, !0) }) }

    function xv(t, e, n, i, a, r, o) {
        var s = _v(t, o);
        wv(s, e, n, i, a, o), bv(s, a, n, i, o);
        for (var l = 1; r > 0; r--) l *= .99, Sv(s, l, o), bv(s, a, n, i, o), Cv(s, l, o), bv(s, a, n, i, o)
    }

    function _v(t, e) {
        var n = [],
            i = "vertical" === e ? "y" : "x",
            a = ea(t, function(t) { return t.getLayout()[i] });
        return a.keys.sort(function(t, e) { return t - e }), f(a.keys, function(t) { n.push(a.buckets.get(t)) }), n
    }

    function wv(t, e, n, i, a, r) {
        var o = 1 / 0;
        f(t, function(t) {
            var e = t.length,
                s = 0;
            f(t, function(t) { s += t.getLayout().value });
            var l = "vertical" === r ? (i - (e - 1) * a) / s : (n - (e - 1) * a) / s;
            o > l && (o = l)
        }), f(t, function(t) { f(t, function(t, e) { var n = t.getLayout().value * o; "vertical" === r ? (t.setLayout({ x: e }, !0), t.setLayout({ dx: n }, !0)) : (t.setLayout({ y: e }, !0), t.setLayout({ dy: n }, !0)) }) }), f(e, function(t) {
            var e = +t.getValue() * o;
            t.setLayout({ dy: e }, !0)
        })
    }

    function bv(t, e, n, i, a) {
        var r = "vertical" === a ? "x" : "y";
        f(t, function(t) {
            t.sort(function(t, e) { return t.getLayout()[r] - e.getLayout()[r] });
            for (var o, s, l, u = 0, h = t.length, c = "vertical" === a ? "dx" : "dy", d = 0; h > d; d++) s = t[d], l = u - s.getLayout()[r], l > 0 && (o = s.getLayout()[r] + l, "vertical" === a ? s.setLayout({ x: o }, !0) : s.setLayout({ y: o }, !0)), u = s.getLayout()[r] + s.getLayout()[c] + e;
            var f = "vertical" === a ? i : n;
            if (l = u - e - f, l > 0)
                for (o = s.getLayout()[r] - l, "vertical" === a ? s.setLayout({ x: o }, !0) : s.setLayout({ y: o }, !0), u = o, d = h - 2; d >= 0; --d) s = t[d], l = s.getLayout()[r] + s.getLayout()[c] + e - u, l > 0 && (o = s.getLayout()[r] - l, "vertical" === a ? s.setLayout({ x: o }, !0) : s.setLayout({ y: o }, !0)), u = s.getLayout()[r]
        })
    }

    function Sv(t, e, n) {
        f(t.slice().reverse(), function(t) {
            f(t, function(t) {
                if (t.outEdges.length) {
                    var i = Av(t.outEdges, Iv, n) / Av(t.outEdges, Tv, n);
                    if ("vertical" === n) {
                        var a = t.getLayout().x + (i - Dv(t, n)) * e;
                        t.setLayout({ x: a }, !0)
                    } else {
                        var r = t.getLayout().y + (i - Dv(t, n)) * e;
                        t.setLayout({ y: r }, !0)
                    }
                }
            })
        })
    }

    function Iv(t, e) { return Dv(t.node2, e) * t.getValue() }

    function Mv(t, e) { return Dv(t.node1, e) * t.getValue() }

    function Dv(t, e) { return "vertical" === e ? t.getLayout().x + t.getLayout().dx / 2 : t.getLayout().y + t.getLayout().dy / 2 }

    function Tv(t) { return t.getValue() }

    function Av(t, e, n) {
        for (var i = 0, a = t.length, r = -1; ++r < a;) {
            var o = +e.call(t, t[r], n);
            isNaN(o) || (i += o)
        }
        return i
    }

    function Cv(t, e, n) {
        f(t, function(t) {
            f(t, function(t) {
                if (t.inEdges.length) {
                    var i = Av(t.inEdges, Mv, n) / Av(t.inEdges, Tv, n);
                    if ("vertical" === n) {
                        var a = t.getLayout().x + (i - Dv(t, n)) * e;
                        t.setLayout({ x: a }, !0)
                    } else {
                        var r = t.getLayout().y + (i - Dv(t, n)) * e;
                        t.setLayout({ y: r }, !0)
                    }
                }
            })
        })
    }

    function Lv(t, e) {
        var n = "vertical" === e ? "x" : "y";
        f(t, function(t) { t.outEdges.sort(function(t, e) { return t.node2.getLayout()[n] - e.node2.getLayout()[n] }), t.inEdges.sort(function(t, e) { return t.node1.getLayout()[n] - e.node1.getLayout()[n] }) }), f(t, function(t) {
            var e = 0,
                n = 0;
            f(t.outEdges, function(t) { t.setLayout({ sy: e }, !0), e += t.getLayout().dy }), f(t.inEdges, function(t) { t.setLayout({ ty: n }, !0), n += t.getLayout().dy })
        })
    }

    function Pv(t, e, n) { this.dimension = "single", this.dimensions = ["single"], this._axis = null, this._rect, this._init(t, e, n), this.model = t }

    function kv(t, e) {
        var n = [];
        return t.eachComponent("singleAxis", function(i, a) {
            var r = new Pv(i, t, e);
            r.name = "single_" + a, r.resize(i, e), i.coordinateSystem = r, n.push(r)
        }), t.eachSeries(function(e) {
            if ("singleAxis" === e.get("coordinateSystem")) {
                var n = t.queryComponents({ mainType: "singleAxis", index: e.get("singleAxisIndex"), id: e.get("singleAxisId") })[0];
                e.coordinateSystem = n && n.coordinateSystem
            }
        }), n
    }

    function Nv(t, e) {
        e = e || {};
        var n = t.coordinateSystem,
            i = t.axis,
            a = {},
            r = i.position,
            o = i.orient,
            s = n.getRect(),
            l = [s.x, s.x + s.width, s.y, s.y + s.height],
            u = { horizontal: { top: l[2], bottom: l[3] }, vertical: { left: l[0], right: l[1] } };
        a.position = ["vertical" === o ? u.vertical[r] : l[0], "horizontal" === o ? u.horizontal[r] : l[3]];
        var h = { horizontal: 0, vertical: 1 };
        a.rotation = Math.PI / 2 * h[o];
        var c = { top: -1, bottom: 1, right: 1, left: -1 };
        a.labelDirection = a.tickDirection = a.nameDirection = c[r], t.get("axisTick.inside") && (a.tickDirection = -a.tickDirection), A(e.labelInside, t.get("axisLabel.inside")) && (a.labelDirection = -a.labelDirection);
        var d = e.rotate;
        return null == d && (d = t.get("axisLabel.rotate")), a.labelRotation = "top" === r ? -d : d, a.z2 = 1, a
    }

    function Ov(t, e) { return e.type || (e.data ? "category" : "value") }

    function Ev(t, e, n, i, a) {
        var r = t.axis;
        if (!r.scale.isBlank() && r.containData(e)) {
            if (!t.involveSeries) return void n.showPointer(t, e);
            var s = zv(e, t),
                l = s.payloadBatch,
                u = s.snapToValue;
            l[0] && null == a.seriesIndex && o(a, l[0]), !i && t.snap && r.containData(u) && null != u && (e = u), n.showPointer(t, e, l, a), n.showTooltip(t, s, u)
        }
    }

    function zv(t, e) {
        var n = e.axis,
            i = n.dim,
            a = t,
            r = [],
            o = Number.MAX_VALUE,
            s = -1;
        return XN(e.seriesModels, function(e) {
            var l, u, h = e.getData().mapDimension(i, !0);
            if (e.getAxisTooltipData) {
                var c = e.getAxisTooltipData(h, t, n);
                u = c.dataIndices, l = c.nestestValue
            } else {
                if (u = e.getData().indicesOfNearest(h[0], t, "category" === n.type ? .5 : null), !u.length) return;
                l = e.getData().get(h[0], u[0])
            }
            if (null != l && isFinite(l)) {
                var d = t - l,
                    f = Math.abs(d);
                o >= f && ((o > f || d >= 0 && 0 > s) && (o = f, s = d, a = l, r.length = 0), XN(u, function(t) { r.push({ seriesIndex: e.seriesIndex, dataIndexInside: t, dataIndex: e.getData().getRawIndex(t) }) }))
            }
        }), { payloadBatch: r, snapToValue: a }
    }

    function Rv(t, e, n, i) { t[e.key] = { value: n, payloadBatch: i } }

    function Bv(t, e, n, i) {
        var a = n.payloadBatch,
            r = e.axis,
            o = r.model,
            s = e.axisPointerModel;
        if (e.triggerTooltip && a.length) {
            var l = e.coordSys.model,
                u = Zc(l),
                h = t.map[u];
            h || (h = t.map[u] = { coordSysId: l.id, coordSysIndex: l.componentIndex, coordSysType: l.type, coordSysMainType: l.mainType, dataByAxis: [] }, t.list.push(h)), h.dataByAxis.push({ axisDim: r.dim, axisIndex: o.componentIndex, axisType: o.type, axisId: o.id, value: i, valueLabelOpt: { precision: s.get("label.precision"), formatter: s.get("label.formatter") }, seriesDataIndices: a.slice() })
        }
    }

    function Vv(t, e, n) {
        var i = n.axesInfo = [];
        XN(e, function(e, n) {
            var a = e.axisPointerModel.option,
                r = t[n];
            r ? (!e.useHandle && (a.status = "show"), a.value = r.value, a.seriesDataIndices = (r.payloadBatch || []).slice()) : !e.useHandle && (a.status = "hide"), "show" === a.status && i.push({ axisDim: e.axis.dim, axisIndex: e.axis.model.componentIndex, value: a.value })
        })
    }

    function Gv(t, e, n, i) {
        if (Xv(e) || !t.list.length) return void i({ type: "hideTip" });
        var a = ((t.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
        i({ type: "showTip", escapeConnect: !0, x: e[0], y: e[1], tooltipOption: n.tooltipOption, position: n.position, dataIndexInside: a.dataIndexInside, dataIndex: a.dataIndex, seriesIndex: a.seriesIndex, dataByCoordSys: t.list })
    }

    function Fv(t, e, n) {
        var i = n.getZr(),
            a = "axisPointerLastHighlights",
            r = UN(i)[a] || {},
            o = UN(i)[a] = {};
        XN(t, function(t) {
            var e = t.axisPointerModel.option;
            "show" === e.status && XN(e.seriesDataIndices, function(t) {
                var e = t.seriesIndex + " | " + t.dataIndex;
                o[e] = t
            })
        });
        var s = [],
            l = [];
        f(r, function(t, e) {!o[e] && l.push(t) }), f(o, function(t, e) {!r[e] && s.push(t) }), l.length && n.dispatchAction({ type: "downplay", escapeConnect: !0, batch: l }), s.length && n.dispatchAction({ type: "highlight", escapeConnect: !0, batch: s })
    }

    function Wv(t, e) { for (var n = 0; n < (t || []).length; n++) { var i = t[n]; if (e.axis.dim === i.axisDim && e.axis.model.componentIndex === i.axisIndex) return i } }

    function Hv(t) {
        var e = t.axis.model,
            n = {},
            i = n.axisDim = t.axis.dim;
        return n.axisIndex = n[i + "AxisIndex"] = e.componentIndex, n.axisName = n[i + "AxisName"] = e.name, n.axisId = n[i + "AxisId"] = e.id, n
    }

    function Xv(t) { return !t || null == t[0] || isNaN(t[0]) || null == t[1] || isNaN(t[1]) }

    function Yv(t, e, n) {
        if (!D_.node) {
            var i = e.getZr();
            ZN(i).records || (ZN(i).records = {}), Uv(i, e);
            var a = ZN(i).records[t] || (ZN(i).records[t] = {});
            a.handler = n
        }
    }

    function Uv(t, e) {
        function n(n, i) {
            t.on(n, function(n) {
                var a = Kv(e);
                qN(ZN(t).records, function(t) { t && i(t, n, a.dispatchAction) }), jv(a.pendings, e)
            })
        }
        ZN(t).initialized || (ZN(t).initialized = !0, n("click", x(qv, "click")), n("mousemove", x(qv, "mousemove")), n("globalout", Zv))
    }

    function jv(t, e) {
        var n, i = t.showTip.length,
            a = t.hideTip.length;
        i ? n = t.showTip[i - 1] : a && (n = t.hideTip[a - 1]), n && (n.dispatchAction = null, e.dispatchAction(n))
    }

    function Zv(t, e, n) { t.handler("leave", null, n) }

    function qv(t, e, n, i) { e.handler(t, n, i) }

    function Kv(t) {
        var e = { showTip: [], hideTip: [] },
            n = function(i) {
                var a = e[i.type];
                a ? a.push(i) : (i.dispatchAction = n, t.dispatchAction(i))
            };
        return { dispatchAction: n, pendings: e }
    }

    function $v(t, e) {
        if (!D_.node) {
            var n = e.getZr(),
                i = (ZN(n).records || {})[t];
            i && (ZN(n).records[t] = null)
        }
    }

    function Jv() {}

    function Qv(t, e, n, i) { ty($N(n).lastProp, i) || ($N(n).lastProp = i, e ? Fr(n, i, t) : (n.stopAnimation(), n.attr(i))) }

    function ty(t, e) { if (S(t) && S(e)) { var n = !0; return f(e, function(e, i) { n = n && ty(t[i], e) }), !!n } return t === e }

    function ey(t, e) { t[e.get("label.show") ? "show" : "hide"]() }

    function ny(t) { return { position: t.position.slice(), rotation: t.rotation || 0 } }

    function iy(t, e, n) {
        var i = e.get("z"),
            a = e.get("zlevel");
        t && t.traverse(function(t) { "group" !== t.type && (null != i && (t.z = i), null != a && (t.zlevel = a), t.silent = n) })
    }

    function ay(t) {
        var e, n = t.get("type"),
            i = t.getModel(n + "Style");
        return "line" === n ? (e = i.getLineStyle(), e.fill = null) : "shadow" === n && (e = i.getAreaStyle(), e.stroke = null), e
    }

    function ry(t, e, n, i, a) {
        var r = n.get("value"),
            o = sy(r, e.axis, e.ecModel, n.get("seriesDataIndices"), { precision: n.get("label.precision"), formatter: n.get("label.formatter") }),
            s = n.getModel("label"),
            l = ZI(s.get("padding") || 0),
            u = s.getFont(),
            h = Fn(o, u),
            c = a.position,
            d = h.width + l[1] + l[3],
            f = h.height + l[0] + l[2],
            g = a.align;
        "right" === g && (c[0] -= d), "center" === g && (c[0] -= d / 2);
        var p = a.verticalAlign;
        "bottom" === p && (c[1] -= f), "middle" === p && (c[1] -= f / 2), oy(c, d, f, i);
        var m = s.get("backgroundColor");
        m && "auto" !== m || (m = e.get("axisLine.lineStyle.color")), t.label = { shape: { x: 0, y: 0, width: d, height: f, r: s.get("borderRadius") }, position: c.slice(), style: { text: o, textFont: u, textFill: s.getTextColor(), textPosition: "inside", textPadding: l, fill: m, stroke: s.get("borderColor") || "transparent", lineWidth: s.get("borderWidth") || 0, shadowBlur: s.get("shadowBlur"), shadowColor: s.get("shadowColor"), shadowOffsetX: s.get("shadowOffsetX"), shadowOffsetY: s.get("shadowOffsetY") }, z2: 10 }
    }

    function oy(t, e, n, i) {
        var a = i.getWidth(),
            r = i.getHeight();
        t[0] = Math.min(t[0] + e, a) - e, t[1] = Math.min(t[1] + n, r) - n, t[0] = Math.max(t[0], 0), t[1] = Math.max(t[1], 0)
    }

    function sy(t, e, n, i, a) {
        t = e.scale.parse(t);
        var r = e.scale.getLabel(t, { precision: a.precision }),
            o = a.formatter;
        if (o) {
            var s = { value: Lh(e, t), axisDimension: e.dim, axisIndex: e.index, seriesData: [] };
            f(i, function(t) {
                var e = n.getSeriesByIndex(t.seriesIndex),
                    i = t.dataIndexInside,
                    a = e && e.getDataParams(i);
                a && s.seriesData.push(a)
            }), b(o) ? r = o.replace("{value}", r) : w(o) && (r = o(s))
        }
        return r
    }

    function ly(t, e, n) { var i = Ae(); return Ne(i, i, n.rotation), ke(i, i, n.position), Xr([t.dataToCoord(e), (n.labelOffset || 0) + (n.labelDirection || 1) * (n.labelMargin || 0)], i) }

    function uy(t, e, n, i, a, r) {
        var o = QA.innerTextLayout(n.rotation, 0, n.labelDirection);
        n.labelMargin = a.get("label.margin"), ry(e, i, a, r, { position: ly(i.axis, t, n), align: o.textAlign, verticalAlign: o.textVerticalAlign })
    }

    function hy(t, e, n) { return n = n || 0, { x1: t[n], y1: t[1 - n], x2: e[n], y2: e[1 - n] } }

    function cy(t, e, n) { return n = n || 0, { x: t[n], y: t[1 - n], width: e[n], height: e[1 - n] } }

    function dy(t, e, n, i, a, r) { return { cx: t, cy: e, r0: n, r: i, startAngle: a, endAngle: r, clockwise: !0 } }

    function fy(t, e) { var n = {}; return n[e.dim + "AxisIndex"] = e.index, t.getCartesian(n) }

    function gy(t) { return "x" === t.dim ? 0 : 1 }

    function py(t) { return t.isHorizontal() ? 0 : 1 }

    function my(t, e) { var n = t.getRect(); return [n[nO[e]], n[nO[e]] + n[iO[e]]] }

    function vy(t, e, n) { var i = new cI({ shape: { x: t.x - 10, y: t.y - 10, width: 0, height: t.height + 20 } }); return Wr(i, { shape: { width: t.width + 20, height: t.height + 20 } }, e, n), i }

    function yy(t, e, n) {
        if (t.count())
            for (var i, a = e.coordinateSystem, r = e.getLayerSeries(), o = t.mapDimension("single"), s = t.mapDimension("value"), l = g(r, function(e) { return g(e.indices, function(e) { var n = a.dataToPoint(t.get(o, e)); return n[1] = t.get(s, e), n }) }), u = xy(l), h = u.y0, c = n / u.max, d = r.length, f = r[0].indices.length, p = 0; f > p; ++p) { i = h[p] * c, t.setItemLayout(r[0].indices[p], { layerIndex: 0, x: l[0][p][0], y0: i, y: l[0][p][1] * c }); for (var m = 1; d > m; ++m) i += l[m - 1][p][1] * c, t.setItemLayout(r[m].indices[p], { layerIndex: m, x: l[m][p][0], y0: i, y: l[m][p][1] * c }) }
    }

    function xy(t) {
        for (var e, n = t.length, i = t[0].length, a = [], r = [], o = 0, s = {}, l = 0; i > l; ++l) {
            for (var u = 0, e = 0; n > u; ++u) e += t[u][l][1];
            e > o && (o = e), a.push(e)
        }
        for (var h = 0; i > h; ++h) r[h] = (o - a[h]) / 2;
        o = 0;
        for (var c = 0; i > c; ++c) {
            var d = a[c] + r[c];
            d > o && (o = d)
        }
        return s.y0 = r, s.max = o, s
    }

    function _y(t, e, n, i) {
        var a = t.getItemLayout(e),
            r = n.get("symbolRepeat"),
            o = n.get("symbolClip"),
            s = n.get("symbolPosition") || "start",
            l = n.get("symbolRotate"),
            u = (l || 0) * Math.PI / 180 || 0,
            h = n.get("symbolPatternSize") || 2,
            c = n.isAnimationEnabled(),
            d = { dataIndex: e, layout: a, itemModel: n, symbolType: t.getItemVisual(e, "symbol") || "circle", color: t.getItemVisual(e, "color"), symbolClip: o, symbolRepeat: r, symbolRepeatDirection: n.get("symbolRepeatDirection"), symbolPatternSize: h, rotation: u, animationModel: c ? n : null, hoverAnimation: c && n.get("hoverAnimation"), z2: n.getShallow("z", !0) || 0 };
        wy(n, r, a, i, d), Sy(t, e, a, r, o, d.boundingLength, d.pxSign, h, i, d), Iy(n, d.symbolScale, u, i, d);
        var f = d.symbolSize,
            g = n.get("symbolOffset");
        return _(g) && (g = [lo(g[0], f[0]), lo(g[1], f[1])]), My(n, f, a, r, o, g, s, d.valueLineWidth, d.boundingLength, d.repeatCutLength, i, d), d
    }

    function wy(t, e, n, i, a) {
        var r, o = i.valueDim,
            s = t.get("symbolBoundingData"),
            l = i.coordSys.getOtherAxis(i.coordSys.getBaseAxis()),
            u = l.toGlobalCoord(l.dataToCoord(0)),
            h = 1 - +(n[o.wh] <= 0);
        if (_(s)) {
            var c = [by(l, s[0]) - u, by(l, s[1]) - u];
            c[1] < c[0] && c.reverse(), r = c[h]
        } else r = null != s ? by(l, s) - u : e ? i.coordSysExtent[o.index][h] - u : n[o.wh];
        a.boundingLength = r, e && (a.repeatCutLength = n[o.wh]), a.pxSign = r > 0 ? 1 : 0 > r ? -1 : 0
    }

    function by(t, e) { return t.toGlobalCoord(t.dataToCoord(t.scale.parse(e))) }

    function Sy(t, e, n, i, a, r, o, s, l, u) {
        var h = l.valueDim,
            c = l.categoryDim,
            d = Math.abs(n[c.wh]),
            f = t.getItemVisual(e, "symbolSize");
        _(f) ? f = f.slice() : (null == f && (f = "100%"), f = [f, f]), f[c.index] = lo(f[c.index], d), f[h.index] = lo(f[h.index], i ? d : Math.abs(r)), u.symbolSize = f;
        var g = u.symbolScale = [f[0] / s, f[1] / s];
        g[h.index] *= (l.isHorizontal ? -1 : 1) * o
    }

    function Iy(t, e, n, i, a) {
        var r = t.get(cO) || 0;
        r && (fO.attr({ scale: e.slice(), rotation: n }), fO.updateTransform(), r /= fO.getLineScale(), r *= e[i.valueDim.index]), a.valueLineWidth = r
    }

    function My(t, e, n, i, a, r, s, l, u, h, c, d) {
        var f = c.categoryDim,
            g = c.valueDim,
            p = d.pxSign,
            m = Math.max(e[g.index] + l, 0),
            v = m;
        if (i) {
            var y = Math.abs(u),
                x = A(t.get("symbolMargin"), "15%") + "",
                _ = !1;
            x.lastIndexOf("!") === x.length - 1 && (_ = !0, x = x.slice(0, x.length - 1)), x = lo(x, e[g.index]);
            var w = Math.max(m + 2 * x, 0),
                b = _ ? 0 : 2 * x,
                S = Io(i),
                I = S ? i : Wy((y + b) / w),
                M = y - I * m;
            x = M / 2 / (_ ? I : I - 1), w = m + 2 * x, b = _ ? 0 : 2 * x, S || "fixed" === i || (I = h ? Wy((Math.abs(h) + b) / w) : 0), v = I * w - b, d.repeatTimes = I, d.symbolMargin = x
        }
        var D = p * (v / 2),
            T = d.pathPosition = [];
        T[f.index] = n[f.wh] / 2, T[g.index] = "start" === s ? D : "end" === s ? u - D : u / 2, r && (T[0] += r[0], T[1] += r[1]);
        var C = d.bundlePosition = [];
        C[f.index] = n[f.xy], C[g.index] = n[g.xy];
        var L = d.barRectShape = o({}, n);
        L[g.wh] = p * Math.max(Math.abs(n[g.wh]), Math.abs(T[g.index] + D)), L[f.wh] = n[f.wh];
        var P = d.clipShape = {};
        P[f.xy] = -n[f.xy], P[f.wh] = c.ecSize[f.wh], P[g.xy] = 0, P[g.wh] = n[g.wh]
    }

    function Dy(t) {
        var e = t.symbolPatternSize,
            n = zh(t.symbolType, -e / 2, -e / 2, e, e, t.color);
        return n.attr({ culling: !0 }), "image" !== n.type && n.setStyle({ strokeNoScale: !0 }), n
    }

    function Ty(t, e, n, i) {
        function a(t) {
            var e = h.slice(),
                i = n.pxSign,
                a = t;
            return ("start" === n.symbolRepeatDirection ? i > 0 : 0 > i) && (a = d - 1 - t), e[c.index] = g * (a - d / 2 + .5) + h[c.index], { position: e, scale: n.symbolScale.slice(), rotation: n.rotation }
        }

        function r() { Vy(t, function(t) { t.trigger("emphasis") }) }

        function o() { Vy(t, function(t) { t.trigger("normal") }) }
        var s = t.__pictorialBundle,
            l = n.symbolSize,
            u = n.valueLineWidth,
            h = n.pathPosition,
            c = e.valueDim,
            d = n.repeatTimes || 0,
            f = 0,
            g = l[e.valueDim.index] + u + 2 * n.symbolMargin;
        for (Vy(t, function(t) { t.__pictorialAnimationIndex = f, t.__pictorialRepeatTimes = d, d > f ? Gy(t, null, a(f), n, i) : Gy(t, null, { scale: [0, 0] }, n, i, function() { s.remove(t) }), Oy(t, n), f++ }); d > f; f++) {
            var p = Dy(n);
            p.__pictorialAnimationIndex = f, p.__pictorialRepeatTimes = d, s.add(p);
            var m = a(f);
            Gy(p, { position: m.position, scale: [0, 0] }, { scale: m.scale, rotation: m.rotation }, n, i), p.on("mouseover", r).on("mouseout", o), Oy(p, n)
        }
    }

    function Ay(t, e, n, i) {
        function a() { this.trigger("emphasis") }

        function r() { this.trigger("normal") }
        var o = t.__pictorialBundle,
            s = t.__pictorialMainPath;
        s ? Gy(s, null, { position: n.pathPosition.slice(), scale: n.symbolScale.slice(), rotation: n.rotation }, n, i) : (s = t.__pictorialMainPath = Dy(n), o.add(s), Gy(s, { position: n.pathPosition.slice(), scale: [0, 0], rotation: n.rotation }, { scale: n.symbolScale.slice() }, n, i), s.on("mouseover", a).on("mouseout", r)), Oy(s, n)
    }

    function Cy(t, e, n) {
        var i = o({}, e.barRectShape),
            a = t.__pictorialBarRect;
        a ? Gy(a, null, { shape: i }, e, n) : (a = t.__pictorialBarRect = new cI({ z2: 2, shape: i, silent: !0, style: { stroke: "transparent", fill: "transparent", lineWidth: 0 } }), t.add(a))
    }

    function Ly(t, e, n, i) {
        if (n.symbolClip) {
            var a = t.__pictorialClipPath,
                r = o({}, n.clipShape),
                s = e.valueDim,
                l = n.animationModel,
                u = n.dataIndex;
            if (a) Fr(a, { shape: r }, l, u);
            else {
                r[s.wh] = 0, a = new cI({ shape: r }), t.__pictorialBundle.setClipPath(a), t.__pictorialClipPath = a;
                var h = {};
                h[s.wh] = n.clipShape[s.wh], zI[i ? "updateProps" : "initProps"](a, { shape: h }, l, u)
            }
        }
    }

    function Py(t, e) { var n = t.getItemModel(e); return n.getAnimationDelayParams = ky, n.isAnimationEnabled = Ny, n }

    function ky(t) { return { index: t.__pictorialAnimationIndex, count: t.__pictorialRepeatTimes } }

    function Ny() { return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation") }

    function Oy(t, e) {
        t.off("emphasis").off("normal");
        var n = e.symbolScale.slice();
        e.hoverAnimation && t.on("emphasis", function() { this.animateTo({ scale: [1.1 * n[0], 1.1 * n[1]] }, 400, "elasticOut") }).on("normal", function() { this.animateTo({ scale: n.slice() }, 400, "elasticOut") })
    }

    function Ey(t, e, n, i) {
        var a = new Vw,
            r = new Vw;
        return a.add(r), a.__pictorialBundle = r, r.attr("position", n.bundlePosition.slice()), n.symbolRepeat ? Ty(a, e, n) : Ay(a, e, n), Cy(a, n, i), Ly(a, e, n, i), a.__pictorialShapeStr = By(t, n), a.__pictorialSymbolMeta = n, a
    }

    function zy(t, e, n) {
        var i = n.animationModel,
            a = n.dataIndex,
            r = t.__pictorialBundle;
        Fr(r, { position: n.bundlePosition.slice() }, i, a), n.symbolRepeat ? Ty(t, e, n, !0) : Ay(t, e, n, !0), Cy(t, n, !0), Ly(t, e, n, !0)
    }

    function Ry(t, e, n, i) {
        var a = i.__pictorialBarRect;
        a && (a.style.text = null);
        var r = [];
        Vy(i, function(t) { r.push(t) }), i.__pictorialMainPath && r.push(i.__pictorialMainPath), i.__pictorialClipPath && (n = null), f(r, function(t) { Fr(t, { scale: [0, 0] }, n, e, function() { i.parent && i.parent.remove(i) }) }), t.setItemGraphicEl(e, null)
    }

    function By(t, e) { return [t.getItemVisual(e.dataIndex, "symbol") || "none", !!e.symbolRepeat, !!e.symbolClip].join(":") }

    function Vy(t, e, n) { f(t.__pictorialBundle.children(), function(i) { i !== t.__pictorialBarRect && e.call(n, i) }) }

    function Gy(t, e, n, i, a, r) { e && t.attr(e), i.symbolClip && !a ? n && t.attr(n) : n && zI[a ? "updateProps" : "initProps"](t, n, i.animationModel, i.dataIndex, r) }

    function Fy(t, e, n) {
        var i = n.color,
            a = n.dataIndex,
            r = n.itemModel,
            o = r.getModel("itemStyle").getItemStyle(["color"]),
            l = r.getModel("emphasis.itemStyle").getItemStyle(),
            u = r.getShallow("cursor");
        Vy(t, function(t) { t.setColor(i), t.setStyle(s({ fill: i, opacity: n.opacity }, o)), Mr(t, l), u && (t.cursor = u), t.z2 = n.z2 });
        var h = {},
            c = e.valueDim.posDesc[+(n.boundingLength > 0)],
            d = t.__pictorialBarRect;
        yc(d.style, h, r, i, e.seriesModel, a, c), Mr(d, h)
    }

    function Wy(t) { var e = Math.round(t); return Math.abs(t - e) < 1e-4 ? e : Math.ceil(t) }

    function Hy(t, e) {
        return e = e || [0, 0], g(["x", "y"], function(n, i) {
            var a = this.getAxis(n),
                r = e[i],
                o = t[i] / 2;
            return "category" === a.type ? a.getBandWidth() : Math.abs(a.dataToCoord(r - o) - a.dataToCoord(r + o))
        }, this)
    }

    function Xy(t, e) {
        return e = e || [0, 0], g([0, 1], function(n) {
            var i = e[n],
                a = t[n] / 2,
                r = [],
                o = [];
            return r[n] = i - a, o[n] = i + a, r[1 - n] = o[1 - n] = e[1 - n], Math.abs(this.dataToPoint(r)[n] - this.dataToPoint(o)[n])
        }, this)
    }

    function Yy(t, e) {
        var n = this.getAxis(),
            i = e instanceof Array ? e[0] : e,
            a = (t instanceof Array ? t[0] : t) / 2;
        return "category" === n.type ? n.getBandWidth() : Math.abs(n.dataToCoord(i - a) - n.dataToCoord(i + a))
    }

    function Uy(t, e) {
        return g(["Radius", "Angle"], function(n, i) {
            var a = this["get" + n + "Axis"](),
                r = e[i],
                o = t[i] / 2,
                s = "dataTo" + n,
                l = "category" === a.type ? a.getBandWidth() : Math.abs(a[s](r - o) - a[s](r + o));
            return "Angle" === n && (l = l * Math.PI / 180), l
        }, this)
    }

    function jy(t) {
        var e, n = t.type;
        if ("path" === n) {
            var i = t.shape,
                a = null != i.width && null != i.height ? { x: i.x || 0, y: i.y || 0, width: i.width, height: i.height } : null,
                r = sx(i);
            e = or(r, null, a, i.layout || "center"), e.__customPathData = r
        } else if ("image" === n) e = new Si({}), e.__customImagePath = t.style.image;
        else if ("text" === n) e = new QS({}), e.__customText = t.style.text;
        else if ("group" === n) e = new Vw;
        else {
            if ("compoundPath" === n) throw new Error('"compoundPath" is not supported yet.');
            var o = rr(n);
            e = new o
        }
        return e.__customGraphicType = n, e.name = t.name, e
    }

    function Zy(t, e, n, a, r, o, s) {
        var l = {},
            u = n.style || {};
        if (n.shape && (l.shape = i(n.shape)), n.position && (l.position = n.position.slice()), n.scale && (l.scale = n.scale.slice()), n.origin && (l.origin = n.origin.slice()), n.rotation && (l.rotation = n.rotation), "image" === t.type && n.style) {
            var h = l.style = {};
            f(["x", "y", "width", "height"], function(e) { qy(e, h, u, t.style, o) })
        }
        if ("text" === t.type && n.style) {
            var h = l.style = {};
            f(["x", "y"], function(e) { qy(e, h, u, t.style, o) }), !u.hasOwnProperty("textFill") && u.fill && (u.textFill = u.fill), !u.hasOwnProperty("textStroke") && u.stroke && (u.textStroke = u.stroke)
        }
        if ("group" !== t.type && (t.useStyle(u), o)) {
            t.style.opacity = 0;
            var c = u.opacity;
            null == c && (c = 1), Wr(t, { style: { opacity: c } }, a, e)
        }
        o ? t.attr(l) : Fr(t, l, a, e), n.hasOwnProperty("z2") && t.attr("z2", n.z2 || 0), n.hasOwnProperty("silent") && t.attr("silent", n.silent), n.hasOwnProperty("invisible") && t.attr("invisible", n.invisible), n.hasOwnProperty("ignore") && t.attr("ignore", n.ignore), n.hasOwnProperty("info") && t.attr("info", n.info);
        var d = n.styleEmphasis;
        xr(t, d), s && Dr(t, d !== !1)
    }

    function qy(t, e, n, i, a) { null == n[t] || a || (e[t] = n[t], n[t] = i[t]) }

    function Ky(t, e, n, i) {
        function a(t) { null == t && (t = m), S && (v = e.getItemModel(t), y = v.getModel(bO), x = v.getModel(SO), _ = e.getItemVisual(t, "color"), S = !1) }

        function r(t, n) { return null == n && (n = m), e.get(e.getDimension(t || 0), n) }

        function o(n, i) {
            null == i && (i = m), a(i);
            var r = v.getModel(_O).getItemStyle();
            null != _ && (r.fill = _);
            var o = e.getItemVisual(i, "opacity");
            null != o && (r.opacity = o);
            var s = n ? ax(n, y) : y;
            return Pr(r, s, null, { autoColor: _, isRectText: !0 }), r.text = s.getShallow("show") ? C(t.getFormattedLabel(i, "normal"), vc(e, i)) : null, n && rx(r, n), r
        }

        function l(n, i) {
            null == i && (i = m), a(i);
            var r = v.getModel(wO).getItemStyle(),
                o = n ? ax(n, x) : x;
            return Pr(r, o, null, { isRectText: !0 }, !0), r.text = o.getShallow("show") ? L(t.getFormattedLabel(i, "emphasis"), t.getFormattedLabel(i, "normal"), vc(e, i)) : null, n && rx(r, n), r
        }

        function u(t, n) { return null == n && (n = m), e.getItemVisual(n, t) }

        function h(t) { if (g.getBaseAxis) { var e = g.getBaseAxis(); return fh(s({ axis: e }, t), i) } }

        function c() { return n.getCurrentSeriesIndices() }

        function d(t) { return Vr(t, n) }
        var f = t.get("renderItem"),
            g = t.coordinateSystem,
            p = {};
        g && (p = g.prepareCustoms ? g.prepareCustoms() : MO[g.type](g));
        var m, v, y, x, _, w = s({ getWidth: i.getWidth, getHeight: i.getHeight, getZr: i.getZr, getDevicePixelRatio: i.getDevicePixelRatio, value: r, style: o, styleEmphasis: l, visual: u, barLayout: h, currentSeriesIndices: c, font: d }, p.api || {}),
            b = { context: {}, seriesId: t.id, seriesName: t.name, seriesIndex: t.seriesIndex, coordSys: p.coordSys, dataInsideLength: e.count(), encode: $y(t.getData()) },
            S = !0;
        return function(t, n) { return m = t, S = !0, f && f(s({ dataIndexInside: t, dataIndex: e.getRawIndex(t), actionType: n ? n.type : null }, b), w) }
    }

    function $y(t) {
        var e = {};
        return f(t.dimensions, function(n, i) {
            var a = t.getDimensionInfo(n);
            if (!a.isExtraCoord) {
                var r = a.coordDim,
                    o = e[r] = e[r] || [];
                o[a.coordDimIndex] = i
            }
        }), e
    }

    function Jy(t, e, n, i, a, r) { return t = Qy(t, e, n, i, a, r, !0), t && r.setItemGraphicEl(e, t), t }

    function Qy(t, e, n, i, a, r, o) {
        var s = !n;
        n = n || {};
        var l = n.type,
            u = n.shape,
            h = n.style;
        if (t && (s || null != l && l !== t.__customGraphicType || "path" === l && lx(u) && sx(u) !== t.__customPathData || "image" === l && ux(h, "image") && h.image !== t.__customImagePath || "text" === l && ux(u, "text") && h.text !== t.__customText) && (a.remove(t), t = null), !s) { var c = !t; return !t && (t = jy(n)), Zy(t, e, n, i, r, c, o), "group" === l && tx(t, e, n, i, r), a.add(t), t }
    }

    function tx(t, e, n, i, a) {
        var r = n.children,
            o = r ? r.length : 0,
            s = n.$mergeChildren,
            l = "byName" === s || n.diffChildrenByName,
            u = s === !1;
        if (o || l || u) {
            if (l) return void ex({ oldChildren: t.children() || [], newChildren: r || [], dataIndex: e, animatableModel: i, group: t, data: a });
            u && t.removeAll();
            for (var h = 0; o > h; h++) r[h] && Qy(t.childAt(h), e, r[h], i, t, a)
        }
    }

    function ex(t) { new Au(t.oldChildren, t.newChildren, nx, nx, t).add(ix).update(ix).remove(ox).execute() }

    function nx(t, e) { var n = t && t.name; return null != n ? n : IO + e }

    function ix(t, e) {
        var n = this.context,
            i = null != t ? n.newChildren[t] : null,
            a = null != e ? n.oldChildren[e] : null;
        Qy(a, n.dataIndex, i, n.animatableModel, n.group, n.data)
    }

    function ax(t, e) { var n = new to({}, e); return f(xO, function(e, i) { t.hasOwnProperty(e) && (n.option[i] = t[e]) }), n }

    function rx(t, e) { for (var n in e)(e.hasOwnProperty(n) || !xO.hasOwnProperty(n)) && (t[n] = e[n]) }

    function ox(t) {
        var e = this.context,
            n = e.oldChildren[t];
        n && e.group.remove(n)
    }

    function sx(t) { return t && (t.pathData || t.d) }

    function lx(t) { return t && (t.hasOwnProperty("pathData") || t.hasOwnProperty("d")) }

    function ux(t, e) { return t && t.hasOwnProperty(e) }

    function hx(t) { return t.get("stack") || "__ec_stack_" + t.seriesIndex }

    function cx(t, e) { return e.dim + t.model.componentIndex }

    function dx(t, e) {
        var n = {},
            i = fx(m(e.getSeriesByType(t), function(t) { return !e.isSeriesFiltered(t) && t.coordinateSystem && "polar" === t.coordinateSystem.type }));
        e.eachSeriesByType(t, function(t) {
            if ("polar" === t.coordinateSystem.type) {
                var e = t.getData(),
                    a = t.coordinateSystem,
                    r = a.getBaseAxis(),
                    o = cx(a, r),
                    s = hx(t),
                    l = i[o][s],
                    u = l.offset,
                    h = l.width,
                    c = a.getOtherAxis(r),
                    d = t.coordinateSystem.cx,
                    f = t.coordinateSystem.cy,
                    g = t.get("barMinHeight") || 0,
                    p = t.get("barMinAngle") || 0;
                n[s] = n[s] || [];
                for (var m = e.mapDimension(c.dim), v = e.mapDimension(r.dim), y = $u(e, m), x = "radius" !== r.dim || !t.get("roundCap", !0), _ = c.getExtent()[0], w = 0, b = e.count(); b > w; w++) {
                    var S = e.get(m, w),
                        I = e.get(v, w);
                    if (!isNaN(S)) {
                        var M = S >= 0 ? "p" : "n",
                            D = _;
                        y && (n[s][I] || (n[s][I] = { p: _, n: _ }), D = n[s][I][M]);
                        var T, A, C, L;
                        if ("radius" === c.dim) {
                            var P = c.dataToRadius(S) - _,
                                k = r.dataToAngle(I);
                            Math.abs(P) < g && (P = (0 > P ? -1 : 1) * g), T = D, A = D + P, C = k - u, L = C - h, y && (n[s][I][M] = A)
                        } else {
                            var N = c.dataToAngle(S, x) - _,
                                O = r.dataToRadius(I);
                            Math.abs(N) < p && (N = (0 > N ? -1 : 1) * p), T = O + u, A = T + h, C = D, L = D + N, y && (n[s][I][M] = L)
                        }
                        e.setItemLayout(w, { cx: d, cy: f, r0: T, r: A, startAngle: -C * Math.PI / 180, endAngle: -L * Math.PI / 180 })
                    }
                }
            }
        }, this)
    }

    function fx(t) {
        var e = {};
        f(t, function(t) {
            var n = t.getData(),
                i = t.coordinateSystem,
                a = i.getBaseAxis(),
                r = cx(i, a),
                o = a.getExtent(),
                s = "category" === a.type ? a.getBandWidth() : Math.abs(o[1] - o[0]) / n.count(),
                l = e[r] || { bandWidth: s, remainedWidth: s, autoWidthCount: 0, categoryGap: "20%", gap: "30%", stacks: {} },
                u = l.stacks;
            e[r] = l;
            var h = hx(t);
            u[h] || l.autoWidthCount++, u[h] = u[h] || { width: 0, maxWidth: 0 };
            var c = lo(t.get("barWidth"), s),
                d = lo(t.get("barMaxWidth"), s),
                f = t.get("barGap"),
                g = t.get("barCategoryGap");
            c && !u[h].width && (c = Math.min(l.remainedWidth, c), u[h].width = c, l.remainedWidth -= c), d && (u[h].maxWidth = d), null != f && (l.gap = f), null != g && (l.categoryGap = g)
        });
        var n = {};
        return f(e, function(t, e) {
            n[e] = {};
            var i = t.stacks,
                a = t.bandWidth,
                r = lo(t.categoryGap, a),
                o = lo(t.gap, 1),
                s = t.remainedWidth,
                l = t.autoWidthCount,
                u = (s - r) / (l + (l - 1) * o);
            u = Math.max(u, 0), f(i, function(t) {
                var e = t.maxWidth;
                e && u > e && (e = Math.min(e, s), t.width && (e = Math.min(e, t.width)), s -= e, t.width = e, l--)
            }), u = (s - r) / (l + (l - 1) * o), u = Math.max(u, 0);
            var h, c = 0;
            f(i, function(t) { t.width || (t.width = u), h = t, c += t.width * (1 + o) }), h && (c -= h.width * o);
            var d = -c / 2;
            f(i, function(t, i) { n[e][i] = n[e][i] || { offset: d, width: t.width }, d += t.width * (1 + o) })
        }), n
    }

    function gx(t, e) { MA.call(this, "radius", t, e), this.type = "category" }

    function px(t, e) { e = e || [0, 360], MA.call(this, "angle", t, e), this.type = "category" }

    function mx(t, e) { return e.type || (e.data ? "category" : "value") }

    function vx(t, e, n) {
        var i = e.get("center"),
            a = n.getWidth(),
            r = n.getHeight();
        t.cx = lo(i[0], a), t.cy = lo(i[1], r);
        var o = t.getRadiusAxis(),
            s = Math.min(a, r) / 2,
            l = e.get("radius");
        null == l ? l = [0, "100%"] : _(l) || (l = [0, l]), l = [lo(l[0], s), lo(l[1], s)], o.inverse ? o.setExtent(l[1], l[0]) : o.setExtent(l[0], l[1])
    }

    function yx(t) {
        var e = this,
            n = e.getAngleAxis(),
            i = e.getRadiusAxis();
        if (n.scale.setExtent(1 / 0, -1 / 0), i.scale.setExtent(1 / 0, -1 / 0), t.eachSeries(function(t) {
                if (t.coordinateSystem === e) {
                    var a = t.getData();
                    f(a.mapDimension("radius", !0), function(t) { i.scale.unionExtentFromData(a, Ju(a, t)) }), f(a.mapDimension("angle", !0), function(t) { n.scale.unionExtentFromData(a, Ju(a, t)) })
                }
            }), Dh(n.scale, n.model), Dh(i.scale, i.model), "category" === n.type && !n.onBand) {
            var a = n.getExtent(),
                r = 360 / n.scale.count();
            n.inverse ? a[1] += r : a[1] -= r, n.setExtent(a[0], a[1])
        }
    }

    function xx(t, e) {
        if (t.type = e.get("type"), t.scale = Th(e), t.onBand = e.get("boundaryGap") && "category" === t.type, t.inverse = e.get("inverse"), "angleAxis" === e.mainType) {
            t.inverse ^= e.get("clockwise");
            var n = e.get("startAngle");
            t.setExtent(n, n + (t.inverse ? -360 : 360))
        }
        e.axis = t, t.model = e
    }

    function _x(t, e, n) {
        e[1] > e[0] && (e = e.slice().reverse());
        var i = t.coordToPoint([e[0], n]),
            a = t.coordToPoint([e[1], n]);
        return { x1: i[0], y1: i[1], x2: a[0], y2: a[1] }
    }

    function bx(t) { var e = t.getRadiusAxis(); return e.inverse ? 0 : 1 }

    function Sx(t) {
        var e = t[0],
            n = t[t.length - 1];
        e && n && Math.abs(Math.abs(e.coord - n.coord) - 360) < 1e-4 && t.pop()
    }

    function Ix(t, e, n) { return { position: [t.cx, t.cy], rotation: n / 180 * Math.PI, labelDirection: -1, tickDirection: -1, nameDirection: 1, labelRotate: e.getModel("axisLabel").get("rotate"), z2: 1 } }

    function Mx(t, e, n, i, a) {
        var r = e.axis,
            o = r.dataToCoord(t),
            s = i.getAngleAxis().getExtent()[0];
        s = s / 180 * Math.PI;
        var l, u, h, c = i.getRadiusAxis().getExtent();
        if ("radius" === r.dim) {
            var d = Ae();
            Ne(d, d, s), ke(d, d, [i.cx, i.cy]), l = Xr([o, -a], d);
            var f = e.getModel("axisLabel").get("rotate") || 0,
                g = QA.innerTextLayout(s, f * Math.PI / 180, -1);
            u = g.textAlign, h = g.textVerticalAlign
        } else {
            var p = c[1];
            l = i.coordToPoint([p + a, o]);
            var m = i.cx,
                v = i.cy;
            u = Math.abs(l[0] - m) / p < .3 ? "center" : l[0] > m ? "left" : "right", h = Math.abs(l[1] - v) / p < .3 ? "middle" : l[1] > v ? "top" : "bottom"
        }
        return { position: l, align: u, verticalAlign: h }
    }

    function Dx(t, e) {
        e.update = "updateView", fu(e, function(e, n) {
            var i = {};
            return n.eachComponent({ mainType: "geo", query: e }, function(n) {
                n[t](e.name);
                var a = n.coordinateSystem;
                f(a.regions, function(t) { i[t.name] = n.isSelected(t.name) || !1 })
            }), { selected: i, name: e.name }
        })
    }

    function Tx(t) { this._model = t }

    function Ax(t, e, n, i) {
        var a = n.calendarModel,
            r = n.seriesModel,
            o = a ? a.coordinateSystem : r ? r.coordinateSystem : null;
        return o === this ? o[t](i) : null
    }

    function Cx(t, e) {
        var n = t.cellSize;
        _(n) ? 1 === n.length && (n[1] = n[0]) : n = t.cellSize = [n, n];
        var i = g([0, 1], function(t) { return Go(e, t) && (n[t] = "auto"), null != n[t] && "auto" !== n[t] });
        Fo(t, e, { type: "box", ignoreSize: i })
    }

    function Lx(t, e, n) {
        var i, a = {},
            r = "toggleSelected" === t;
        return n.eachComponent("legend", function(n) {
            r && null != i ? n[i ? "select" : "unSelect"](e.name) : "allSelect" === t || "inverseSelect" === t ? n[t]() : (n[t](e.name), i = n.isSelected(e.name));
            var o = n.getData();
            f(o, function(t) {
                var e = t.get("name");
                if ("\n" !== e && "" !== e) {
                    var i = n.isSelected(e);
                    a[e] = a.hasOwnProperty(e) ? a[e] && i : i
                }
            })
        }), "allSelect" === t || "inverseSelect" === t ? { selected: a } : { name: e.name, selected: a }
    }

    function Px(t, e) {
        var n = ZI(e.get("padding")),
            i = e.getItemStyle(["color", "opacity"]);
        i.fill = e.get("backgroundColor");
        var t = new cI({ shape: { x: t.x - n[3], y: t.y - n[0], width: t.width + n[1] + n[3], height: t.height + n[0] + n[2], r: e.get("borderRadius") }, style: i, silent: !0, z2: -1 });
        return t
    }

    function kx(t, e, n, i, a, r) { var o; return "line" !== e && e.indexOf("empty") < 0 ? (o = n.getItemStyle(), t.style.stroke = i, r || (o.stroke = a)) : o = n.getItemStyle(["borderWidth", "borderColor"]), t.setStyle(o) }

    function Nx(t, e) { e.dispatchAction({ type: "legendToggleSelect", name: t }) }

    function Ox(t, e, n, i) {
        var a = n.getZr().storage.getDisplayList()[0];
        a && a.useHoverLayer || n.dispatchAction({ type: "highlight", seriesName: t, name: e, excludeSeriesId: i })
    }

    function Ex(t, e, n, i) {
        var a = n.getZr().storage.getDisplayList()[0];
        a && a.useHoverLayer || n.dispatchAction({ type: "downplay", seriesName: t, name: e, excludeSeriesId: i })
    }

    function zx(t, e, n) {
        var i = t.getOrient(),
            a = [1, 1];
        a[i.index] = 0, Fo(e, n, { type: "box", ignoreSize: a })
    }

    function Rx(t) {
        var e = "cubic-bezier(0.23, 1, 0.32, 1)",
            n = "left " + t + "s " + e + ",top " + t + "s " + e;
        return g(nE, function(t) { return t + "transition:" + n }).join(";")
    }

    function Bx(t) {
        var e = [],
            n = t.get("fontSize"),
            i = t.getTextColor();
        return i && e.push("color:" + i), e.push("font:" + t.getFont()), n && e.push("line-height:" + Math.round(3 * n / 2) + "px"), tE(["decoration", "align"], function(n) {
            var i = t.get(n);
            i && e.push("text-" + n + ":" + i)
        }), e.join(";")
    }

    function Vx(t) {
        var e = [],
            n = t.get("transitionDuration"),
            i = t.get("backgroundColor"),
            a = t.getModel("textStyle"),
            r = t.get("padding");
        return n && e.push(Rx(n)), i && (D_.canvasSupported ? e.push("background-Color:" + i) : (e.push("background-Color:#" + Qe(i)), e.push("filter:alpha(opacity=70)"))), tE(["width", "color", "radius"], function(n) {
            var i = "border-" + n,
                a = eE(i),
                r = t.get(a);
            null != r && e.push(i + ":" + r + ("color" === n ? "" : "px"))
        }), e.push(Bx(a)), null != r && e.push("padding:" + ZI(r).join("px ") + "px"), e.join(";") + ";"
    }

    function Gx(t, e) {
        if (D_.wxa) return null;
        var n = document.createElement("div"),
            i = this._zr = e.getZr();
        this.el = n, this._x = e.getWidth() / 2, this._y = e.getHeight() / 2, t.appendChild(n), this._container = t, this._show = !1, this._hideTimeout;
        var a = this;
        n.onmouseenter = function() { a._enterable && (clearTimeout(a._hideTimeout), a._show = !0), a._inContent = !0 }, n.onmousemove = function(e) {
            if (e = e || window.event, !a._enterable) {
                var n = i.handler;
                ye(t, e, !0), n.dispatch("mousemove", e)
            }
        }, n.onmouseleave = function() { a._enterable && a._show && a.hideLater(a._hideDelay), a._inContent = !1 }
    }

    function Fx(t) { this._zr = t.getZr(), this._show = !1, this._hideTimeout }

    function Wx(t) {
        for (var e = t.pop(); t.length;) {
            var n = t.pop();
            n && (to.isInstance(n) && (n = n.get("tooltip", !0)), "string" == typeof n && (n = { formatter: n }), e = new to(n, e, e.ecModel))
        }
        return e
    }

    function Hx(t, e) { return t.dispatchAction || y(e.dispatchAction, e) }

    function Xx(t, e, n, i, a, r, o) {
        var s = n.getOuterSize(),
            l = s.width,
            u = s.height;
        return null != r && (t + l + r > i ? t -= l + r : t += r), null != o && (e + u + o > a ? e -= u + o : e += o), [t, e]
    }

    function Yx(t, e, n, i, a) {
        var r = n.getOuterSize(),
            o = r.width,
            s = r.height;
        return t = Math.min(t + o, i) - o, e = Math.min(e + s, a) - s, t = Math.max(t, 0), e = Math.max(e, 0), [t, e]
    }

    function Ux(t, e, n) {
        var i = n[0],
            a = n[1],
            r = 5,
            o = 0,
            s = 0,
            l = e.width,
            u = e.height;
        switch (t) {
            case "inside":
                o = e.x + l / 2 - i / 2, s = e.y + u / 2 - a / 2;
                break;
            case "top":
                o = e.x + l / 2 - i / 2, s = e.y - a - r;
                break;
            case "bottom":
                o = e.x + l / 2 - i / 2, s = e.y + u + r;
                break;
            case "left":
                o = e.x - i - r, s = e.y + u / 2 - a / 2;
                break;
            case "right":
                o = e.x + l + r, s = e.y + u / 2 - a / 2
        }
        return [o, s]
    }

    function jx(t) { return "center" === t || "middle" === t }

    function Zx(t) { Fi(t, "label", ["show"]) }

    function qx(t) { return !(isNaN(parseFloat(t.x)) && isNaN(parseFloat(t.y))) }

    function Kx(t) { return !isNaN(parseFloat(t.x)) && !isNaN(parseFloat(t.y)) }

    function $x(t, e, n, i, a, r) {
        var o = [],
            s = $u(e, i),
            l = s ? e.getCalculationInfo("stackResultDimension") : i,
            u = i_(e, l, t),
            h = e.indicesOfNearest(l, u)[0];
        o[a] = e.get(n, h), o[r] = e.get(i, h);
        var c = co(e.get(i, h));
        return c = Math.min(c, 20), c >= 0 && (o[r] = +o[r].toFixed(c)), o
    }

    function Jx(t, e) {
        var n = t.getData(),
            a = t.coordinateSystem;
        if (e && !Kx(e) && !_(e.coord) && a) {
            var r = a.dimensions,
                o = Qx(e, n, a, t);
            if (e = i(e), e.type && fE[e.type] && o.baseAxis && o.valueAxis) {
                var s = cE(r, o.baseAxis.dim),
                    l = cE(r, o.valueAxis.dim);
                e.coord = fE[e.type](n, o.baseDataDim, o.valueDataDim, s, l), e.value = e.coord[l]
            } else {
                for (var u = [null != e.xAxis ? e.xAxis : e.radiusAxis, null != e.yAxis ? e.yAxis : e.angleAxis], h = 0; 2 > h; h++) fE[u[h]] && (u[h] = i_(n, n.mapDimension(r[h]), u[h]));
                e.coord = u
            }
        }
        return e
    }

    function Qx(t, e, n, i) { var a = {}; return null != t.valueIndex || null != t.valueDim ? (a.valueDataDim = null != t.valueIndex ? e.getDimension(t.valueIndex) : t.valueDim, a.valueAxis = n.getAxis(t_(i, a.valueDataDim)), a.baseAxis = n.getOtherAxis(a.valueAxis), a.baseDataDim = e.mapDimension(a.baseAxis.dim)) : (a.baseAxis = i.getBaseAxis(), a.valueAxis = n.getOtherAxis(a.baseAxis), a.baseDataDim = e.mapDimension(a.baseAxis.dim), a.valueDataDim = e.mapDimension(a.valueAxis.dim)), a }

    function t_(t, e) {
        var n = t.getData(),
            i = n.dimensions;
        e = n.getDimension(e);
        for (var a = 0; a < i.length; a++) { var r = n.getDimensionInfo(i[a]); if (r.name === e) return r.coordDim }
    }

    function e_(t, e) { return t && t.containData && e.coord && !qx(e) ? t.containData(e.coord) : !0 }

    function n_(t, e, n, i) { return 2 > i ? t.coord && t.coord[i] : t.value }

    function i_(t, e, n) {
        if ("average" === n) {
            var i = 0,
                a = 0;
            return t.each(e, function(t) { isNaN(t) || (i += t, a++) }), i / a
        }
        return "median" === n ? t.getMedian(e) : t.getDataExtent(e, !0)["max" === n ? 1 : 0]
    }

    function a_(t, e, n) {
        var i = e.coordinateSystem;
        t.each(function(a) {
            var r, o = t.getItemModel(a),
                s = lo(o.get("x"), n.getWidth()),
                l = lo(o.get("y"), n.getHeight());
            if (isNaN(s) || isNaN(l)) {
                if (e.getMarkerPosition) r = e.getMarkerPosition(t.getValues(t.dimensions, a));
                else if (i) {
                    var u = t.get(i.dimensions[0], a),
                        h = t.get(i.dimensions[1], a);
                    r = i.dataToPoint([u, h])
                }
            } else r = [s, l];
            isNaN(s) || (r[0] = s), isNaN(l) || (r[1] = l), t.setItemLayout(a, r)
        })
    }

    function r_(t, e, n) {
        var i;
        i = t ? g(t && t.dimensions, function(t) { var n = e.getData().getDimensionInfo(e.getData().mapDimension(t)) || {}; return s({ name: t }, n) }) : [{ name: "value", type: "float" }];
        var a = new PT(i, n),
            r = g(n.get("data"), x(Jx, e));
        return t && (r = m(r, x(e_, t))), a.initData(r, null, t ? n_ : function(t) { return t.value }), a
    }

    function o_(t) { return !isNaN(t) && !isFinite(t) }

    function s_(t, e, n, i) {
        var a = 1 - t,
            r = i.dimensions[t];
        return o_(e[a]) && o_(n[a]) && e[t] === n[t] && i.getAxis(r).containData(e[t])
    }

    function l_(t, e) {
        if ("cartesian2d" === t.type) {
            var n = e[0].coord,
                i = e[1].coord;
            if (n && i && (s_(1, n, i, t) || s_(0, n, i, t))) return !0
        }
        return e_(t, e[0]) && e_(t, e[1])
    }

    function u_(t, e, n, i, a) {
        var r, o = i.coordinateSystem,
            s = t.getItemModel(e),
            l = lo(s.get("x"), a.getWidth()),
            u = lo(s.get("y"), a.getHeight());
        if (isNaN(l) || isNaN(u)) {
            if (i.getMarkerPosition) r = i.getMarkerPosition(t.getValues(t.dimensions, e));
            else {
                var h = o.dimensions,
                    c = t.get(h[0], e),
                    d = t.get(h[1], e);
                r = o.dataToPoint([c, d])
            }
            if ("cartesian2d" === o.type) {
                var f = o.getAxis("x"),
                    g = o.getAxis("y"),
                    h = o.dimensions;
                o_(t.get(h[0], e)) ? r[0] = f.toGlobalCoord(f.getExtent()[n ? 0 : 1]) : o_(t.get(h[1], e)) && (r[1] = g.toGlobalCoord(g.getExtent()[n ? 0 : 1]))
            }
            isNaN(l) || (r[0] = l), isNaN(u) || (r[1] = u)
        } else r = [l, u];
        t.setItemLayout(e, r)
    }

    function h_(t, e, n) {
        var i;
        i = t ? g(t && t.dimensions, function(t) { var n = e.getData().getDimensionInfo(e.getData().mapDimension(t)) || {}; return s({ name: t }, n) }) : [{ name: "value", type: "float" }];
        var a = new PT(i, n),
            r = new PT(i, n),
            o = new PT([], n),
            l = g(n.get("data"), x(pE, e, t, n));
        t && (l = m(l, x(l_, t)));
        var u = t ? n_ : function(t) { return t.value };
        return a.initData(g(l, function(t) { return t[0] }), null, u), r.initData(g(l, function(t) { return t[1] }), null, u), o.initData(g(l, function(t) { return t[2] })), o.hasItemOption = !0, { from: a, to: r, line: o }
    }

    function c_(t) { return !isNaN(t) && !isFinite(t) }

    function d_(t, e, n) { var i = 1 - t; return c_(e[i]) && c_(n[i]) }

    function f_(t, e) {
        var n = e.coord[0],
            i = e.coord[1];
        return "cartesian2d" === t.type && n && i && (d_(1, n, i, t) || d_(0, n, i, t)) ? !0 : e_(t, { coord: n, x: e.x0, y: e.y0 }) || e_(t, { coord: i, x: e.x1, y: e.y1 })
    }

    function g_(t, e, n, i, a) {
        var r, o = i.coordinateSystem,
            s = t.getItemModel(e),
            l = lo(s.get(n[0]), a.getWidth()),
            u = lo(s.get(n[1]), a.getHeight());
        if (isNaN(l) || isNaN(u)) {
            if (i.getMarkerPosition) r = i.getMarkerPosition(t.getValues(n, e));
            else {
                var h = t.get(n[0], e),
                    c = t.get(n[1], e),
                    d = [h, c];
                o.clampData && o.clampData(d, d), r = o.dataToPoint(d, !0)
            }
            if ("cartesian2d" === o.type) {
                var f = o.getAxis("x"),
                    g = o.getAxis("y"),
                    h = t.get(n[0], e),
                    c = t.get(n[1], e);
                c_(h) ? r[0] = f.toGlobalCoord(f.getExtent()["x0" === n[0] ? 0 : 1]) : c_(c) && (r[1] = g.toGlobalCoord(g.getExtent()["y0" === n[1] ? 0 : 1]))
            }
            isNaN(l) || (r[0] = l), isNaN(u) || (r[1] = u)
        } else r = [l, u];
        return r
    }

    function p_(t, e, n) {
        var i, a, r = ["x0", "y0", "x1", "y1"];
        t ? (i = g(t && t.dimensions, function(t) {
            var n = e.getData(),
                i = n.getDimensionInfo(n.mapDimension(t)) || {};
            return s({ name: t }, i)
        }), a = new PT(g(r, function(t, e) { return { name: t, type: i[e % 2].type } }), n)) : (i = [{ name: "value", type: "float" }], a = new PT(i, n));
        var o = g(n.get("data"), x(mE, e, t, n));
        t && (o = m(o, x(f_, t)));
        var l = t ? function(t, e, n, i) { return t.coord[Math.floor(i / 2)][i % 2] } : function(t) { return t.value };
        return a.initData(o, null, l), a.hasItemOption = !0, a
    }

    function m_(t) {
        var e = t.type,
            n = { number: "value", time: "time" };
        if (n[e] && (t.axisType = n[e], delete t.type), v_(t), y_(t, "controlPosition")) {
            var i = t.controlStyle || (t.controlStyle = {});
            y_(i, "position") || (i.position = t.controlPosition), "none" !== i.position || y_(i, "show") || (i.show = !1, delete i.position), delete t.controlPosition
        }
        f(t.data || [], function(t) { S(t) && !_(t) && (!y_(t, "value") && y_(t, "name") && (t.value = t.name), v_(t)) })
    }

    function v_(t) {
        var e = t.itemStyle || (t.itemStyle = {}),
            n = e.emphasis || (e.emphasis = {}),
            i = t.label || t.label || {},
            a = i.normal || (i.normal = {}),
            r = { normal: 1, emphasis: 1 };
        f(i, function(t, e) { r[e] || y_(a, e) || (a[e] = t) }), n.label && !y_(i, "emphasis") && (i.emphasis = n.label, delete n.label)
    }

    function y_(t, e) { return t.hasOwnProperty(e) }

    function x_(t, e) { return Bo(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() }, t.get("padding")) }

    function __(t, e, n, a) { var r = or(t.get(e).replace(/^path:\/\//, ""), i(a || {}), new bn(n[0], n[1], n[2], n[3]), "center"); return r }

    function w_(t, e, n, i, r, o) {
        var s = e.get("color");
        if (r) r.setColor(s), n.add(r), o && o.onUpdate(r);
        else {
            var l = t.get("symbol");
            r = zh(l, -1, -1, 2, 2, s), r.setStyle("strokeNoScale", !0), n.add(r), o && o.onCreate(r)
        }
        var u = e.getItemStyle(["color", "symbol", "symbolSize"]);
        r.setStyle(u), i = a({ rectHover: !0, z2: 100 }, i, !0);
        var h = t.get("symbolSize");
        h = h instanceof Array ? h.slice() : [+h, +h], h[0] /= 2, h[1] /= 2, i.scale = h;
        var c = t.get("symbolOffset");
        if (c) {
            var d = i.position = i.position || [0, 0];
            d[0] += lo(c[0], h[0]), d[1] += lo(c[1], h[1])
        }
        var f = t.get("symbolRotate");
        return i.rotation = (f || 0) * Math.PI / 180 || 0, r.attr(i), r.updateTransform(), r
    }

    function b_(t, e, n, i, a) {
        if (!t.dragging) {
            var r = i.getModel("checkpointStyle"),
                o = n.dataToCoord(i.getData().get(["value"], e));
            a || !r.get("animation", !0) ? t.attr({ position: [o, 0] }) : (t.stopAnimation(!0), t.animateTo({ position: [o, 0] }, r.get("animationDuration", !0), r.get("animationEasing", !0)))
        }
    }
    var S_ = 2311,
        I_ = function() { return S_++ },
        M_ = {};
    M_ = "object" == typeof wx && "function" == typeof wx.getSystemInfoSync ? { browser: {}, os: {}, node: !1, wxa: !0, canvasSupported: !0, svgSupported: !1, touchEventsSupported: !0, domSupported: !1 } : "undefined" == typeof document && "undefined" != typeof self ? { browser: {}, os: {}, node: !1, worker: !0, canvasSupported: !0, domSupported: !1 } : "undefined" == typeof navigator ? { browser: {}, os: {}, node: !0, worker: !1, canvasSupported: !0, svgSupported: !0, domSupported: !1 } : e(navigator.userAgent);
    var D_ = M_,
        T_ = { "[object Function]": 1, "[object RegExp]": 1, "[object Date]": 1, "[object Error]": 1, "[object CanvasGradient]": 1, "[object CanvasPattern]": 1, "[object Image]": 1, "[object Canvas]": 1 },
        A_ = { "[object Int8Array]": 1, "[object Uint8Array]": 1, "[object Uint8ClampedArray]": 1, "[object Int16Array]": 1, "[object Uint16Array]": 1, "[object Int32Array]": 1, "[object Uint32Array]": 1, "[object Float32Array]": 1, "[object Float64Array]": 1 },
        C_ = Object.prototype.toString,
        L_ = Array.prototype,
        P_ = L_.forEach,
        k_ = L_.filter,
        N_ = L_.slice,
        O_ = L_.map,
        E_ = L_.reduce,
        z_ = {},
        R_ = function() { return z_.createCanvas() };
    z_.createCanvas = function() { return document.createElement("canvas") };
    var B_, V_ = "__ec_primitive__";
    R.prototype = { constructor: R, get: function(t) { return this.data.hasOwnProperty(t) ? this.data[t] : null }, set: function(t, e) { return this.data[t] = e }, each: function(t, e) { void 0 !== e && (t = y(t, e)); for (var n in this.data) this.data.hasOwnProperty(n) && t(this.data[n], n) }, removeKey: function(t) { delete this.data[t] } };
    var G_ = (Object.freeze || Object)({ $override: n, clone: i, merge: a, mergeAll: r, extend: o, defaults: s, createCanvas: R_, getContext: l, indexOf: u, inherits: h, mixin: c, isArrayLike: d, each: f, map: g, reduce: p, filter: m, find: v, bind: y, curry: x, isArray: _, isFunction: w, isString: b, isObject: S, isBuiltInObject: I, isTypedArray: M, isDom: D, eqNaN: T, retrieve: A, retrieve2: C, retrieve3: L, slice: P, normalizeCssArray: k, assert: N, trim: O, setAsPrimitive: E, isPrimitive: z, createHashMap: B, concatArray: V, noop: G }),
        F_ = "undefined" == typeof Float32Array ? Array : Float32Array,
        W_ = Z,
        H_ = q,
        X_ = ee,
        Y_ = ne,
        U_ = (Object.freeze || Object)({ create: F, copy: W, clone: H, set: X, add: Y, scaleAndAdd: U, sub: j, len: Z, length: W_, lenSquare: q, lengthSquare: H_, mul: K, div: $, dot: J, scale: Q, normalize: te, distance: ee, dist: X_, distanceSquare: ne, distSquare: Y_, negate: ie, lerp: ae, applyTransform: re, min: oe, max: se });
    le.prototype = {
        constructor: le,
        _dragStart: function(t) {
            var e = t.target;
            e && e.draggable && (this._draggingTarget = e, e.dragging = !0, this._x = t.offsetX, this._y = t.offsetY, this.dispatchToElement(ue(e, t), "dragstart", t.event))
        },
        _drag: function(t) {
            var e = this._draggingTarget;
            if (e) {
                var n = t.offsetX,
                    i = t.offsetY,
                    a = n - this._x,
                    r = i - this._y;
                this._x = n, this._y = i, e.drift(a, r, t), this.dispatchToElement(ue(e, t), "drag", t.event);
                var o = this.findHover(n, i, e).target,
                    s = this._dropTarget;
                this._dropTarget = o, e !== o && (s && o !== s && this.dispatchToElement(ue(s, t), "dragleave", t.event), o && o !== s && this.dispatchToElement(ue(o, t), "dragenter", t.event))
            }
        },
        _dragEnd: function(t) {
            var e = this._draggingTarget;
            e && (e.dragging = !1), this.dispatchToElement(ue(e, t), "dragend", t.event), this._dropTarget && this.dispatchToElement(ue(this._dropTarget, t), "drop", t.event), this._draggingTarget = null, this._dropTarget = null
        }
    };
    var j_ = Array.prototype.slice,
        Z_ = function(t) { this._$handlers = {}, this._$eventProcessor = t };
    Z_.prototype = {
        constructor: Z_,
        one: function(t, e, n, i) { return ce(this, t, e, n, i, !0) },
        on: function(t, e, n, i) { return ce(this, t, e, n, i, !1) },
        isSilent: function(t) { var e = this._$handlers; return !e[t] || !e[t].length },
        off: function(t, e) {
            var n = this._$handlers;
            if (!t) return this._$handlers = {}, this;
            if (e) {
                if (n[t]) {
                    for (var i = [], a = 0, r = n[t].length; r > a; a++) n[t][a].h !== e && i.push(n[t][a]);
                    n[t] = i
                }
                n[t] && 0 === n[t].length && delete n[t]
            } else delete n[t];
            return this
        },
        trigger: function(t) {
            var e = this._$handlers[t],
                n = this._$eventProcessor;
            if (e) {
                var i = arguments,
                    a = i.length;
                a > 3 && (i = j_.call(i, 1));
                for (var r = e.length, o = 0; r > o;) {
                    var s = e[o];
                    if (n && n.filter && null != s.query && !n.filter(t, s.query)) o++;
                    else {
                        switch (a) {
                            case 1:
                                s.h.call(s.ctx);
                                break;
                            case 2:
                                s.h.call(s.ctx, i[1]);
                                break;
                            case 3:
                                s.h.call(s.ctx, i[1], i[2]);
                                break;
                            default:
                                s.h.apply(s.ctx, i)
                        }
                        s.one ? (e.splice(o, 1), r--) : o++
                    }
                }
            }
            return n && n.afterTrigger && n.afterTrigger(t), this
        },
        triggerWithContext: function(t) {
            var e = this._$handlers[t],
                n = this._$eventProcessor;
            if (e) {
                var i = arguments,
                    a = i.length;
                a > 4 && (i = j_.call(i, 1, i.length - 1));
                for (var r = i[i.length - 1], o = e.length, s = 0; o > s;) {
                    var l = e[s];
                    if (n && n.filter && null != l.query && !n.filter(t, l.query)) s++;
                    else {
                        switch (a) {
                            case 1:
                                l.h.call(r);
                                break;
                            case 2:
                                l.h.call(r, i[1]);
                                break;
                            case 3:
                                l.h.call(r, i[1], i[2]);
                                break;
                            default:
                                l.h.apply(r, i)
                        }
                        l.one ? (e.splice(s, 1), o--) : s++
                    }
                }
            }
            return n && n.afterTrigger && n.afterTrigger(t), this
        }
    };
    var q_ = Math.log(2),
        K_ = "undefined" != typeof window && !!window.addEventListener,
        $_ = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
        J_ = "___zrEVENTSAVED",
        Q_ = [],
        tw = K_ ? function(t) { t.preventDefault(), t.stopPropagation(), t.cancelBubble = !0 } : function(t) { t.returnValue = !1, t.cancelBubble = !0 },
        ew = function() { this._track = [] };
    ew.prototype = {
        constructor: ew,
        recognize: function(t, e, n) { return this._doTrack(t, e, n), this._recognize(t) },
        clear: function() { return this._track.length = 0, this },
        _doTrack: function(t, e, n) {
            var i = t.touches;
            if (i) {
                for (var a = { points: [], touches: [], target: e, event: t }, r = 0, o = i.length; o > r; r++) {
                    var s = i[r],
                        l = ge(n, s, {});
                    a.points.push([l.zrX, l.zrY]), a.touches.push(s)
                }
                this._track.push(a)
            }
        },
        _recognize: function(t) {
            for (var e in nw)
                if (nw.hasOwnProperty(e)) { var n = nw[e](this._track, t); if (n) return n }
        }
    };
    var nw = {
            pinch: function(t, e) {
                var n = t.length;
                if (n) {
                    var i = (t[n - 1] || {}).points,
                        a = (t[n - 2] || {}).points || i;
                    if (a && a.length > 1 && i && i.length > 1) { var r = be(i) / be(a);!isFinite(r) && (r = 1), e.pinchScale = r; var o = Se(i); return e.pinchX = o[0], e.pinchY = o[1], { type: "pinch", target: t[0].target, event: e } }
                }
            }
        },
        iw = "silent";
    De.prototype.dispose = function() {};
    var aw = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
        rw = function(t, e, n, i) { Z_.call(this), this.storage = t, this.painter = e, this.painterRoot = i, n = n || new De, this.proxy = null, this._hovered = {}, this._lastTouchMoment, this._lastX, this._lastY, this._gestureMgr, le.call(this), this.setHandlerProxy(n) };
    rw.prototype = {
        constructor: rw,
        setHandlerProxy: function(t) { this.proxy && this.proxy.dispose(), t && (f(aw, function(e) { t.on && t.on(e, this[e], this) }, this), t.handler = this), this.proxy = t },
        mousemove: function(t) {
            var e = t.zrX,
                n = t.zrY,
                i = this._hovered,
                a = i.target;
            a && !a.__zr && (i = this.findHover(i.x, i.y), a = i.target);
            var r = this._hovered = this.findHover(e, n),
                o = r.target,
                s = this.proxy;
            s.setCursor && s.setCursor(o ? o.cursor : "default"), a && o !== a && this.dispatchToElement(i, "mouseout", t), this.dispatchToElement(r, "mousemove", t), o && o !== a && this.dispatchToElement(r, "mouseover", t)
        },
        mouseout: function(t) {
            this.dispatchToElement(this._hovered, "mouseout", t);
            var e, n = t.toElement || t.relatedTarget;
            do n = n && n.parentNode; while (n && 9 !== n.nodeType && !(e = n === this.painterRoot));
            !e && this.trigger("globalout", { event: t })
        },
        resize: function() { this._hovered = {} },
        dispatch: function(t, e) {
            var n = this[t];
            n && n.call(this, e)
        },
        dispose: function() { this.proxy.dispose(), this.storage = this.proxy = this.painter = null },
        setCursorStyle: function(t) {
            var e = this.proxy;
            e.setCursor && e.setCursor(t)
        },
        dispatchToElement: function(t, e, n) {
            t = t || {};
            var i = t.target;
            if (!i || !i.silent) {
                for (var a = "on" + e, r = Ie(e, t, n); i && (i[a] && (r.cancelBubble = i[a].call(i, r)), i.trigger(e, r), i = i.parent, !r.cancelBubble););
                r.cancelBubble || (this.trigger(e, r), this.painter && this.painter.eachOtherLayer(function(t) { "function" == typeof t[a] && t[a].call(t, r), t.trigger && t.trigger(e, r) }))
            }
        },
        findHover: function(t, e, n) { for (var i = this.storage.getDisplayList(), a = { x: t, y: e }, r = i.length - 1; r >= 0; r--) { var o; if (i[r] !== n && !i[r].ignore && (o = Te(i[r], t, e)) && (!a.topTarget && (a.topTarget = i[r]), o !== iw)) { a.target = i[r]; break } } return a },
        processGesture: function(t, e) {
            this._gestureMgr || (this._gestureMgr = new ew);
            var n = this._gestureMgr;
            "start" === e && n.clear();
            var i = n.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom);
            if ("end" === e && n.clear(), i) {
                var a = i.type;
                t.gestureEvent = a, this.dispatchToElement({ target: i.target }, a, i.event)
            }
        }
    }, f(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(t) {
        rw.prototype[t] = function(e) {
            var n = this.findHover(e.zrX, e.zrY),
                i = n.target;
            if ("mousedown" === t) this._downEl = i, this._downPoint = [e.zrX, e.zrY], this._upEl = i;
            else if ("mouseup" === t) this._upEl = i;
            else if ("click" === t) {
                if (this._downEl !== this._upEl || !this._downPoint || X_(this._downPoint, [e.zrX, e.zrY]) > 4) return;
                this._downPoint = null
            }
            this.dispatchToElement(n, t, e)
        }
    }), c(rw, Z_), c(rw, le);
    var ow = "undefined" == typeof Float32Array ? Array : Float32Array,
        sw = (Object.freeze || Object)({ create: Ae, identity: Ce, copy: Le, mul: Pe, translate: ke, rotate: Ne, scale: Oe, invert: Ee, clone: ze }),
        lw = Ce,
        uw = 5e-5,
        hw = function(t) { t = t || {}, t.position || (this.position = [0, 0]), null == t.rotation && (this.rotation = 0), t.scale || (this.scale = [1, 1]), this.origin = this.origin || null },
        cw = hw.prototype;
    cw.transform = null, cw.needLocalTransform = function() { return Re(this.rotation) || Re(this.position[0]) || Re(this.position[1]) || Re(this.scale[0] - 1) || Re(this.scale[1] - 1) };
    var dw = [];
    cw.updateTransform = function() {
        var t = this.parent,
            e = t && t.transform,
            n = this.needLocalTransform(),
            i = this.transform;
        if (!n && !e) return void(i && lw(i));
        i = i || Ae(), n ? this.getLocalTransform(i) : lw(i), e && (n ? Pe(i, t.transform, i) : Le(i, t.transform)), this.transform = i;
        var a = this.globalScaleRatio;
        if (null != a && 1 !== a) {
            this.getGlobalScale(dw);
            var r = dw[0] < 0 ? -1 : 1,
                o = dw[1] < 0 ? -1 : 1,
                s = ((dw[0] - r) * a + r) / dw[0] || 0,
                l = ((dw[1] - o) * a + o) / dw[1] || 0;
            i[0] *= s, i[1] *= s, i[2] *= l, i[3] *= l
        }
        this.invTransform = this.invTransform || Ae(), Ee(this.invTransform, i)
    }, cw.getLocalTransform = function(t) { return hw.getLocalTransform(this, t) }, cw.setTransform = function(t) {
        var e = this.transform,
            n = t.dpr || 1;
        e ? t.setTransform(n * e[0], n * e[1], n * e[2], n * e[3], n * e[4], n * e[5]) : t.setTransform(n, 0, 0, n, 0, 0)
    }, cw.restoreTransform = function(t) {
        var e = t.dpr || 1;
        t.setTransform(e, 0, 0, e, 0, 0)
    };
    var fw = [],
        gw = Ae();
    cw.setLocalTransform = function(t) {
        if (t) {
            var e = t[0] * t[0] + t[1] * t[1],
                n = t[2] * t[2] + t[3] * t[3],
                i = this.position,
                a = this.scale;
            Re(e - 1) && (e = Math.sqrt(e)), Re(n - 1) && (n = Math.sqrt(n)), t[0] < 0 && (e = -e), t[3] < 0 && (n = -n), i[0] = t[4], i[1] = t[5], a[0] = e, a[1] = n, this.rotation = Math.atan2(-t[1] / n, t[0] / e)
        }
    }, cw.decomposeTransform = function() {
        if (this.transform) {
            var t = this.parent,
                e = this.transform;
            t && t.transform && (Pe(fw, t.invTransform, e), e = fw);
            var n = this.origin;
            n && (n[0] || n[1]) && (gw[4] = n[0], gw[5] = n[1], Pe(fw, e, gw), fw[4] -= n[0], fw[5] -= n[1], e = fw), this.setLocalTransform(e)
        }
    }, cw.getGlobalScale = function(t) { var e = this.transform; return t = t || [], e ? (t[0] = Math.sqrt(e[0] * e[0] + e[1] * e[1]), t[1] = Math.sqrt(e[2] * e[2] + e[3] * e[3]), e[0] < 0 && (t[0] = -t[0]), e[3] < 0 && (t[1] = -t[1]), t) : (t[0] = 1, t[1] = 1, t) }, cw.transformCoordToLocal = function(t, e) {
        var n = [t, e],
            i = this.invTransform;
        return i && re(n, n, i), n
    }, cw.transformCoordToGlobal = function(t, e) {
        var n = [t, e],
            i = this.transform;
        return i && re(n, n, i), n
    }, hw.getLocalTransform = function(t, e) {
        e = e || [], lw(e);
        var n = t.origin,
            i = t.scale || [1, 1],
            a = t.rotation || 0,
            r = t.position || [0, 0];
        return n && (e[4] -= n[0], e[5] -= n[1]), Oe(e, e, i), a && Ne(e, e, a), n && (e[4] += n[0], e[5] += n[1]), e[4] += r[0], e[5] += r[1], e
    };
    var pw = {
        linear: function(t) { return t },
        quadraticIn: function(t) { return t * t },
        quadraticOut: function(t) { return t * (2 - t) },
        quadraticInOut: function(t) { return (t *= 2) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1) },
        cubicIn: function(t) { return t * t * t },
        cubicOut: function(t) { return --t * t * t + 1 },
        cubicInOut: function(t) { return (t *= 2) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2) },
        quarticIn: function(t) { return t * t * t * t },
        quarticOut: function(t) { return 1 - --t * t * t * t },
        quarticInOut: function(t) { return (t *= 2) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2) },
        quinticIn: function(t) { return t * t * t * t * t },
        quinticOut: function(t) { return --t * t * t * t * t + 1 },
        quinticInOut: function(t) { return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2) },
        sinusoidalIn: function(t) { return 1 - Math.cos(t * Math.PI / 2) },
        sinusoidalOut: function(t) { return Math.sin(t * Math.PI / 2) },
        sinusoidalInOut: function(t) { return .5 * (1 - Math.cos(Math.PI * t)) },
        exponentialIn: function(t) { return 0 === t ? 0 : Math.pow(1024, t - 1) },
        exponentialOut: function(t) { return 1 === t ? 1 : 1 - Math.pow(2, -10 * t) },
        exponentialInOut: function(t) { return 0 === t ? 0 : 1 === t ? 1 : (t *= 2) < 1 ? .5 * Math.pow(1024, t - 1) : .5 * (-Math.pow(2, -10 * (t - 1)) + 2) },
        circularIn: function(t) { return 1 - Math.sqrt(1 - t * t) },
        circularOut: function(t) { return Math.sqrt(1 - --t * t) },
        circularInOut: function(t) { return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1) },
        elasticIn: function(t) {
            var e, n = .1,
                i = .4;
            return 0 === t ? 0 : 1 === t ? 1 : (!n || 1 > n ? (n = 1, e = i / 4) : e = i * Math.asin(1 / n) / (2 * Math.PI), -(n * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (t - e) * Math.PI / i)))
        },
        elasticOut: function(t) {
            var e, n = .1,
                i = .4;
            return 0 === t ? 0 : 1 === t ? 1 : (!n || 1 > n ? (n = 1, e = i / 4) : e = i * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * t) * Math.sin(2 * (t - e) * Math.PI / i) + 1)
        },
        elasticInOut: function(t) {
            var e, n = .1,
                i = .4;
            return 0 === t ? 0 : 1 === t ? 1 : (!n || 1 > n ? (n = 1, e = i / 4) : e = i * Math.asin(1 / n) / (2 * Math.PI), (t *= 2) < 1 ? -.5 * n * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (t - e) * Math.PI / i) : n * Math.pow(2, -10 * (t -= 1)) * Math.sin(2 * (t - e) * Math.PI / i) * .5 + 1)
        },
        backIn: function(t) { var e = 1.70158; return t * t * ((e + 1) * t - e) },
        backOut: function(t) { var e = 1.70158; return --t * t * ((e + 1) * t + e) + 1 },
        backInOut: function(t) { var e = 2.5949095; return (t *= 2) < 1 ? .5 * t * t * ((e + 1) * t - e) : .5 * ((t -= 2) * t * ((e + 1) * t + e) + 2) },
        bounceIn: function(t) { return 1 - pw.bounceOut(1 - t) },
        bounceOut: function(t) { return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375 },
        bounceInOut: function(t) { return .5 > t ? .5 * pw.bounceIn(2 * t) : .5 * pw.bounceOut(2 * t - 1) + .5 }
    };
    Be.prototype = {
        constructor: Be,
        step: function(t, e) {
            if (this._initialized || (this._startTime = t + this._delay, this._initialized = !0), this._paused) return void(this._pausedTime += e);
            var n = (t - this._startTime - this._pausedTime) / this._life;
            if (!(0 > n)) {
                n = Math.min(n, 1);
                var i = this.easing,
                    a = "string" == typeof i ? pw[i] : i,
                    r = "function" == typeof a ? a(n) : n;
                return this.fire("frame", r), 1 === n ? this.loop ? (this.restart(t), "restart") : (this._needsRemove = !0, "destroy") : null
            }
        },
        restart: function(t) {
            var e = (t - this._startTime - this._pausedTime) % this._life;
            this._startTime = t - e + this.gap, this._pausedTime = 0, this._needsRemove = !1
        },
        fire: function(t, e) { t = "on" + t, this[t] && this[t](this._target, e) },
        pause: function() { this._paused = !0 },
        resume: function() { this._paused = !1 }
    };
    var mw = function() { this.head = null, this.tail = null, this._len = 0 },
        vw = mw.prototype;
    vw.insert = function(t) { var e = new yw(t); return this.insertEntry(e), e }, vw.insertEntry = function(t) { this.head ? (this.tail.next = t, t.prev = this.tail, t.next = null, this.tail = t) : this.head = this.tail = t, this._len++ }, vw.remove = function(t) {
        var e = t.prev,
            n = t.next;
        e ? e.next = n : this.head = n, n ? n.prev = e : this.tail = e, t.next = t.prev = null, this._len--
    }, vw.len = function() { return this._len }, vw.clear = function() { this.head = this.tail = null, this._len = 0 };
    var yw = function(t) { this.value = t, this.next, this.prev },
        xw = function(t) { this._list = new mw, this._map = {}, this._maxSize = t || 10, this._lastRemovedEntry = null },
        _w = xw.prototype;
    _w.put = function(t, e) {
        var n = this._list,
            i = this._map,
            a = null;
        if (null == i[t]) {
            var r = n.len(),
                o = this._lastRemovedEntry;
            if (r >= this._maxSize && r > 0) {
                var s = n.head;
                n.remove(s), delete i[s.key], a = s.value, this._lastRemovedEntry = s
            }
            o ? o.value = e : o = new yw(e), o.key = t, n.insertEntry(o), i[t] = o
        }
        return a
    }, _w.get = function(t) {
        var e = this._map[t],
            n = this._list;
        return null != e ? (e !== n.tail && (n.remove(e), n.insertEntry(e)), e.value) : void 0
    }, _w.clear = function() { this._list.clear(), this._map = {} };
    var ww = { transparent: [0, 0, 0, 0], aliceblue: [240, 248, 255, 1], antiquewhite: [250, 235, 215, 1], aqua: [0, 255, 255, 1], aquamarine: [127, 255, 212, 1], azure: [240, 255, 255, 1], beige: [245, 245, 220, 1], bisque: [255, 228, 196, 1], black: [0, 0, 0, 1], blanchedalmond: [255, 235, 205, 1], blue: [0, 0, 255, 1], blueviolet: [138, 43, 226, 1], brown: [165, 42, 42, 1], burlywood: [222, 184, 135, 1], cadetblue: [95, 158, 160, 1], chartreuse: [127, 255, 0, 1], chocolate: [210, 105, 30, 1], coral: [255, 127, 80, 1], cornflowerblue: [100, 149, 237, 1], cornsilk: [255, 248, 220, 1], crimson: [220, 20, 60, 1], cyan: [0, 255, 255, 1], darkblue: [0, 0, 139, 1], darkcyan: [0, 139, 139, 1], darkgoldenrod: [184, 134, 11, 1], darkgray: [169, 169, 169, 1], darkgreen: [0, 100, 0, 1], darkgrey: [169, 169, 169, 1], darkkhaki: [189, 183, 107, 1], darkmagenta: [139, 0, 139, 1], darkolivegreen: [85, 107, 47, 1], darkorange: [255, 140, 0, 1], darkorchid: [153, 50, 204, 1], darkred: [139, 0, 0, 1], darksalmon: [233, 150, 122, 1], darkseagreen: [143, 188, 143, 1], darkslateblue: [72, 61, 139, 1], darkslategray: [47, 79, 79, 1], darkslategrey: [47, 79, 79, 1], darkturquoise: [0, 206, 209, 1], darkviolet: [148, 0, 211, 1], deeppink: [255, 20, 147, 1], deepskyblue: [0, 191, 255, 1], dimgray: [105, 105, 105, 1], dimgrey: [105, 105, 105, 1], dodgerblue: [30, 144, 255, 1], firebrick: [178, 34, 34, 1], floralwhite: [255, 250, 240, 1], forestgreen: [34, 139, 34, 1], fuchsia: [255, 0, 255, 1], gainsboro: [220, 220, 220, 1], ghostwhite: [248, 248, 255, 1], gold: [255, 215, 0, 1], goldenrod: [218, 165, 32, 1], gray: [128, 128, 128, 1], green: [0, 128, 0, 1], greenyellow: [173, 255, 47, 1], grey: [128, 128, 128, 1], honeydew: [240, 255, 240, 1], hotpink: [255, 105, 180, 1], indianred: [205, 92, 92, 1], indigo: [75, 0, 130, 1], ivory: [255, 255, 240, 1], khaki: [240, 230, 140, 1], lavender: [230, 230, 250, 1], lavenderblush: [255, 240, 245, 1], lawngreen: [124, 252, 0, 1], lemonchiffon: [255, 250, 205, 1], lightblue: [173, 216, 230, 1], lightcoral: [240, 128, 128, 1], lightcyan: [224, 255, 255, 1], lightgoldenrodyellow: [250, 250, 210, 1], lightgray: [211, 211, 211, 1], lightgreen: [144, 238, 144, 1], lightgrey: [211, 211, 211, 1], lightpink: [255, 182, 193, 1], lightsalmon: [255, 160, 122, 1], lightseagreen: [32, 178, 170, 1], lightskyblue: [135, 206, 250, 1], lightslategray: [119, 136, 153, 1], lightslategrey: [119, 136, 153, 1], lightsteelblue: [176, 196, 222, 1], lightyellow: [255, 255, 224, 1], lime: [0, 255, 0, 1], limegreen: [50, 205, 50, 1], linen: [250, 240, 230, 1], magenta: [255, 0, 255, 1], maroon: [128, 0, 0, 1], mediumaquamarine: [102, 205, 170, 1], mediumblue: [0, 0, 205, 1], mediumorchid: [186, 85, 211, 1], mediumpurple: [147, 112, 219, 1], mediumseagreen: [60, 179, 113, 1], mediumslateblue: [123, 104, 238, 1], mediumspringgreen: [0, 250, 154, 1], mediumturquoise: [72, 209, 204, 1], mediumvioletred: [199, 21, 133, 1], midnightblue: [25, 25, 112, 1], mintcream: [245, 255, 250, 1], mistyrose: [255, 228, 225, 1], moccasin: [255, 228, 181, 1], navajowhite: [255, 222, 173, 1], navy: [0, 0, 128, 1], oldlace: [253, 245, 230, 1], olive: [128, 128, 0, 1], olivedrab: [107, 142, 35, 1], orange: [255, 165, 0, 1], orangered: [255, 69, 0, 1], orchid: [218, 112, 214, 1], palegoldenrod: [238, 232, 170, 1], palegreen: [152, 251, 152, 1], paleturquoise: [175, 238, 238, 1], palevioletred: [219, 112, 147, 1], papayawhip: [255, 239, 213, 1], peachpuff: [255, 218, 185, 1], peru: [205, 133, 63, 1], pink: [255, 192, 203, 1], plum: [221, 160, 221, 1], powderblue: [176, 224, 230, 1], purple: [128, 0, 128, 1], red: [255, 0, 0, 1], rosybrown: [188, 143, 143, 1], royalblue: [65, 105, 225, 1], saddlebrown: [139, 69, 19, 1], salmon: [250, 128, 114, 1], sandybrown: [244, 164, 96, 1], seagreen: [46, 139, 87, 1], seashell: [255, 245, 238, 1], sienna: [160, 82, 45, 1], silver: [192, 192, 192, 1], skyblue: [135, 206, 235, 1], slateblue: [106, 90, 205, 1], slategray: [112, 128, 144, 1], slategrey: [112, 128, 144, 1], snow: [255, 250, 250, 1], springgreen: [0, 255, 127, 1], steelblue: [70, 130, 180, 1], tan: [210, 180, 140, 1], teal: [0, 128, 128, 1], thistle: [216, 191, 216, 1], tomato: [255, 99, 71, 1], turquoise: [64, 224, 208, 1], violet: [238, 130, 238, 1], wheat: [245, 222, 179, 1], white: [255, 255, 255, 1], whitesmoke: [245, 245, 245, 1], yellow: [255, 255, 0, 1], yellowgreen: [154, 205, 50, 1] },
        bw = new xw(20),
        Sw = null,
        Iw = tn,
        Mw = en,
        Dw = (Object.freeze || Object)({ parse: qe, lift: Je, toHex: Qe, fastLerp: tn, fastMapToColor: Iw, lerp: en, mapToColor: Mw, modifyHSL: nn, modifyAlpha: an, stringify: rn }),
        Tw = Array.prototype.slice,
        Aw = function(t, e, n, i) { this._tracks = {}, this._target = t, this._loop = e || !1, this._getter = n || on, this._setter = i || sn, this._clipCount = 0, this._delay = 0, this._doneList = [], this._onframeList = [], this._clipList = [] };
    Aw.prototype = {
        when: function(t, e) {
            var n = this._tracks;
            for (var i in e)
                if (e.hasOwnProperty(i)) {
                    if (!n[i]) {
                        n[i] = [];
                        var a = this._getter(this._target, i);
                        if (null == a) continue;
                        0 !== t && n[i].push({ time: 0, value: pn(a) })
                    }
                    n[i].push({ time: t, value: e[i] })
                }
            return this
        },
        during: function(t) { return this._onframeList.push(t), this },
        pause: function() {
            for (var t = 0; t < this._clipList.length; t++) this._clipList[t].pause();
            this._paused = !0
        },
        resume: function() {
            for (var t = 0; t < this._clipList.length; t++) this._clipList[t].resume();
            this._paused = !1
        },
        isPaused: function() { return !!this._paused },
        _doneCallback: function() { this._tracks = {}, this._clipList.length = 0; for (var t = this._doneList, e = t.length, n = 0; e > n; n++) t[n].call(this) },
        start: function(t, e) {
            var n, i = this,
                a = 0,
                r = function() { a--, a || i._doneCallback() };
            for (var o in this._tracks)
                if (this._tracks.hasOwnProperty(o)) {
                    var s = yn(this, t, r, this._tracks[o], o, e);
                    s && (this._clipList.push(s), a++, this.animation && this.animation.addClip(s), n = s)
                }
            if (n) {
                var l = n.onframe;
                n.onframe = function(t, e) { l(t, e); for (var n = 0; n < i._onframeList.length; n++) i._onframeList[n](t, e) }
            }
            return a || this._doneCallback(), this
        },
        stop: function(t) {
            for (var e = this._clipList, n = this.animation, i = 0; i < e.length; i++) {
                var a = e[i];
                t && a.onframe(this._target, 1), n && n.removeClip(a)
            }
            e.length = 0
        },
        delay: function(t) { return this._delay = t, this },
        done: function(t) { return t && this._doneList.push(t), this },
        getClips: function() { return this._clipList }
    };
    var Cw = 1;
    "undefined" != typeof window && (Cw = Math.max(window.devicePixelRatio || 1, 1));
    var Lw = 0,
        Pw = Cw,
        kw = function() {};
    1 === Lw && (kw = console.error);
    var Nw = kw,
        Ow = function() { this.animators = [] };
    Ow.prototype = {
        constructor: Ow,
        animate: function(t, e) {
            var n, i = !1,
                a = this,
                r = this.__zr;
            if (t) {
                var o = t.split("."),
                    s = a;
                i = "shape" === o[0];
                for (var l = 0, h = o.length; h > l; l++) s && (s = s[o[l]]);
                s && (n = s)
            } else n = a;
            if (!n) return void Nw('Property "' + t + '" is not existed in element ' + a.id);
            var c = a.animators,
                d = new Aw(n, e);
            return d.during(function() { a.dirty(i) }).done(function() { c.splice(u(c, d), 1) }), c.push(d), r && r.animation.addAnimator(d), d
        },
        stopAnimation: function(t) { for (var e = this.animators, n = e.length, i = 0; n > i; i++) e[i].stop(t); return e.length = 0, this },
        animateTo: function(t, e, n, i, a, r) { xn(this, t, e, n, i, a, r) },
        animateFrom: function(t, e, n, i, a, r) { xn(this, t, e, n, i, a, r, !0) }
    };
    var Ew = function(t) { hw.call(this, t), Z_.call(this, t), Ow.call(this, t), this.id = t.id || I_() };
    Ew.prototype = {
        type: "element",
        name: "",
        __zr: null,
        ignore: !1,
        clipPath: null,
        isGroup: !1,
        drift: function(t, e) {
            switch (this.draggable) {
                case "horizontal":
                    e = 0;
                    break;
                case "vertical":
                    t = 0
            }
            var n = this.transform;
            n || (n = this.transform = [1, 0, 0, 1, 0, 0]), n[4] += t, n[5] += e, this.decomposeTransform(), this.dirty(!1)
        },
        beforeUpdate: function() {},
        afterUpdate: function() {},
        update: function() { this.updateTransform() },
        traverse: function() {},
        attrKV: function(t, e) {
            if ("position" === t || "scale" === t || "origin" === t) {
                if (e) {
                    var n = this[t];
                    n || (n = this[t] = []), n[0] = e[0], n[1] = e[1]
                }
            } else this[t] = e
        },
        hide: function() { this.ignore = !0, this.__zr && this.__zr.refresh() },
        show: function() { this.ignore = !1, this.__zr && this.__zr.refresh() },
        attr: function(t, e) {
            if ("string" == typeof t) this.attrKV(t, e);
            else if (S(t))
                for (var n in t) t.hasOwnProperty(n) && this.attrKV(n, t[n]);
            return this.dirty(!1), this
        },
        setClipPath: function(t) {
            var e = this.__zr;
            e && t.addSelfToZr(e), this.clipPath && this.clipPath !== t && this.removeClipPath(), this.clipPath = t, t.__zr = e, t.__clipTarget = this, this.dirty(!1)
        },
        removeClipPath: function() {
            var t = this.clipPath;
            t && (t.__zr && t.removeSelfFromZr(t.__zr), t.__zr = null, t.__clipTarget = null, this.clipPath = null, this.dirty(!1))
        },
        addSelfToZr: function(t) {
            this.__zr = t;
            var e = this.animators;
            if (e)
                for (var n = 0; n < e.length; n++) t.animation.addAnimator(e[n]);
            this.clipPath && this.clipPath.addSelfToZr(t)
        },
        removeSelfFromZr: function(t) {
            this.__zr = null;
            var e = this.animators;
            if (e)
                for (var n = 0; n < e.length; n++) t.animation.removeAnimator(e[n]);
            this.clipPath && this.clipPath.removeSelfFromZr(t)
        }
    }, c(Ew, Ow), c(Ew, hw), c(Ew, Z_);
    var zw = re,
        Rw = Math.min,
        Bw = Math.max;
    bn.prototype = {
        constructor: bn,
        union: function(t) {
            var e = Rw(t.x, this.x),
                n = Rw(t.y, this.y);
            this.width = Bw(t.x + t.width, this.x + this.width) - e, this.height = Bw(t.y + t.height, this.y + this.height) - n, this.x = e, this.y = n
        },
        applyTransform: function() {
            var t = [],
                e = [],
                n = [],
                i = [];
            return function(a) {
                if (a) {
                    t[0] = n[0] = this.x, t[1] = i[1] = this.y, e[0] = i[0] = this.x + this.width, e[1] = n[1] = this.y + this.height, zw(t, t, a), zw(e, e, a), zw(n, n, a), zw(i, i, a), this.x = Rw(t[0], e[0], n[0], i[0]), this.y = Rw(t[1], e[1], n[1], i[1]);
                    var r = Bw(t[0], e[0], n[0], i[0]),
                        o = Bw(t[1], e[1], n[1], i[1]);
                    this.width = r - this.x, this.height = o - this.y
                }
            }
        }(),
        calculateTransform: function(t) {
            var e = this,
                n = t.width / e.width,
                i = t.height / e.height,
                a = Ae();
            return ke(a, a, [-e.x, -e.y]), Oe(a, a, [n, i]), ke(a, a, [t.x, t.y]), a
        },
        intersect: function(t) {
            if (!t) return !1;
            t instanceof bn || (t = bn.create(t));
            var e = this,
                n = e.x,
                i = e.x + e.width,
                a = e.y,
                r = e.y + e.height,
                o = t.x,
                s = t.x + t.width,
                l = t.y,
                u = t.y + t.height;
            return !(o > i || n > s || l > r || a > u)
        },
        contain: function(t, e) { var n = this; return t >= n.x && t <= n.x + n.width && e >= n.y && e <= n.y + n.height },
        clone: function() { return new bn(this.x, this.y, this.width, this.height) },
        copy: function(t) { this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height },
        plain: function() { return { x: this.x, y: this.y, width: this.width, height: this.height } }
    }, bn.create = function(t) { return new bn(t.x, t.y, t.width, t.height) };
    var Vw = function(t) {
        t = t || {}, Ew.call(this, t);
        for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
        this._children = [], this.__storage = null, this.__dirty = !0
    };
    Vw.prototype = {
        constructor: Vw,
        isGroup: !0,
        type: "group",
        silent: !1,
        children: function() { return this._children.slice() },
        childAt: function(t) { return this._children[t] },
        childOfName: function(t) {
            for (var e = this._children, n = 0; n < e.length; n++)
                if (e[n].name === t) return e[n]
        },
        childCount: function() { return this._children.length },
        add: function(t) { return t && t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), this },
        addBefore: function(t, e) {
            if (t && t !== this && t.parent !== this && e && e.parent === this) {
                var n = this._children,
                    i = n.indexOf(e);
                i >= 0 && (n.splice(i, 0, t), this._doAdd(t))
            }
            return this
        },
        _doAdd: function(t) {
            t.parent && t.parent.remove(t), t.parent = this;
            var e = this.__storage,
                n = this.__zr;
            e && e !== t.__storage && (e.addToStorage(t), t instanceof Vw && t.addChildrenToStorage(e)), n && n.refresh()
        },
        remove: function(t) {
            var e = this.__zr,
                n = this.__storage,
                i = this._children,
                a = u(i, t);
            return 0 > a ? this : (i.splice(a, 1), t.parent = null, n && (n.delFromStorage(t), t instanceof Vw && t.delChildrenFromStorage(n)), e && e.refresh(), this)
        },
        removeAll: function() {
            var t, e, n = this._children,
                i = this.__storage;
            for (e = 0; e < n.length; e++) t = n[e], i && (i.delFromStorage(t), t instanceof Vw && t.delChildrenFromStorage(i)), t.parent = null;
            return n.length = 0, this
        },
        eachChild: function(t, e) {
            for (var n = this._children, i = 0; i < n.length; i++) {
                var a = n[i];
                t.call(e, a, i)
            }
            return this
        },
        traverse: function(t, e) {
            for (var n = 0; n < this._children.length; n++) {
                var i = this._children[n];
                t.call(e, i), "group" === i.type && i.traverse(t, e)
            }
            return this
        },
        addChildrenToStorage: function(t) {
            for (var e = 0; e < this._children.length; e++) {
                var n = this._children[e];
                t.addToStorage(n), n instanceof Vw && n.addChildrenToStorage(t)
            }
        },
        delChildrenFromStorage: function(t) {
            for (var e = 0; e < this._children.length; e++) {
                var n = this._children[e];
                t.delFromStorage(n), n instanceof Vw && n.delChildrenFromStorage(t)
            }
        },
        dirty: function() { return this.__dirty = !0, this.__zr && this.__zr.refresh(), this },
        getBoundingRect: function(t) {
            for (var e = null, n = new bn(0, 0, 0, 0), i = t || this._children, a = [], r = 0; r < i.length; r++) {
                var o = i[r];
                if (!o.ignore && !o.invisible) {
                    var s = o.getBoundingRect(),
                        l = o.getLocalTransform(a);
                    l ? (n.copy(s), n.applyTransform(l), e = e || n.clone(), e.union(n)) : (e = e || s.clone(), e.union(s))
                }
            }
            return e || n
        }
    }, h(Vw, Ew);
    var Gw = 32,
        Fw = 7,
        Ww = function() { this._roots = [], this._displayList = [], this._displayListLen = 0 };
    Ww.prototype = {
        constructor: Ww,
        traverse: function(t, e) { for (var n = 0; n < this._roots.length; n++) this._roots[n].traverse(t, e) },
        getDisplayList: function(t, e) { return e = e || !1, t && this.updateDisplayList(e), this._displayList },
        updateDisplayList: function(t) {
            this._displayListLen = 0;
            for (var e = this._roots, n = this._displayList, i = 0, a = e.length; a > i; i++) this._updateAndAddDisplayable(e[i], null, t);
            n.length = this._displayListLen, D_.canvasSupported && Ln(n, Pn)
        },
        _updateAndAddDisplayable: function(t, e, n) {
            if (!t.ignore || n) {
                t.beforeUpdate(), t.__dirty && t.update(), t.afterUpdate();
                var i = t.clipPath;
                if (i) { e = e ? e.slice() : []; for (var a = i, r = t; a;) a.parent = r, a.updateTransform(), e.push(a), r = a, a = a.clipPath }
                if (t.isGroup) {
                    for (var o = t._children, s = 0; s < o.length; s++) {
                        var l = o[s];
                        t.__dirty && (l.__dirty = !0), this._updateAndAddDisplayable(l, e, n)
                    }
                    t.__dirty = !1
                } else t.__clipPaths = e, this._displayList[this._displayListLen++] = t
            }
        },
        addRoot: function(t) { t.__storage !== this && (t instanceof Vw && t.addChildrenToStorage(this), this.addToStorage(t), this._roots.push(t)) },
        delRoot: function(t) {
            if (null == t) {
                for (var e = 0; e < this._roots.length; e++) {
                    var n = this._roots[e];
                    n instanceof Vw && n.delChildrenFromStorage(this)
                }
                return this._roots = [], this._displayList = [], void(this._displayListLen = 0)
            }
            if (t instanceof Array)
                for (var e = 0, i = t.length; i > e; e++) this.delRoot(t[e]);
            else {
                var a = u(this._roots, t);
                a >= 0 && (this.delFromStorage(t), this._roots.splice(a, 1), t instanceof Vw && t.delChildrenFromStorage(this))
            }
        },
        addToStorage: function(t) { return t && (t.__storage = this, t.dirty(!1)), this },
        delFromStorage: function(t) { return t && (t.__storage = null), this },
        dispose: function() { this._renderList = this._roots = null },
        displayableSortFunc: Pn
    };
    var Hw = { shadowBlur: 1, shadowOffsetX: 1, shadowOffsetY: 1, textShadowBlur: 1, textShadowOffsetX: 1, textShadowOffsetY: 1, textBoxShadowBlur: 1, textBoxShadowOffsetX: 1, textBoxShadowOffsetY: 1 },
        Xw = function(t, e, n) { return Hw.hasOwnProperty(e) ? n *= t.dpr : n },
        Yw = { NONE: 0, STYLE_BIND: 1, PLAIN_TEXT: 2 },
        Uw = 9,
        jw = [
            ["shadowBlur", 0],
            ["shadowOffsetX", 0],
            ["shadowOffsetY", 0],
            ["shadowColor", "#000"],
            ["lineCap", "butt"],
            ["lineJoin", "miter"],
            ["miterLimit", 10]
        ],
        Zw = function(t) { this.extendFrom(t, !1) };
    Zw.prototype = {
        constructor: Zw,
        fill: "#000",
        stroke: null,
        opacity: 1,
        fillOpacity: null,
        strokeOpacity: null,
        lineDash: null,
        lineDashOffset: 0,
        shadowBlur: 0,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        lineWidth: 1,
        strokeNoScale: !1,
        text: null,
        font: null,
        textFont: null,
        fontStyle: null,
        fontWeight: null,
        fontSize: null,
        fontFamily: null,
        textTag: null,
        textFill: "#000",
        textStroke: null,
        textWidth: null,
        textHeight: null,
        textStrokeWidth: 0,
        textLineHeight: null,
        textPosition: "inside",
        textRect: null,
        textOffset: null,
        textAlign: null,
        textVerticalAlign: null,
        textDistance: 5,
        textShadowColor: "transparent",
        textShadowBlur: 0,
        textShadowOffsetX: 0,
        textShadowOffsetY: 0,
        textBoxShadowColor: "transparent",
        textBoxShadowBlur: 0,
        textBoxShadowOffsetX: 0,
        textBoxShadowOffsetY: 0,
        transformText: !1,
        textRotation: 0,
        textOrigin: null,
        textBackgroundColor: null,
        textBorderColor: null,
        textBorderWidth: 0,
        textBorderRadius: 0,
        textPadding: null,
        rich: null,
        truncate: null,
        blend: null,
        bind: function(t, e, n) {
            var i = this,
                a = n && n.style,
                r = !a || t.__attrCachedBy !== Yw.STYLE_BIND;
            t.__attrCachedBy = Yw.STYLE_BIND;
            for (var o = 0; o < jw.length; o++) {
                var s = jw[o],
                    l = s[0];
                (r || i[l] !== a[l]) && (t[l] = Xw(t, l, i[l] || s[1]))
            }
            if ((r || i.fill !== a.fill) && (t.fillStyle = i.fill), (r || i.stroke !== a.stroke) && (t.strokeStyle = i.stroke), (r || i.opacity !== a.opacity) && (t.globalAlpha = null == i.opacity ? 1 : i.opacity), (r || i.blend !== a.blend) && (t.globalCompositeOperation = i.blend || "source-over"), this.hasStroke()) {
                var u = i.lineWidth;
                t.lineWidth = u / (this.strokeNoScale && e && e.getLineScale ? e.getLineScale() : 1)
            }
        },
        hasFill: function() { var t = this.fill; return null != t && "none" !== t },
        hasStroke: function() { var t = this.stroke; return null != t && "none" !== t && this.lineWidth > 0 },
        extendFrom: function(t, e) {
            if (t)
                for (var n in t) !t.hasOwnProperty(n) || e !== !0 && (e === !1 ? this.hasOwnProperty(n) : null == t[n]) || (this[n] = t[n])
        },
        set: function(t, e) { "string" == typeof t ? this[t] = e : this.extendFrom(t, !0) },
        clone: function() { var t = new this.constructor; return t.extendFrom(this, !0), t },
        getGradient: function(t, e, n) { for (var i = "radial" === e.type ? Nn : kn, a = i(t, e, n), r = e.colorStops, o = 0; o < r.length; o++) a.addColorStop(r[o].offset, r[o].color); return a }
    };
    for (var qw = Zw.prototype, Kw = 0; Kw < jw.length; Kw++) {
        var $w = jw[Kw];
        $w[0] in qw || (qw[$w[0]] = $w[1])
    }
    Zw.getGradient = qw.getGradient;
    var Jw = function(t, e) { this.image = t, this.repeat = e, this.type = "pattern" };
    Jw.prototype.getCanvasPattern = function(t) { return t.createPattern(this.image, this.repeat || "repeat") };
    var Qw = function(t, e, n) {
        var i;
        n = n || Pw, "string" == typeof t ? i = En(t, e, n) : S(t) && (i = t, t = i.id), this.id = t, this.dom = i;
        var a = i.style;
        a && (i.onselectstart = On, a["-webkit-user-select"] = "none", a["user-select"] = "none", a["-webkit-touch-callout"] = "none", a["-webkit-tap-highlight-color"] = "rgba(0,0,0,0)", a.padding = 0, a.margin = 0, a["border-width"] = 0), this.domBack = null, this.ctxBack = null, this.painter = e, this.config = null, this.clearColor = 0, this.motionBlur = !1, this.lastFrameAlpha = .7, this.dpr = n
    };
    Qw.prototype = {
        constructor: Qw,
        __dirty: !0,
        __used: !1,
        __drawIndex: 0,
        __startIndex: 0,
        __endIndex: 0,
        incremental: !1,
        getElementCount: function() { return this.__endIndex - this.__startIndex },
        initContext: function() { this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr },
        createBackBuffer: function() {
            var t = this.dpr;
            this.domBack = En("back-" + this.id, this.painter, t), this.ctxBack = this.domBack.getContext("2d"), 1 !== t && this.ctxBack.scale(t, t)
        },
        resize: function(t, e) {
            var n = this.dpr,
                i = this.dom,
                a = i.style,
                r = this.domBack;
            a && (a.width = t + "px", a.height = e + "px"), i.width = t * n, i.height = e * n, r && (r.width = t * n, r.height = e * n, 1 !== n && this.ctxBack.scale(n, n))
        },
        clear: function(t, e) {
            var n = this.dom,
                i = this.ctx,
                a = n.width,
                r = n.height,
                e = e || this.clearColor,
                o = this.motionBlur && !t,
                s = this.lastFrameAlpha,
                l = this.dpr;
            if (o && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(n, 0, 0, a / l, r / l)), i.clearRect(0, 0, a, r), e && "transparent" !== e) {
                var u;
                e.colorStops ? (u = e.__canvasGradient || Zw.getGradient(i, e, { x: 0, y: 0, width: a, height: r }), e.__canvasGradient = u) : e.image && (u = Jw.prototype.getCanvasPattern.call(e, i)), i.save(), i.fillStyle = u || e, i.fillRect(0, 0, a, r), i.restore()
            }
            if (o) {
                var h = this.domBack;
                i.save(), i.globalAlpha = s, i.drawImage(h, 0, 0, a, r), i.restore()
            }
        }
    };
    var tb = "undefined" != typeof window && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(t) { setTimeout(t, 16) },
        eb = new xw(50),
        nb = {},
        ib = 0,
        ab = 5e3,
        rb = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g,
        ob = "12px sans-serif",
        sb = {};
    sb.measureText = function(t, e) { var n = l(); return n.font = e || ob, n.measureText(t) };
    var lb = ob,
        ub = { left: 1, right: 1, center: 1 },
        hb = { top: 1, bottom: 1, middle: 1 },
        cb = [
            ["textShadowBlur", "shadowBlur", 0],
            ["textShadowOffsetX", "shadowOffsetX", 0],
            ["textShadowOffsetY", "shadowOffsetY", 0],
            ["textShadowColor", "shadowColor", "transparent"]
        ],
        db = {},
        fb = {},
        gb = new bn,
        pb = function() {};
    pb.prototype = {
        constructor: pb,
        drawRectText: function(t, e) {
            var n = this.style;
            e = n.textRect || e, this.__dirty && ai(n, !0);
            var i = n.text;
            if (null != i && (i += ""), wi(i, n)) {
                t.save();
                var a = this.transform;
                n.transformText ? this.setTransform(t) : a && (gb.copy(e), gb.applyTransform(a), e = gb), oi(this, t, i, n, e, Uw), t.restore()
            }
        }
    }, bi.prototype = {
        constructor: bi,
        type: "displayable",
        __dirty: !0,
        invisible: !1,
        z: 0,
        z2: 0,
        zlevel: 0,
        draggable: !1,
        dragging: !1,
        silent: !1,
        culling: !1,
        cursor: "pointer",
        rectHover: !1,
        progressive: !1,
        incremental: !1,
        globalScaleRatio: 1,
        beforeBrush: function() {},
        afterBrush: function() {},
        brush: function() {},
        getBoundingRect: function() {},
        contain: function(t, e) { return this.rectContain(t, e) },
        traverse: function(t, e) { t.call(e, this) },
        rectContain: function(t, e) {
            var n = this.transformCoordToLocal(t, e),
                i = this.getBoundingRect();
            return i.contain(n[0], n[1])
        },
        dirty: function() { this.__dirty = this.__dirtyText = !0, this._rect = null, this.__zr && this.__zr.refresh() },
        animateStyle: function(t) { return this.animate("style", t) },
        attrKV: function(t, e) { "style" !== t ? Ew.prototype.attrKV.call(this, t, e) : this.style.set(e) },
        setStyle: function(t, e) { return this.style.set(t, e), this.dirty(!1), this },
        useStyle: function(t) { return this.style = new Zw(t, this), this.dirty(!1), this },
        calculateTextPosition: null
    }, h(bi, Ew), c(bi, pb), Si.prototype = {
        constructor: Si,
        type: "image",
        brush: function(t, e) {
            var n = this.style,
                i = n.image;
            n.bind(t, this, e);
            var a = this._image = Rn(i, this._image, this, this.onload);
            if (a && Vn(a)) {
                var r = n.x || 0,
                    o = n.y || 0,
                    s = n.width,
                    l = n.height,
                    u = a.width / a.height;
                if (null == s && null != l ? s = l * u : null == l && null != s ? l = s / u : null == s && null == l && (s = a.width, l = a.height), this.setTransform(t), n.sWidth && n.sHeight) {
                    var h = n.sx || 0,
                        c = n.sy || 0;
                    t.drawImage(a, h, c, n.sWidth, n.sHeight, r, o, s, l)
                } else if (n.sx && n.sy) {
                    var h = n.sx,
                        c = n.sy,
                        d = s - h,
                        f = l - c;
                    t.drawImage(a, h, c, d, f, r, o, s, l)
                } else t.drawImage(a, r, o, s, l);
                null != n.text && (this.restoreTransform(t), this.drawRectText(t, this.getBoundingRect()))
            }
        },
        getBoundingRect: function() { var t = this.style; return this._rect || (this._rect = new bn(t.x || 0, t.y || 0, t.width || 0, t.height || 0)), this._rect }
    }, h(Si, bi);
    var mb = 1e5,
        vb = 314159,
        yb = .01,
        xb = .001,
        _b = new bn(0, 0, 0, 0),
        wb = new bn(0, 0, 0, 0),
        bb = function(t, e, n) {
            this.type = "canvas";
            var i = !t.nodeName || "CANVAS" === t.nodeName.toUpperCase();
            this._opts = n = o({}, n || {}), this.dpr = n.devicePixelRatio || Pw, this._singleCanvas = i, this.root = t;
            var a = t.style;
            a && (a["-webkit-tap-highlight-color"] = "transparent", a["-webkit-user-select"] = a["user-select"] = a["-webkit-touch-callout"] = "none", t.innerHTML = ""), this.storage = e;
            var r = this._zlevelList = [],
                s = this._layers = {};
            if (this._layerConfig = {}, this._needsManuallyCompositing = !1, i) {
                var l = t.width,
                    u = t.height;
                null != n.width && (l = n.width), null != n.height && (u = n.height), this.dpr = n.devicePixelRatio || 1, t.width = l * this.dpr, t.height = u * this.dpr, this._width = l, this._height = u;
                var h = new Qw(t, this, this.dpr);
                h.__builtin__ = !0, h.initContext(), s[vb] = h, h.zlevel = vb, r.push(vb), this._domRoot = t
            } else {
                this._width = this._getSize(0), this._height = this._getSize(1);
                var c = this._domRoot = Ci(this._width, this._height);
                t.appendChild(c)
            }
            this._hoverlayer = null, this._hoverElements = []
        };
    bb.prototype = {
        constructor: bb,
        getType: function() { return "canvas" },
        isSingleCanvas: function() { return this._singleCanvas },
        getViewportRoot: function() { return this._domRoot },
        getViewportRootOffset: function() { var t = this.getViewportRoot(); return t ? { offsetLeft: t.offsetLeft || 0, offsetTop: t.offsetTop || 0 } : void 0 },
        refresh: function(t) {
            var e = this.storage.getDisplayList(!0),
                n = this._zlevelList;
            this._redrawId = Math.random(), this._paintList(e, t, this._redrawId);
            for (var i = 0; i < n.length; i++) {
                var a = n[i],
                    r = this._layers[a];
                if (!r.__builtin__ && r.refresh) {
                    var o = 0 === i ? this._backgroundColor : null;
                    r.refresh(o)
                }
            }
            return this.refreshHover(), this
        },
        addHover: function(t, e) { if (!t.__hoverMir) { var n = new t.constructor({ style: t.style, shape: t.shape, z: t.z, z2: t.z2, silent: t.silent }); return n.__from = t, t.__hoverMir = n, e && n.setStyle(e), this._hoverElements.push(n), n } },
        removeHover: function(t) {
            var e = t.__hoverMir,
                n = this._hoverElements,
                i = u(n, e);
            i >= 0 && n.splice(i, 1), t.__hoverMir = null
        },
        clearHover: function() {
            for (var t = this._hoverElements, e = 0; e < t.length; e++) {
                var n = t[e].__from;
                n && (n.__hoverMir = null)
            }
            t.length = 0
        },
        refreshHover: function() {
            var t = this._hoverElements,
                e = t.length,
                n = this._hoverlayer;
            if (n && n.clear(), e) {
                Ln(t, this.storage.displayableSortFunc), n || (n = this._hoverlayer = this.getLayer(mb));
                var i = {};
                n.ctx.save();
                for (var a = 0; e > a;) {
                    var r = t[a],
                        o = r.__from;
                    o && o.__zr ? (a++, o.invisible || (r.transform = o.transform, r.invTransform = o.invTransform, r.__clipPaths = o.__clipPaths, this._doPaintEl(r, n, !0, i))) : (t.splice(a, 1), o.__hoverMir = null, e--)
                }
                n.ctx.restore()
            }
        },
        getHoverLayer: function() { return this.getLayer(mb) },
        _paintList: function(t, e, n) {
            if (this._redrawId === n) {
                e = e || !1, this._updateLayerStatus(t);
                var i = this._doPaintList(t, e);
                if (this._needsManuallyCompositing && this._compositeManually(), !i) {
                    var a = this;
                    tb(function() { a._paintList(t, e, n) })
                }
            }
        },
        _compositeManually: function() {
            var t = this.getLayer(vb).ctx,
                e = this._domRoot.width,
                n = this._domRoot.height;
            t.clearRect(0, 0, e, n), this.eachBuiltinLayer(function(i) { i.virtual && t.drawImage(i.dom, 0, 0, e, n) })
        },
        _doPaintList: function(t, e) {
            for (var n = [], i = 0; i < this._zlevelList.length; i++) {
                var a = this._zlevelList[i],
                    r = this._layers[a];
                r.__builtin__ && r !== this._hoverlayer && (r.__dirty || e) && n.push(r)
            }
            for (var o = !0, s = 0; s < n.length; s++) {
                var r = n[s],
                    l = r.ctx,
                    u = {};
                l.save();
                var h = e ? r.__startIndex : r.__drawIndex,
                    c = !e && r.incremental && Date.now,
                    d = c && Date.now(),
                    g = r.zlevel === this._zlevelList[0] ? this._backgroundColor : null;
                if (r.__startIndex === r.__endIndex) r.clear(!1, g);
                else if (h === r.__startIndex) {
                    var p = t[h];
                    p.incremental && p.notClear && !e || r.clear(!1, g)
                } - 1 === h && (console.error("For some unknown reason. drawIndex is -1"), h = r.__startIndex);
                for (var m = h; m < r.__endIndex; m++) { var v = t[m]; if (this._doPaintEl(v, r, e, u), v.__dirty = v.__dirtyText = !1, c) { var y = Date.now() - d; if (y > 15) break } }
                r.__drawIndex = m, r.__drawIndex < r.__endIndex && (o = !1), u.prevElClipPaths && l.restore(), l.restore()
            }
            return D_.wxa && f(this._layers, function(t) { t && t.ctx && t.ctx.draw && t.ctx.draw() }), o
        },
        _doPaintEl: function(t, e, n, i) {
            var a = e.ctx,
                r = t.transform;
            if (!(!e.__dirty && !n || t.invisible || 0 === t.style.opacity || r && !r[0] && !r[3] || t.culling && Di(t, this._width, this._height))) {
                var o = t.__clipPaths,
                    s = i.prevElClipPaths;
                (!s || Ti(o, s)) && (s && (a.restore(), i.prevElClipPaths = null, i.prevEl = null), o && (a.save(), Ai(o, a), i.prevElClipPaths = o)), t.beforeBrush && t.beforeBrush(a), t.brush(a, i.prevEl || null), i.prevEl = t, t.afterBrush && t.afterBrush(a)
            }
        },
        getLayer: function(t, e) { this._singleCanvas && !this._needsManuallyCompositing && (t = vb); var n = this._layers[t]; return n || (n = new Qw("zr_" + t, this, this.dpr), n.zlevel = t, n.__builtin__ = !0, this._layerConfig[t] && a(n, this._layerConfig[t], !0), e && (n.virtual = e), this.insertLayer(t, n), n.initContext()), n },
        insertLayer: function(t, e) {
            var n = this._layers,
                i = this._zlevelList,
                a = i.length,
                r = null,
                o = -1,
                s = this._domRoot;
            if (n[t]) return void Nw("ZLevel " + t + " has been used already");
            if (!Mi(e)) return void Nw("Layer of zlevel " + t + " is not valid");
            if (a > 0 && t > i[0]) {
                for (o = 0; a - 1 > o && !(i[o] < t && i[o + 1] > t); o++);
                r = n[i[o]]
            }
            if (i.splice(o + 1, 0, t), n[t] = e, !e.virtual)
                if (r) {
                    var l = r.dom;
                    l.nextSibling ? s.insertBefore(e.dom, l.nextSibling) : s.appendChild(e.dom)
                } else s.firstChild ? s.insertBefore(e.dom, s.firstChild) : s.appendChild(e.dom)
        },
        eachLayer: function(t, e) { var n, i, a = this._zlevelList; for (i = 0; i < a.length; i++) n = a[i], t.call(e, this._layers[n], n) },
        eachBuiltinLayer: function(t, e) { var n, i, a, r = this._zlevelList; for (a = 0; a < r.length; a++) i = r[a], n = this._layers[i], n.__builtin__ && t.call(e, n, i) },
        eachOtherLayer: function(t, e) { var n, i, a, r = this._zlevelList; for (a = 0; a < r.length; a++) i = r[a], n = this._layers[i], n.__builtin__ || t.call(e, n, i) },
        getLayers: function() { return this._layers },
        _updateLayerStatus: function(t) {
            function e(t) { a && (a.__endIndex !== t && (a.__dirty = !0), a.__endIndex = t) }
            if (this.eachBuiltinLayer(function(t) { t.__dirty = t.__used = !1 }), this._singleCanvas)
                for (var n = 1; n < t.length; n++) { var i = t[n]; if (i.zlevel !== t[n - 1].zlevel || i.incremental) { this._needsManuallyCompositing = !0; break } }
            for (var a = null, r = 0, n = 0; n < t.length; n++) {
                var o, i = t[n],
                    s = i.zlevel;
                i.incremental ? (o = this.getLayer(s + xb, this._needsManuallyCompositing), o.incremental = !0, r = 1) : o = this.getLayer(s + (r > 0 ? yb : 0), this._needsManuallyCompositing), o.__builtin__ || Nw("ZLevel " + s + " has been used by unkown layer " + o.id), o !== a && (o.__used = !0, o.__startIndex !== n && (o.__dirty = !0), o.__startIndex = n, o.__drawIndex = o.incremental ? -1 : n, e(n), a = o), i.__dirty && (o.__dirty = !0, o.incremental && o.__drawIndex < 0 && (o.__drawIndex = n))
            }
            e(n), this.eachBuiltinLayer(function(t) {!t.__used && t.getElementCount() > 0 && (t.__dirty = !0, t.__startIndex = t.__endIndex = t.__drawIndex = 0), t.__dirty && t.__drawIndex < 0 && (t.__drawIndex = t.__startIndex) })
        },
        clear: function() { return this.eachBuiltinLayer(this._clearLayer), this },
        _clearLayer: function(t) { t.clear() },
        setBackgroundColor: function(t) { this._backgroundColor = t },
        configLayer: function(t, e) {
            if (e) {
                var n = this._layerConfig;
                n[t] ? a(n[t], e, !0) : n[t] = e;
                for (var i = 0; i < this._zlevelList.length; i++) {
                    var r = this._zlevelList[i];
                    if (r === t || r === t + yb) {
                        var o = this._layers[r];
                        a(o, n[t], !0)
                    }
                }
            }
        },
        delLayer: function(t) {
            var e = this._layers,
                n = this._zlevelList,
                i = e[t];
            i && (i.dom.parentNode.removeChild(i.dom), delete e[t], n.splice(u(n, t), 1))
        },
        resize: function(t, e) {
            if (this._domRoot.style) {
                var n = this._domRoot;
                n.style.display = "none";
                var i = this._opts;
                if (null != t && (i.width = t), null != e && (i.height = e), t = this._getSize(0), e = this._getSize(1), n.style.display = "", this._width !== t || e !== this._height) {
                    n.style.width = t + "px", n.style.height = e + "px";
                    for (var a in this._layers) this._layers.hasOwnProperty(a) && this._layers[a].resize(t, e);
                    f(this._progressiveLayers, function(n) { n.resize(t, e) }), this.refresh(!0)
                }
                this._width = t, this._height = e
            } else {
                if (null == t || null == e) return;
                this._width = t, this._height = e, this.getLayer(vb).resize(t, e)
            }
            return this
        },
        clearLayer: function(t) {
            var e = this._layers[t];
            e && e.clear()
        },
        dispose: function() { this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null },
        getRenderedCanvas: function(t) {
            if (t = t || {}, this._singleCanvas && !this._compositeManually) return this._layers[vb].dom;
            var e = new Qw("image", this, t.pixelRatio || this.dpr);
            if (e.initContext(), e.clear(!1, t.backgroundColor || this._backgroundColor), t.pixelRatio <= this.dpr) {
                this.refresh();
                var n = e.dom.width,
                    i = e.dom.height,
                    a = e.ctx;
                this.eachLayer(function(t) { t.__builtin__ ? a.drawImage(t.dom, 0, 0, n, i) : t.renderToCanvas && (e.ctx.save(), t.renderToCanvas(e.ctx), e.ctx.restore()) })
            } else
                for (var r = {}, o = this.storage.getDisplayList(!0), s = 0; s < o.length; s++) {
                    var l = o[s];
                    this._doPaintEl(l, e, !0, r)
                }
            return e.dom
        },
        getWidth: function() { return this._width },
        getHeight: function() { return this._height },
        _getSize: function(t) {
            var e = this._opts,
                n = ["width", "height"][t],
                i = ["clientWidth", "clientHeight"][t],
                a = ["paddingLeft", "paddingTop"][t],
                r = ["paddingRight", "paddingBottom"][t];
            if (null != e[n] && "auto" !== e[n]) return parseFloat(e[n]);
            var o = this.root,
                s = document.defaultView.getComputedStyle(o);
            return (o[i] || Ii(s[n]) || Ii(o.style[n])) - (Ii(s[a]) || 0) - (Ii(s[r]) || 0) | 0
        },
        pathToImage: function(t, e) {
            e = e || this.dpr;
            var n = document.createElement("canvas"),
                i = n.getContext("2d"),
                a = t.getBoundingRect(),
                r = t.style,
                o = r.shadowBlur * e,
                s = r.shadowOffsetX * e,
                l = r.shadowOffsetY * e,
                u = r.hasStroke() ? r.lineWidth : 0,
                h = Math.max(u / 2, -s + o),
                c = Math.max(u / 2, s + o),
                d = Math.max(u / 2, -l + o),
                f = Math.max(u / 2, l + o),
                g = a.width + h + c,
                p = a.height + d + f;
            n.width = g * e, n.height = p * e, i.scale(e, e), i.clearRect(0, 0, g, p), i.dpr = e;
            var m = { position: t.position, rotation: t.rotation, scale: t.scale };
            t.position = [h - a.x, d - a.y], t.rotation = 0, t.scale = [1, 1], t.updateTransform(), t && t.brush(i);
            var v = Si,
                y = new v({ style: { x: 0, y: 0, image: n } });
            return null != m.position && (y.position = t.position = m.position), null != m.rotation && (y.rotation = t.rotation = m.rotation), null != m.scale && (y.scale = t.scale = m.scale), y
        }
    };
    var Sb = function(t) { t = t || {}, this.stage = t.stage || {}, this.onframe = t.onframe || function() {}, this._clips = [], this._running = !1, this._time, this._pausedTime, this._pauseStart, this._paused = !1, Z_.call(this) };
    Sb.prototype = {
        constructor: Sb,
        addClip: function(t) { this._clips.push(t) },
        addAnimator: function(t) { t.animation = this; for (var e = t.getClips(), n = 0; n < e.length; n++) this.addClip(e[n]) },
        removeClip: function(t) {
            var e = u(this._clips, t);
            e >= 0 && this._clips.splice(e, 1)
        },
        removeAnimator: function(t) {
            for (var e = t.getClips(), n = 0; n < e.length; n++) this.removeClip(e[n]);
            t.animation = null
        },
        _update: function() {
            for (var t = (new Date).getTime() - this._pausedTime, e = t - this._time, n = this._clips, i = n.length, a = [], r = [], o = 0; i > o; o++) {
                var s = n[o],
                    l = s.step(t, e);
                l && (a.push(l), r.push(s))
            }
            for (var o = 0; i > o;) n[o]._needsRemove ? (n[o] = n[i - 1], n.pop(), i--) : o++;
            i = a.length;
            for (var o = 0; i > o; o++) r[o].fire(a[o]);
            this._time = t, this.onframe(e), this.trigger("frame", e), this.stage.update && this.stage.update()
        },
        _startLoop: function() {
            function t() { e._running && (tb(t), !e._paused && e._update()) }
            var e = this;
            this._running = !0, tb(t)
        },
        start: function() { this._time = (new Date).getTime(), this._pausedTime = 0, this._startLoop() },
        stop: function() { this._running = !1 },
        pause: function() { this._paused || (this._pauseStart = (new Date).getTime(), this._paused = !0) },
        resume: function() { this._paused && (this._pausedTime += (new Date).getTime() - this._pauseStart, this._paused = !1) },
        clear: function() { this._clips = [] },
        isFinished: function() { return !this._clips.length },
        animate: function(t, e) { e = e || {}; var n = new Aw(t, e.loop, e.getter, e.setter); return this.addAnimator(n), n }
    }, c(Sb, Z_);
    var Ib = 300,
        Mb = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
        Db = ["touchstart", "touchend", "touchmove"],
        Tb = { pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1 },
        Ab = g(Mb, function(t) { var e = t.replace("mouse", "pointer"); return Tb[e] ? e : t }),
        Cb = {
            mousemove: function(t) { t = ye(this.dom, t), this.trigger("mousemove", t) },
            mouseout: function(t) {
                t = ye(this.dom, t);
                var e = t.toElement || t.relatedTarget;
                if (e !== this.dom)
                    for (; e && 9 !== e.nodeType;) {
                        if (e === this.dom) return;
                        e = e.parentNode
                    }
                this.trigger("mouseout", t)
            },
            touchstart: function(t) { t = ye(this.dom, t), t.zrByTouch = !0, this._lastTouchMoment = new Date, this.handler.processGesture(t, "start"), Cb.mousemove.call(this, t), Cb.mousedown.call(this, t), Pi(this) },
            touchmove: function(t) { t = ye(this.dom, t), t.zrByTouch = !0, this.handler.processGesture(t, "change"), Cb.mousemove.call(this, t), Pi(this) },
            touchend: function(t) { t = ye(this.dom, t), t.zrByTouch = !0, this.handler.processGesture(t, "end"), Cb.mouseup.call(this, t), +new Date - this._lastTouchMoment < Ib && Cb.click.call(this, t), Pi(this) },
            pointerdown: function(t) { Cb.mousedown.call(this, t) },
            pointermove: function(t) { ki(t) || Cb.mousemove.call(this, t) },
            pointerup: function(t) { Cb.mouseup.call(this, t) },
            pointerout: function(t) { ki(t) || Cb.mouseout.call(this, t) }
        };
    f(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(t) { Cb[t] = function(e) { e = ye(this.dom, e), this.trigger(t, e) } });
    var Lb = Oi.prototype;
    Lb.dispose = function() {
        for (var t = Mb.concat(Db), e = 0; e < t.length; e++) {
            var n = t[e];
            _e(this.dom, Li(n), this._handlers[n])
        }
    }, Lb.setCursor = function(t) { this.dom.style && (this.dom.style.cursor = t || "default") }, c(Oi, Z_);
    var Pb = !D_.canvasSupported,
        kb = { canvas: bb },
        Nb = {},
        Ob = "4.1.2",
        Eb = function(t, e, n) {
            n = n || {}, this.dom = e, this.id = t;
            var i = this,
                a = new Ww,
                r = n.renderer;
            if (Pb) {
                if (!kb.vml) throw new Error("You need to require 'zrender/vml/vml' to support IE8");
                r = "vml"
            } else r && kb[r] || (r = "canvas");
            var o = new kb[r](e, a, n, t);
            this.storage = a, this.painter = o;
            var s = D_.node || D_.worker ? null : new Oi(o.getViewportRoot());
            this.handler = new rw(a, o, s, o.root), this.animation = new Sb({ stage: { update: y(this.flush, this) } }), this.animation.start(), this._needsRefresh;
            var l = a.delFromStorage,
                u = a.addToStorage;
            a.delFromStorage = function(t) { l.call(a, t), t && t.removeSelfFromZr(i) }, a.addToStorage = function(t) { u.call(a, t), t.addSelfToZr(i) }
        };
    Eb.prototype = {
        constructor: Eb,
        getId: function() { return this.id },
        add: function(t) { this.storage.addRoot(t), this._needsRefresh = !0 },
        remove: function(t) { this.storage.delRoot(t), this._needsRefresh = !0 },
        configLayer: function(t, e) { this.painter.configLayer && this.painter.configLayer(t, e), this._needsRefresh = !0 },
        setBackgroundColor: function(t) { this.painter.setBackgroundColor && this.painter.setBackgroundColor(t), this._needsRefresh = !0 },
        refreshImmediately: function() { this._needsRefresh = this._needsRefreshHover = !1, this.painter.refresh(), this._needsRefresh = this._needsRefreshHover = !1 },
        refresh: function() { this._needsRefresh = !0 },
        flush: function() {
            var t;
            this._needsRefresh && (t = !0, this.refreshImmediately()), this._needsRefreshHover && (t = !0, this.refreshHoverImmediately()), t && this.trigger("rendered")
        },
        addHover: function(t, e) { if (this.painter.addHover) { var n = this.painter.addHover(t, e); return this.refreshHover(), n } },
        removeHover: function(t) { this.painter.removeHover && (this.painter.removeHover(t), this.refreshHover()) },
        clearHover: function() { this.painter.clearHover && (this.painter.clearHover(), this.refreshHover()) },
        refreshHover: function() { this._needsRefreshHover = !0 },
        refreshHoverImmediately: function() { this._needsRefreshHover = !1, this.painter.refreshHover && this.painter.refreshHover() },
        resize: function(t) { t = t || {}, this.painter.resize(t.width, t.height), this.handler.resize() },
        clearAnimation: function() { this.animation.clear() },
        getWidth: function() { return this.painter.getWidth() },
        getHeight: function() { return this.painter.getHeight() },
        pathToImage: function(t, e) { return this.painter.pathToImage(t, e) },
        setCursorStyle: function(t) { this.handler.setCursorStyle(t) },
        findHover: function(t, e) { return this.handler.findHover(t, e) },
        on: function(t, e, n) { this.handler.on(t, e, n) },
        off: function(t, e) { this.handler.off(t, e) },
        trigger: function(t, e) { this.handler.trigger(t, e) },
        clear: function() { this.storage.delRoot(), this.painter.clear() },
        dispose: function() { this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, Vi(this.id) }
    };
    var zb = (Object.freeze || Object)({ version: Ob, init: Ei, dispose: zi, getInstance: Ri, registerPainter: Bi }),
        Rb = f,
        Bb = S,
        Vb = _,
        Gb = "series\x00",
        Fb = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"],
        Wb = 0,
        Hb = ".",
        Xb = "___EC__COMPONENT__CONTAINER___",
        Yb = 0,
        Ub = function(t) {
            for (var e = 0; e < t.length; e++) t[e][1] || (t[e][1] = t[e][0]);
            return function(e, n, i) {
                for (var a = {}, r = 0; r < t.length; r++) {
                    var o = t[r][1];
                    if (!(n && u(n, o) >= 0 || i && u(i, o) < 0)) {
                        var s = e.getShallow(o);
                        null != s && (a[t[r][0]] = s)
                    }
                }
                return a
            }
        },
        jb = Ub([
            ["lineWidth", "width"],
            ["stroke", "color"],
            ["opacity"],
            ["shadowBlur"],
            ["shadowOffsetX"],
            ["shadowOffsetY"],
            ["shadowColor"]
        ]),
        Zb = {
            getLineStyle: function(t) { var e = jb(this, t); return e.lineDash = this.getLineDash(e.lineWidth), e },
            getLineDash: function(t) {
                null == t && (t = 1);
                var e = this.get("type"),
                    n = Math.max(t, 2),
                    i = 4 * t;
                return "solid" === e || null == e ? !1 : "dashed" === e ? [i, i] : [n, n]
            }
        },
        qb = Ub([
            ["fill", "color"],
            ["shadowBlur"],
            ["shadowOffsetX"],
            ["shadowOffsetY"],
            ["opacity"],
            ["shadowColor"]
        ]),
        Kb = { getAreaStyle: function(t, e) { return qb(this, t, e) } },
        $b = Math.pow,
        Jb = Math.sqrt,
        Qb = 1e-8,
        tS = 1e-4,
        eS = Jb(3),
        nS = 1 / 3,
        iS = F(),
        aS = F(),
        rS = F(),
        oS = Math.min,
        sS = Math.max,
        lS = Math.sin,
        uS = Math.cos,
        hS = 2 * Math.PI,
        cS = F(),
        dS = F(),
        fS = F(),
        gS = [],
        pS = [],
        mS = { M: 1, L: 2, C: 3, Q: 4, A: 5, Z: 6, R: 7 },
        vS = [],
        yS = [],
        xS = [],
        _S = [],
        wS = Math.min,
        bS = Math.max,
        SS = Math.cos,
        IS = Math.sin,
        MS = Math.sqrt,
        DS = Math.abs,
        TS = "undefined" != typeof Float32Array,
        AS = function(t) { this._saveData = !t, this._saveData && (this.data = []), this._ctx = null };
    AS.prototype = {
        constructor: AS,
        _xi: 0,
        _yi: 0,
        _x0: 0,
        _y0: 0,
        _ux: 0,
        _uy: 0,
        _len: 0,
        _lineDash: null,
        _dashOffset: 0,
        _dashIdx: 0,
        _dashSum: 0,
        setScale: function(t, e, n) { n = n || 0, this._ux = DS(n / Pw / t) || 0, this._uy = DS(n / Pw / e) || 0 },
        getContext: function() { return this._ctx },
        beginPath: function(t) { return this._ctx = t, t && t.beginPath(), t && (this.dpr = t.dpr), this._saveData && (this._len = 0), this._lineDash && (this._lineDash = null, this._dashOffset = 0), this },
        moveTo: function(t, e) { return this.addData(mS.M, t, e), this._ctx && this._ctx.moveTo(t, e), this._x0 = t, this._y0 = e, this._xi = t, this._yi = e, this },
        lineTo: function(t, e) { var n = DS(t - this._xi) > this._ux || DS(e - this._yi) > this._uy || this._len < 5; return this.addData(mS.L, t, e), this._ctx && n && (this._needsDash() ? this._dashedLineTo(t, e) : this._ctx.lineTo(t, e)), n && (this._xi = t, this._yi = e), this },
        bezierCurveTo: function(t, e, n, i, a, r) { return this.addData(mS.C, t, e, n, i, a, r), this._ctx && (this._needsDash() ? this._dashedBezierTo(t, e, n, i, a, r) : this._ctx.bezierCurveTo(t, e, n, i, a, r)), this._xi = a, this._yi = r, this },
        quadraticCurveTo: function(t, e, n, i) { return this.addData(mS.Q, t, e, n, i), this._ctx && (this._needsDash() ? this._dashedQuadraticTo(t, e, n, i) : this._ctx.quadraticCurveTo(t, e, n, i)), this._xi = n, this._yi = i, this },
        arc: function(t, e, n, i, a, r) { return this.addData(mS.A, t, e, n, n, i, a - i, 0, r ? 0 : 1), this._ctx && this._ctx.arc(t, e, n, i, a, r), this._xi = SS(a) * n + t, this._yi = IS(a) * n + e, this },
        arcTo: function(t, e, n, i, a) { return this._ctx && this._ctx.arcTo(t, e, n, i, a), this },
        rect: function(t, e, n, i) { return this._ctx && this._ctx.rect(t, e, n, i), this.addData(mS.R, t, e, n, i), this },
        closePath: function() {
            this.addData(mS.Z);
            var t = this._ctx,
                e = this._x0,
                n = this._y0;
            return t && (this._needsDash() && this._dashedLineTo(e, n), t.closePath()), this._xi = e, this._yi = n, this
        },
        fill: function(t) { t && t.fill(), this.toStatic() },
        stroke: function(t) { t && t.stroke(), this.toStatic() },
        setLineDash: function(t) {
            if (t instanceof Array) {
                this._lineDash = t, this._dashIdx = 0;
                for (var e = 0, n = 0; n < t.length; n++) e += t[n];
                this._dashSum = e
            }
            return this
        },
        setLineDashOffset: function(t) { return this._dashOffset = t, this },
        len: function() { return this._len },
        setData: function(t) {
            var e = t.length;
            this.data && this.data.length === e || !TS || (this.data = new Float32Array(e));
            for (var n = 0; e > n; n++) this.data[n] = t[n];
            this._len = e
        },
        appendPath: function(t) {
            t instanceof Array || (t = [t]);
            for (var e = t.length, n = 0, i = this._len, a = 0; e > a; a++) n += t[a].len();
            TS && this.data instanceof Float32Array && (this.data = new Float32Array(i + n));
            for (var a = 0; e > a; a++)
                for (var r = t[a].data, o = 0; o < r.length; o++) this.data[i++] = r[o];
            this._len = i
        },
        addData: function(t) {
            if (this._saveData) {
                var e = this.data;
                this._len + arguments.length > e.length && (this._expandData(), e = this.data);
                for (var n = 0; n < arguments.length; n++) e[this._len++] = arguments[n];
                this._prevCmd = t
            }
        },
        _expandData: function() {
            if (!(this.data instanceof Array)) {
                for (var t = [], e = 0; e < this._len; e++) t[e] = this.data[e];
                this.data = t
            }
        },
        _needsDash: function() { return this._lineDash },
        _dashedLineTo: function(t, e) {
            var n, i, a = this._dashSum,
                r = this._dashOffset,
                o = this._lineDash,
                s = this._ctx,
                l = this._xi,
                u = this._yi,
                h = t - l,
                c = e - u,
                d = MS(h * h + c * c),
                f = l,
                g = u,
                p = o.length;
            for (h /= d, c /= d, 0 > r && (r = a + r), r %= a, f -= r * h, g -= r * c; h > 0 && t >= f || 0 > h && f >= t || 0 === h && (c > 0 && e >= g || 0 > c && g >= e);) i = this._dashIdx, n = o[i], f += h * n, g += c * n, this._dashIdx = (i + 1) % p, h > 0 && l > f || 0 > h && f > l || c > 0 && u > g || 0 > c && g > u || s[i % 2 ? "moveTo" : "lineTo"](h >= 0 ? wS(f, t) : bS(f, t), c >= 0 ? wS(g, e) : bS(g, e));
            h = f - t, c = g - e, this._dashOffset = -MS(h * h + c * c)
        },
        _dashedBezierTo: function(t, e, n, i, a, r) {
            var o, s, l, u, h, c = this._dashSum,
                d = this._dashOffset,
                f = this._lineDash,
                g = this._ctx,
                p = this._xi,
                m = this._yi,
                v = ca,
                y = 0,
                x = this._dashIdx,
                _ = f.length,
                w = 0;
            for (0 > d && (d = c + d), d %= c, o = 0; 1 > o; o += .1) s = v(p, t, n, a, o + .1) - v(p, t, n, a, o), l = v(m, e, i, r, o + .1) - v(m, e, i, r, o), y += MS(s * s + l * l);
            for (; _ > x && (w += f[x], !(w > d)); x++);
            for (o = (w - d) / y; 1 >= o;) u = v(p, t, n, a, o), h = v(m, e, i, r, o), x % 2 ? g.moveTo(u, h) : g.lineTo(u, h), o += f[x] / y, x = (x + 1) % _;
            x % 2 !== 0 && g.lineTo(a, r), s = a - u, l = r - h, this._dashOffset = -MS(s * s + l * l)
        },
        _dashedQuadraticTo: function(t, e, n, i) {
            var a = n,
                r = i;
            n = (n + 2 * t) / 3, i = (i + 2 * e) / 3, t = (this._xi + 2 * t) / 3, e = (this._yi + 2 * e) / 3, this._dashedBezierTo(t, e, n, i, a, r)
        },
        toStatic: function() {
            var t = this.data;
            t instanceof Array && (t.length = this._len, TS && (this.data = new Float32Array(t)))
        },
        getBoundingRect: function() {
            vS[0] = vS[1] = xS[0] = xS[1] = Number.MAX_VALUE, yS[0] = yS[1] = _S[0] = _S[1] = -Number.MAX_VALUE;
            for (var t = this.data, e = 0, n = 0, i = 0, a = 0, r = 0; r < t.length;) {
                var o = t[r++];
                switch (1 === r && (e = t[r], n = t[r + 1], i = e, a = n), o) {
                    case mS.M:
                        i = t[r++], a = t[r++], e = i, n = a, xS[0] = i, xS[1] = a, _S[0] = i, _S[1] = a;
                        break;
                    case mS.L:
                        Ia(e, n, t[r], t[r + 1], xS, _S), e = t[r++], n = t[r++];
                        break;
                    case mS.C:
                        Ma(e, n, t[r++], t[r++], t[r++], t[r++], t[r], t[r + 1], xS, _S), e = t[r++], n = t[r++];
                        break;
                    case mS.Q:
                        Da(e, n, t[r++], t[r++], t[r], t[r + 1], xS, _S), e = t[r++], n = t[r++];
                        break;
                    case mS.A:
                        var s = t[r++],
                            l = t[r++],
                            u = t[r++],
                            h = t[r++],
                            c = t[r++],
                            d = t[r++] + c;
                        r += 1;
                        var f = 1 - t[r++];
                        1 === r && (i = SS(c) * u + s, a = IS(c) * h + l), Ta(s, l, u, h, c, d, f, xS, _S), e = SS(d) * u + s, n = IS(d) * h + l;
                        break;
                    case mS.R:
                        i = e = t[r++], a = n = t[r++];
                        var g = t[r++],
                            p = t[r++];
                        Ia(i, a, i + g, a + p, xS, _S);
                        break;
                    case mS.Z:
                        e = i, n = a
                }
                oe(vS, vS, xS), se(yS, yS, _S)
            }
            return 0 === r && (vS[0] = vS[1] = yS[0] = yS[1] = 0), new bn(vS[0], vS[1], yS[0] - vS[0], yS[1] - vS[1])
        },
        rebuildPath: function(t) {
            for (var e, n, i, a, r, o, s = this.data, l = this._ux, u = this._uy, h = this._len, c = 0; h > c;) {
                var d = s[c++];
                switch (1 === c && (i = s[c], a = s[c + 1], e = i, n = a), d) {
                    case mS.M:
                        e = i = s[c++], n = a = s[c++], t.moveTo(i, a);
                        break;
                    case mS.L:
                        r = s[c++], o = s[c++], (DS(r - i) > l || DS(o - a) > u || c === h - 1) && (t.lineTo(r, o), i = r, a = o);
                        break;
                    case mS.C:
                        t.bezierCurveTo(s[c++], s[c++], s[c++], s[c++], s[c++], s[c++]), i = s[c - 2], a = s[c - 1];
                        break;
                    case mS.Q:
                        t.quadraticCurveTo(s[c++], s[c++], s[c++], s[c++]), i = s[c - 2], a = s[c - 1];
                        break;
                    case mS.A:
                        var f = s[c++],
                            g = s[c++],
                            p = s[c++],
                            m = s[c++],
                            v = s[c++],
                            y = s[c++],
                            x = s[c++],
                            _ = s[c++],
                            w = p > m ? p : m,
                            b = p > m ? 1 : p / m,
                            S = p > m ? m / p : 1,
                            I = Math.abs(p - m) > .001,
                            M = v + y;
                        I ? (t.translate(f, g), t.rotate(x), t.scale(b, S), t.arc(0, 0, w, v, M, 1 - _), t.scale(1 / b, 1 / S), t.rotate(-x), t.translate(-f, -g)) : t.arc(f, g, w, v, M, 1 - _), 1 === c && (e = SS(v) * p + f, n = IS(v) * m + g), i = SS(M) * p + f, a = IS(M) * m + g;
                        break;
                    case mS.R:
                        e = i = s[c], n = a = s[c + 1], t.rect(s[c++], s[c++], s[c++], s[c++]);
                        break;
                    case mS.Z:
                        t.closePath(), i = e, a = n
                }
            }
        }
    }, AS.CMD = mS;
    var CS = 2 * Math.PI,
        LS = 2 * Math.PI,
        PS = AS.CMD,
        kS = 2 * Math.PI,
        NS = 1e-4,
        OS = [-1, -1, -1],
        ES = [-1, -1],
        zS = Jw.prototype.getCanvasPattern,
        RS = Math.abs,
        BS = new AS(!0);
    Wa.prototype = {
        constructor: Wa,
        type: "path",
        __dirtyPath: !0,
        strokeContainThreshold: 5,
        segmentIgnoreThreshold: 0,
        subPixelOptimize: !1,
        brush: function(t, e) {
            var n = this.style,
                i = this.path || BS,
                a = n.hasStroke(),
                r = n.hasFill(),
                o = n.fill,
                s = n.stroke,
                l = r && !!o.colorStops,
                u = a && !!s.colorStops,
                h = r && !!o.image,
                c = a && !!s.image;
            if (n.bind(t, this, e), this.setTransform(t), this.__dirty) {
                var d;
                l && (d = d || this.getBoundingRect(), this._fillGradient = n.getGradient(t, o, d)), u && (d = d || this.getBoundingRect(), this._strokeGradient = n.getGradient(t, s, d))
            }
            l ? t.fillStyle = this._fillGradient : h && (t.fillStyle = zS.call(o, t)), u ? t.strokeStyle = this._strokeGradient : c && (t.strokeStyle = zS.call(s, t));
            var f = n.lineDash,
                g = n.lineDashOffset,
                p = !!t.setLineDash,
                m = this.getGlobalScale();
            if (i.setScale(m[0], m[1], this.segmentIgnoreThreshold), this.__dirtyPath || f && !p && a ? (i.beginPath(t), f && !p && (i.setLineDash(f), i.setLineDashOffset(g)), this.buildPath(i, this.shape, !1), this.path && (this.__dirtyPath = !1)) : (t.beginPath(), this.path.rebuildPath(t)), r)
                if (null != n.fillOpacity) {
                    var v = t.globalAlpha;
                    t.globalAlpha = n.fillOpacity * n.opacity, i.fill(t), t.globalAlpha = v
                } else i.fill(t);
            if (f && p && (t.setLineDash(f), t.lineDashOffset = g), a)
                if (null != n.strokeOpacity) {
                    var v = t.globalAlpha;
                    t.globalAlpha = n.strokeOpacity * n.opacity, i.stroke(t), t.globalAlpha = v
                } else i.stroke(t);
            f && p && t.setLineDash([]), null != n.text && (this.restoreTransform(t), this.drawRectText(t, this.getBoundingRect()))
        },
        buildPath: function() {},
        createPathProxy: function() { this.path = new AS },
        getBoundingRect: function() {
            var t = this._rect,
                e = this.style,
                n = !t;
            if (n) {
                var i = this.path;
                i || (i = this.path = new AS), this.__dirtyPath && (i.beginPath(), this.buildPath(i, this.shape, !1)), t = i.getBoundingRect()
            }
            if (this._rect = t, e.hasStroke()) {
                var a = this._rectWithStroke || (this._rectWithStroke = t.clone());
                if (this.__dirty || n) {
                    a.copy(t);
                    var r = e.lineWidth,
                        o = e.strokeNoScale ? this.getLineScale() : 1;
                    e.hasFill() || (r = Math.max(r, this.strokeContainThreshold || 4)), o > 1e-10 && (a.width += r / o, a.height += r / o, a.x -= r / o / 2, a.y -= r / o / 2)
                }
                return a
            }
            return t
        },
        contain: function(t, e) {
            var n = this.transformCoordToLocal(t, e),
                i = this.getBoundingRect(),
                a = this.style;
            if (t = n[0], e = n[1], i.contain(t, e)) {
                var r = this.path.data;
                if (a.hasStroke()) {
                    var o = a.lineWidth,
                        s = a.strokeNoScale ? this.getLineScale() : 1;
                    if (s > 1e-10 && (a.hasFill() || (o = Math.max(o, this.strokeContainThreshold)), Fa(r, o / s, t, e))) return !0
                }
                if (a.hasFill()) return Ga(r, t, e)
            }
            return !1
        },
        dirty: function(t) { null == t && (t = !0), t && (this.__dirtyPath = t, this._rect = null), this.__dirty = this.__dirtyText = !0, this.__zr && this.__zr.refresh(), this.__clipTarget && this.__clipTarget.dirty() },
        animateShape: function(t) { return this.animate("shape", t) },
        attrKV: function(t, e) { "shape" === t ? (this.setShape(e), this.__dirtyPath = !0, this._rect = null) : bi.prototype.attrKV.call(this, t, e) },
        setShape: function(t, e) {
            var n = this.shape;
            if (n) {
                if (S(t))
                    for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]);
                else n[t] = e;
                this.dirty(!0)
            }
            return this
        },
        getLineScale: function() { var t = this.transform; return t && RS(t[0] - 1) > 1e-10 && RS(t[3] - 1) > 1e-10 ? Math.sqrt(RS(t[0] * t[3] - t[2] * t[1])) : 1 }
    }, Wa.extend = function(t) {
        var e = function(e) {
            Wa.call(this, e), t.style && this.style.extendFrom(t.style, !1);
            var n = t.shape;
            if (n) { this.shape = this.shape || {}; var i = this.shape; for (var a in n) !i.hasOwnProperty(a) && n.hasOwnProperty(a) && (i[a] = n[a]) }
            t.init && t.init.call(this, e)
        };
        h(e, Wa);
        for (var n in t) "style" !== n && "shape" !== n && (e.prototype[n] = t[n]);
        return e
    }, h(Wa, bi);
    var VS = AS.CMD,
        GS = [
            [],
            [],
            []
        ],
        FS = Math.sqrt,
        WS = Math.atan2,
        HS = function(t, e) {
            var n, i, a, r, o, s, l = t.data,
                u = VS.M,
                h = VS.C,
                c = VS.L,
                d = VS.R,
                f = VS.A,
                g = VS.Q;
            for (a = 0, r = 0; a < l.length;) {
                switch (n = l[a++], r = a, i = 0, n) {
                    case u:
                        i = 1;
                        break;
                    case c:
                        i = 1;
                        break;
                    case h:
                        i = 3;
                        break;
                    case g:
                        i = 2;
                        break;
                    case f:
                        var p = e[4],
                            m = e[5],
                            v = FS(e[0] * e[0] + e[1] * e[1]),
                            y = FS(e[2] * e[2] + e[3] * e[3]),
                            x = WS(-e[1] / y, e[0] / v);
                        l[a] *= v, l[a++] += p, l[a] *= y, l[a++] += m, l[a++] *= v, l[a++] *= y, l[a++] += x, l[a++] += x, a += 2, r = a;
                        break;
                    case d:
                        s[0] = l[a++], s[1] = l[a++], re(s, s, e), l[r++] = s[0], l[r++] = s[1], s[0] += l[a++], s[1] += l[a++], re(s, s, e), l[r++] = s[0], l[r++] = s[1]
                }
                for (o = 0; i > o; o++) {
                    var s = GS[o];
                    s[0] = l[a++], s[1] = l[a++], re(s, s, e), l[r++] = s[0], l[r++] = s[1]
                }
            }
        },
        XS = Math.sqrt,
        YS = Math.sin,
        US = Math.cos,
        jS = Math.PI,
        ZS = function(t) { return Math.sqrt(t[0] * t[0] + t[1] * t[1]) },
        qS = function(t, e) { return (t[0] * e[0] + t[1] * e[1]) / (ZS(t) * ZS(e)) },
        KS = function(t, e) { return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(qS(t, e)) },
        $S = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi,
        JS = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g,
        QS = function(t) { bi.call(this, t) };
    QS.prototype = {
        constructor: QS,
        type: "text",
        brush: function(t, e) {
            var n = this.style;
            this.__dirty && ai(n, !0), n.fill = n.stroke = n.shadowBlur = n.shadowColor = n.shadowOffsetX = n.shadowOffsetY = null;
            var i = n.text;
            return null != i && (i += ""), wi(i, n) ? (this.setTransform(t), oi(this, t, i, n, null, e), void this.restoreTransform(t)) : void(t.__attrCachedBy = Yw.NONE)
        },
        getBoundingRect: function() {
            var t = this.style;
            if (this.__dirty && ai(t, !0), !this._rect) {
                var e = t.text;
                null != e ? e += "" : e = "";
                var n = Fn(t.text + "", t.font, t.textAlign, t.textVerticalAlign, t.textPadding, t.textLineHeight, t.rich);
                if (n.x += t.x || 0, n.y += t.y || 0, vi(t.textStroke, t.textStrokeWidth)) {
                    var i = t.textStrokeWidth;
                    n.x -= i / 2, n.y -= i / 2, n.width += i, n.height += i
                }
                this._rect = n
            }
            return this._rect
        }
    }, h(QS, bi);
    var tI = Wa.extend({ type: "circle", shape: { cx: 0, cy: 0, r: 0 }, buildPath: function(t, e, n) { n && t.moveTo(e.cx + e.r, e.cy), t.arc(e.cx, e.cy, e.r, 0, 2 * Math.PI, !0) } }),
        eI = [
            ["shadowBlur", 0],
            ["shadowColor", "#000"],
            ["shadowOffsetX", 0],
            ["shadowOffsetY", 0]
        ],
        nI = function(t) {
            return D_.browser.ie && D_.browser.version >= 11 ? function() {
                var e, n = this.__clipPaths,
                    i = this.style;
                if (n)
                    for (var a = 0; a < n.length; a++) {
                        var r = n[a],
                            o = r && r.shape,
                            s = r && r.type;
                        if (o && ("sector" === s && o.startAngle === o.endAngle || "rect" === s && (!o.width || !o.height))) {
                            for (var l = 0; l < eI.length; l++) eI[l][2] = i[eI[l][0]], i[eI[l][0]] = eI[l][1];
                            e = !0;
                            break
                        }
                    }
                if (t.apply(this, arguments), e)
                    for (var l = 0; l < eI.length; l++) i[eI[l][0]] = eI[l][2]
            } : t
        },
        iI = Wa.extend({
            type: "sector",
            shape: { cx: 0, cy: 0, r0: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0 },
            brush: nI(Wa.prototype.brush),
            buildPath: function(t, e) {
                var n = e.cx,
                    i = e.cy,
                    a = Math.max(e.r0 || 0, 0),
                    r = Math.max(e.r, 0),
                    o = e.startAngle,
                    s = e.endAngle,
                    l = e.clockwise,
                    u = Math.cos(o),
                    h = Math.sin(o);
                t.moveTo(u * a + n, h * a + i), t.lineTo(u * r + n, h * r + i), t.arc(n, i, r, o, s, !l), t.lineTo(Math.cos(s) * a + n, Math.sin(s) * a + i), 0 !== a && t.arc(n, i, a, s, o, l), t.closePath()
            }
        }),
        aI = Wa.extend({
            type: "ring",
            shape: { cx: 0, cy: 0, r: 0, r0: 0 },
            buildPath: function(t, e) {
                var n = e.cx,
                    i = e.cy,
                    a = 2 * Math.PI;
                t.moveTo(n + e.r, i), t.arc(n, i, e.r, 0, a, !1), t.moveTo(n + e.r0, i), t.arc(n, i, e.r0, 0, a, !0)
            }
        }),
        rI = function(t, e) {
            for (var n = t.length, i = [], a = 0, r = 1; n > r; r++) a += ee(t[r - 1], t[r]);
            var o = a / 2;
            o = n > o ? n : o;
            for (var r = 0; o > r; r++) {
                var s, l, u, h = r / (o - 1) * (e ? n : n - 1),
                    c = Math.floor(h),
                    d = h - c,
                    f = t[c % n];
                e ? (s = t[(c - 1 + n) % n], l = t[(c + 1) % n], u = t[(c + 2) % n]) : (s = t[0 === c ? c : c - 1], l = t[c > n - 2 ? n - 1 : c + 1], u = t[c > n - 3 ? n - 1 : c + 2]);
                var g = d * d,
                    p = d * g;
                i.push([qa(s[0], f[0], l[0], u[0], d, g, p), qa(s[1], f[1], l[1], u[1], d, g, p)])
            }
            return i
        },
        oI = function(t, e, n, i) {
            var a, r, o, s, l = [],
                u = [],
                h = [],
                c = [];
            if (i) {
                o = [1 / 0, 1 / 0], s = [-1 / 0, -1 / 0];
                for (var d = 0, f = t.length; f > d; d++) oe(o, o, t[d]), se(s, s, t[d]);
                oe(o, o, i[0]), se(s, s, i[1])
            }
            for (var d = 0, f = t.length; f > d; d++) {
                var g = t[d];
                if (n) a = t[d ? d - 1 : f - 1], r = t[(d + 1) % f];
                else {
                    if (0 === d || d === f - 1) { l.push(H(t[d])); continue }
                    a = t[d - 1], r = t[d + 1]
                }
                j(u, r, a), Q(u, u, e);
                var p = ee(g, a),
                    m = ee(g, r),
                    v = p + m;
                0 !== v && (p /= v, m /= v), Q(h, u, -p), Q(c, u, m);
                var y = Y([], g, h),
                    x = Y([], g, c);
                i && (se(y, y, o), oe(y, y, s), se(x, x, o), oe(x, x, s)), l.push(y), l.push(x)
            }
            return n && l.push(l.shift()), l
        },
        sI = Wa.extend({ type: "polygon", shape: { points: null, smooth: !1, smoothConstraint: null }, buildPath: function(t, e) { Ka(t, e, !0) } }),
        lI = Wa.extend({ type: "polyline", shape: { points: null, smooth: !1, smoothConstraint: null }, style: { stroke: "#000", fill: null }, buildPath: function(t, e) { Ka(t, e, !1) } }),
        uI = Math.round,
        hI = {},
        cI = Wa.extend({
            type: "rect",
            shape: { r: 0, x: 0, y: 0, width: 0, height: 0 },
            buildPath: function(t, e) {
                var n, i, a, r;
                this.subPixelOptimize ? (Ja(hI, e, this.style), n = hI.x, i = hI.y, a = hI.width, r = hI.height, hI.r = e.r, e = hI) : (n = e.x, i = e.y, a = e.width, r = e.height), e.r ? ii(t, e) : t.rect(n, i, a, r), t.closePath()
            }
        }),
        dI = {},
        fI = Wa.extend({
            type: "line",
            shape: { x1: 0, y1: 0, x2: 0, y2: 0, percent: 1 },
            style: { stroke: "#000", fill: null },
            buildPath: function(t, e) {
                var n, i, a, r;
                this.subPixelOptimize ? ($a(dI, e, this.style), n = dI.x1, i = dI.y1, a = dI.x2, r = dI.y2) : (n = e.x1, i = e.y1, a = e.x2, r = e.y2);
                var o = e.percent;
                0 !== o && (t.moveTo(n, i), 1 > o && (a = n * (1 - o) + a * o, r = i * (1 - o) + r * o), t.lineTo(a, r))
            },
            pointAt: function(t) { var e = this.shape; return [e.x1 * (1 - t) + e.x2 * t, e.y1 * (1 - t) + e.y2 * t] }
        }),
        gI = [],
        pI = Wa.extend({
            type: "bezier-curve",
            shape: { x1: 0, y1: 0, x2: 0, y2: 0, cpx1: 0, cpy1: 0, percent: 1 },
            style: { stroke: "#000", fill: null },
            buildPath: function(t, e) {
                var n = e.x1,
                    i = e.y1,
                    a = e.x2,
                    r = e.y2,
                    o = e.cpx1,
                    s = e.cpy1,
                    l = e.cpx2,
                    u = e.cpy2,
                    h = e.percent;
                0 !== h && (t.moveTo(n, i), null == l || null == u ? (1 > h && (wa(n, o, a, h, gI), o = gI[1], a = gI[2], wa(i, s, r, h, gI), s = gI[1], r = gI[2]), t.quadraticCurveTo(o, s, a, r)) : (1 > h && (pa(n, o, l, a, h, gI), o = gI[1], l = gI[2], a = gI[3], pa(i, s, u, r, h, gI), s = gI[1], u = gI[2], r = gI[3]), t.bezierCurveTo(o, s, l, u, a, r)))
            },
            pointAt: function(t) { return tr(this.shape, t, !1) },
            tangentAt: function(t) { var e = tr(this.shape, t, !0); return te(e, e) }
        }),
        mI = Wa.extend({
            type: "arc",
            shape: { cx: 0, cy: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0 },
            style: { stroke: "#000", fill: null },
            buildPath: function(t, e) {
                var n = e.cx,
                    i = e.cy,
                    a = Math.max(e.r, 0),
                    r = e.startAngle,
                    o = e.endAngle,
                    s = e.clockwise,
                    l = Math.cos(r),
                    u = Math.sin(r);
                t.moveTo(l * a + n, u * a + i), t.arc(n, i, a, r, o, !s)
            }
        }),
        vI = Wa.extend({
            type: "compound",
            shape: { paths: null },
            _updatePathDirty: function() {
                for (var t = this.__dirtyPath, e = this.shape.paths, n = 0; n < e.length; n++) t = t || e[n].__dirtyPath;
                this.__dirtyPath = t, this.__dirty = this.__dirty || t
            },
            beforeBrush: function() { this._updatePathDirty(); for (var t = this.shape.paths || [], e = this.getGlobalScale(), n = 0; n < t.length; n++) t[n].path || t[n].createPathProxy(), t[n].path.setScale(e[0], e[1], t[n].segmentIgnoreThreshold) },
            buildPath: function(t, e) { for (var n = e.paths || [], i = 0; i < n.length; i++) n[i].buildPath(t, n[i].shape, !0) },
            afterBrush: function() { for (var t = this.shape.paths || [], e = 0; e < t.length; e++) t[e].__dirtyPath = !1 },
            getBoundingRect: function() { return this._updatePathDirty(), Wa.prototype.getBoundingRect.call(this) }
        }),
        yI = function(t) { this.colorStops = t || [] };
    yI.prototype = { constructor: yI, addColorStop: function(t, e) { this.colorStops.push({ offset: t, color: e }) } };
    var xI = function(t, e, n, i, a, r) { this.x = null == t ? 0 : t, this.y = null == e ? 0 : e, this.x2 = null == n ? 1 : n, this.y2 = null == i ? 0 : i, this.type = "linear", this.global = r || !1, yI.call(this, a) };
    xI.prototype = { constructor: xI }, h(xI, yI);
    var _I = function(t, e, n, i, a) { this.x = null == t ? .5 : t, this.y = null == e ? .5 : e, this.r = null == n ? .5 : n, this.type = "radial", this.global = a || !1, yI.call(this, i) };
    _I.prototype = { constructor: _I }, h(_I, yI), er.prototype.incremental = !0, er.prototype.clearDisplaybles = function() { this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.dirty(), this.notClear = !1 }, er.prototype.addDisplayable = function(t, e) { e ? this._temporaryDisplayables.push(t) : this._displayables.push(t), this.dirty() }, er.prototype.addDisplayables = function(t, e) { e = e || !1; for (var n = 0; n < t.length; n++) this.addDisplayable(t[n], e) }, er.prototype.eachPendingDisplayable = function(t) { for (var e = this._cursor; e < this._displayables.length; e++) t && t(this._displayables[e]); for (var e = 0; e < this._temporaryDisplayables.length; e++) t && t(this._temporaryDisplayables[e]) }, er.prototype.update = function() {
        this.updateTransform();
        for (var t = this._cursor; t < this._displayables.length; t++) {
            var e = this._displayables[t];
            e.parent = this, e.update(), e.parent = null
        }
        for (var t = 0; t < this._temporaryDisplayables.length; t++) {
            var e = this._temporaryDisplayables[t];
            e.parent = this, e.update(), e.parent = null
        }
    }, er.prototype.brush = function(t) {
        for (var e = this._cursor; e < this._displayables.length; e++) {
            var n = this._displayables[e];
            n.beforeBrush && n.beforeBrush(t), n.brush(t, e === this._cursor ? null : this._displayables[e - 1]), n.afterBrush && n.afterBrush(t)
        }
        this._cursor = e;
        for (var e = 0; e < this._temporaryDisplayables.length; e++) {
            var n = this._temporaryDisplayables[e];
            n.beforeBrush && n.beforeBrush(t), n.brush(t, 0 === e ? null : this._temporaryDisplayables[e - 1]), n.afterBrush && n.afterBrush(t)
        }
        this._temporaryDisplayables = [], this.notClear = !0
    };
    var wI = [];
    er.prototype.getBoundingRect = function() {
        if (!this._rect) {
            for (var t = new bn(1 / 0, 1 / 0, -1 / 0, -1 / 0), e = 0; e < this._displayables.length; e++) {
                var n = this._displayables[e],
                    i = n.getBoundingRect().clone();
                n.needLocalTransform() && i.applyTransform(n.getLocalTransform(wI)), t.union(i)
            }
            this._rect = t
        }
        return this._rect
    }, er.prototype.contain = function(t, e) {
        var n = this.transformCoordToLocal(t, e),
            i = this.getBoundingRect();
        if (i.contain(n[0], n[1]))
            for (var a = 0; a < this._displayables.length; a++) { var r = this._displayables[a]; if (r.contain(t, e)) return !0 }
        return !1
    }, h(er, bi);
    var bI = Math.max,
        SI = Math.min,
        II = {},
        MI = 1,
        DI = { color: "textFill", textBorderColor: "textStroke", textBorderWidth: "textStrokeWidth" },
        TI = "emphasis",
        AI = "normal",
        CI = 1,
        LI = {},
        PI = {},
        kI = Za,
        NI = Qa,
        OI = B(),
        EI = 0;
    ar("circle", tI), ar("sector", iI), ar("ring", aI), ar("polygon", sI), ar("polyline", lI), ar("rect", cI), ar("line", fI), ar("bezierCurve", pI), ar("arc", mI);
    var zI = (Object.freeze || Object)({ Z2_EMPHASIS_LIFT: MI, CACHED_LABEL_STYLE_PROPERTIES: DI, extendShape: nr, extendPath: ir, registerShape: ar, getShapeClass: rr, makePath: or, makeImage: sr, mergePath: kI, resizePath: ur, subPixelOptimizeLine: hr, subPixelOptimizeRect: cr, subPixelOptimize: NI, setElementHoverStyle: xr, setHoverStyle: Mr, setAsHighDownDispatcher: Dr, isHighDownDispatcher: Tr, getHighlightDigit: Ar, setLabelStyle: Cr, modifyLabelStyle: Lr, setTextStyle: Pr, setText: kr, getFont: Vr, updateProps: Fr, initProps: Wr, getTransform: Hr, applyTransform: Xr, transformDirection: Yr, groupTransition: Ur, clipPointsByRect: jr, clipRectByRect: Zr, createIcon: qr, linePolygonIntersect: Kr, lineLineIntersect: $r, Group: Vw, Image: Si, Text: QS, Circle: tI, Sector: iI, Ring: aI, Polygon: sI, Polyline: lI, Rect: cI, Line: fI, BezierCurve: pI, Arc: mI, IncrementalDisplayable: er, CompoundPath: vI, LinearGradient: xI, RadialGradient: _I, BoundingRect: bn }),
        RI = ["textStyle", "color"],
        BI = { getTextColor: function(t) { var e = this.ecModel; return this.getShallow("color") || (!t && e ? e.get(RI) : null) }, getFont: function() { return Vr({ fontStyle: this.getShallow("fontStyle"), fontWeight: this.getShallow("fontWeight"), fontSize: this.getShallow("fontSize"), fontFamily: this.getShallow("fontFamily") }, this.ecModel) }, getTextRect: function(t) { return Fn(t, this.getFont(), this.getShallow("align"), this.getShallow("verticalAlign") || this.getShallow("baseline"), this.getShallow("padding"), this.getShallow("lineHeight"), this.getShallow("rich"), this.getShallow("truncateText")) } },
        VI = Ub([
            ["fill", "color"],
            ["stroke", "borderColor"],
            ["lineWidth", "borderWidth"],
            ["opacity"],
            ["shadowBlur"],
            ["shadowOffsetX"],
            ["shadowOffsetY"],
            ["shadowColor"],
            ["textPosition"],
            ["textAlign"]
        ]),
        GI = {
            getItemStyle: function(t, e) {
                var n = VI(this, t, e),
                    i = this.getBorderLineDash();
                return i && (n.lineDash = i), n
            },
            getBorderLineDash: function() { var t = this.get("borderType"); return "solid" === t || null == t ? null : "dashed" === t ? [5, 5] : [1, 1] }
        },
        FI = c,
        WI = qi();
    to.prototype = {
        constructor: to,
        init: null,
        mergeOption: function(t) { a(this.option, t, !0) },
        get: function(t, e) { return null == t ? this.option : eo(this.option, this.parsePath(t), !e && no(this, t)) },
        getShallow: function(t, e) {
            var n = this.option,
                i = null == n ? n : n[t],
                a = !e && no(this, t);
            return null == i && a && (i = a.getShallow(t)), i
        },
        getModel: function(t, e) { var n, i = null == t ? this.option : eo(this.option, t = this.parsePath(t)); return e = e || (n = no(this, t)) && n.getModel(t), new to(i, e, this.ecModel) },
        isEmpty: function() { return null == this.option },
        restoreData: function() {},
        clone: function() { var t = this.constructor; return new t(i(this.option)) },
        setReadOnly: function() {},
        parsePath: function(t) { return "string" == typeof t && (t = t.split(".")), t },
        customizeGetParent: function(t) { WI(this).getParent = t },
        isAnimationEnabled: function() { if (!D_.node) { if (null != this.option.animation) return !!this.option.animation; if (this.parentModel) return this.parentModel.isAnimationEnabled() } }
    }, aa(to), ra(to), FI(to, Zb), FI(to, Kb), FI(to, BI), FI(to, GI);
    var HI = 0,
        XI = 1e-4,
        YI = 9007199254740991,
        UI = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/,
        jI = (Object.freeze || Object)({ linearMap: so, parsePercent: lo, round: uo, asc: ho, getPrecision: co, getPrecisionSafe: fo, getPixelPrecision: go, getPercentWithPrecision: po, MAX_SAFE_INTEGER: YI, remRadian: mo, isRadianAroundZero: vo, parseDate: yo, quantity: xo, quantityExponent: _o, nice: wo, quantile: bo, reformIntervals: So, isNumeric: Io }),
        ZI = k,
        qI = /([&<>"'])/g,
        KI = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" },
        $I = ["a", "b", "c", "d", "e", "f", "g"],
        JI = function(t, e) { return "{" + t + (null == e ? "" : e) + "}" },
        QI = jn,
        tM = (Object.freeze || Object)({ addCommas: Mo, toCamelCase: Do, normalizeCssArray: ZI, encodeHTML: To, formatTpl: Ao, formatTplSimple: Co, getTooltipMarker: Lo, formatTime: ko, capitalFirst: No, truncateText: QI, getTextBoundingRect: Oo, getTextRect: Eo }),
        eM = f,
        nM = ["left", "right", "top", "bottom", "width", "height"],
        iM = [
            ["width", "left", "right"],
            ["height", "top", "bottom"]
        ],
        aM = zo,
        rM = (x(zo, "vertical"), x(zo, "horizontal"), { getBoxLayoutParams: function() { return { left: this.get("left"), top: this.get("top"), right: this.get("right"), bottom: this.get("bottom"), width: this.get("width"), height: this.get("height") } } }),
        oM = qi(),
        sM = to.extend({
            type: "component",
            id: "",
            name: "",
            mainType: "",
            subType: "",
            componentIndex: 0,
            defaultOption: null,
            ecModel: null,
            dependentModels: [],
            uid: null,
            layoutMode: null,
            $constructor: function(t, e, n, i) { to.call(this, t, e, n, i), this.uid = io("ec_cpt_model") },
            init: function(t, e, n) { this.mergeDefaultAndTheme(t, n) },
            mergeDefaultAndTheme: function(t, e) {
                var n = this.layoutMode,
                    i = n ? Wo(t) : {},
                    r = e.getTheme();
                a(t, r.get(this.mainType)), a(t, this.getDefaultOption()), n && Fo(t, i, n)
            },
            mergeOption: function(t) {
                a(this.option, t, !0);
                var e = this.layoutMode;
                e && Fo(this.option, t, e)
            },
            optionUpdated: function() {},
            getDefaultOption: function() {
                var t = oM(this);
                if (!t.defaultOption) {
                    for (var e = [], n = this.constructor; n;) {
                        var i = n.prototype.defaultOption;
                        i && e.push(i), n = n.superClass
                    }
                    for (var r = {}, o = e.length - 1; o >= 0; o--) r = a(r, e[o], !0);
                    t.defaultOption = r
                }
                return t.defaultOption
            },
            getReferringComponents: function(t) { return this.ecModel.queryComponents({ mainType: t, index: this.get(t + "Index", !0), id: this.get(t + "Id", !0) }) }
        });
    la(sM, { registerWhenExtend: !0 }), ao(sM), ro(sM, Xo), c(sM, rM);
    var lM = "";
    "undefined" != typeof navigator && (lM = navigator.platform || "");
    var uM = { color: ["#c23531", "#2f4554", "#61a0a8", "#d48265", "#91c7ae", "#749f83", "#ca8622", "#bda29a", "#6e7074", "#546570", "#c4ccd3"], gradientColor: ["#f6efa6", "#d88273", "#bf444c"], textStyle: { fontFamily: lM.match(/^Win/) ? "Microsoft YaHei" : "sans-serif", fontSize: 12, fontStyle: "normal", fontWeight: "normal" }, blendMode: null, animation: "auto", animationDuration: 1e3, animationDurationUpdate: 300, animationEasing: "exponentialOut", animationEasingUpdate: "cubicOut", animationThreshold: 2e3, progressiveThreshold: 3e3, progressive: 400, hoverLayerThreshold: 3e3, useUTC: !1 },
        hM = qi(),
        cM = {
            clearColorPalette: function() { hM(this).colorIdx = 0, hM(this).colorNameMap = {} },
            getColorFromPalette: function(t, e, n) {
                e = e || this;
                var i = hM(e),
                    a = i.colorIdx || 0,
                    r = i.colorNameMap = i.colorNameMap || {};
                if (r.hasOwnProperty(t)) return r[t];
                var o = Gi(this.get("color", !0)),
                    s = this.get("colorLayer", !0),
                    l = null != n && s ? Yo(s, n) : o;
                if (l = l || o, l && l.length) { var u = l[a]; return t && (r[t] = u), i.colorIdx = (a + 1) % l.length, u }
            }
        },
        dM = {
            cartesian2d: function(t, e, n, i) {
                var a = t.getReferringComponents("xAxis")[0],
                    r = t.getReferringComponents("yAxis")[0];
                e.coordSysDims = ["x", "y"], n.set("x", a), n.set("y", r), jo(a) && (i.set("x", a), e.firstCategoryDimIndex = 0), jo(r) && (i.set("y", r), e.firstCategoryDimIndex = 1)
            },
            singleAxis: function(t, e, n, i) {
                var a = t.getReferringComponents("singleAxis")[0];
                e.coordSysDims = ["single"], n.set("single", a), jo(a) && (i.set("single", a), e.firstCategoryDimIndex = 0)
            },
            polar: function(t, e, n, i) {
                var a = t.getReferringComponents("polar")[0],
                    r = a.findAxisModel("radiusAxis"),
                    o = a.findAxisModel("angleAxis");
                e.coordSysDims = ["radius", "angle"], n.set("radius", r), n.set("angle", o), jo(r) && (i.set("radius", r), e.firstCategoryDimIndex = 0), jo(o) && (i.set("angle", o), e.firstCategoryDimIndex = 1)
            },
            geo: function(t, e) { e.coordSysDims = ["lng", "lat"] },
            parallel: function(t, e, n, i) {
                var a = t.ecModel,
                    r = a.getComponent("parallel", t.get("parallelIndex")),
                    o = e.coordSysDims = r.dimensions.slice();
                f(r.parallelAxisIndex, function(t, r) {
                    var s = a.getComponent("parallelAxis", t),
                        l = o[r];
                    n.set(l, s), jo(s) && null == e.firstCategoryDimIndex && (i.set(l, s), e.firstCategoryDimIndex = r)
                })
            }
        },
        fM = "original",
        gM = "arrayRows",
        pM = "objectRows",
        mM = "keyedColumns",
        vM = "unknown",
        yM = "typedArray",
        xM = "column",
        _M = "row";
    Zo.seriesDataToSource = function(t) { return new Zo({ data: t, sourceFormat: M(t) ? yM : fM, fromDataset: !1 }) }, ra(Zo);
    var wM = qi(),
        bM = "\x00_ec_inner",
        SM = to.extend({
            init: function(t, e, n, i) { n = n || {}, this.option = null, this._theme = new to(n), this._optionManager = i },
            setOption: function(t, e) { N(!(bM in t), "please use chart.getOption()"), this._optionManager.setOption(t, e), this.resetOption(null) },
            resetOption: function(t) {
                var e = !1,
                    n = this._optionManager;
                if (!t || "recreate" === t) {
                    var i = n.mountOption("recreate" === t);
                    this.option && "recreate" !== t ? (this.restoreData(), this.mergeOption(i)) : us.call(this, i), e = !0
                }
                if (("timeline" === t || "media" === t) && this.restoreData(), !t || "recreate" === t || "timeline" === t) {
                    var a = n.getTimelineOption(this);
                    a && (this.mergeOption(a), e = !0)
                }
                if (!t || "recreate" === t || "media" === t) {
                    var r = n.getMediaOption(this, this._api);
                    r.length && f(r, function(t) { this.mergeOption(t, e = !0) }, this)
                }
                return e
            },
            mergeOption: function(t) {
                function e(e, i) {
                    var a = Gi(t[e]),
                        s = Xi(r.get(e), a);
                    Yi(s), f(s, function(t) {
                        var n = t.option;
                        S(n) && (t.keyInfo.mainType = e, t.keyInfo.subType = cs(e, n, t.exist))
                    });
                    var l = hs(r, i);
                    n[e] = [], r.set(e, []), f(s, function(t, i) {
                        var a = t.exist,
                            s = t.option;
                        if (N(S(s) || a, "Empty component definition"), s) {
                            var u = sM.getClass(e, t.keyInfo.subType, !0);
                            if (a && a.constructor === u) a.name = t.keyInfo.name, a.mergeOption(s, this), a.optionUpdated(s, !1);
                            else {
                                var h = o({ dependentModels: l, componentIndex: i }, t.keyInfo);
                                a = new u(s, this, this, h), o(a, h), a.init(s, this, this, h), a.optionUpdated(null, !0)
                            }
                        } else a.mergeOption({}, this), a.optionUpdated({}, !1);
                        r.get(e)[i] = a, n[e][i] = a.option
                    }, this), "series" === e && ds(this, r.get("series"))
                }
                var n = this.option,
                    r = this._componentsMap,
                    s = [];
                $o(this), f(t, function(t, e) { null != t && (sM.hasClass(e) ? e && s.push(e) : n[e] = null == n[e] ? i(t) : a(n[e], t, !0)) }), sM.topologicalTravel(s, sM.getAllClassMainTypes(), e, this), this._seriesIndicesMap = B(this._seriesIndices = this._seriesIndices || [])
            },
            getOption: function() {
                var t = i(this.option);
                return f(t, function(e, n) {
                    if (sM.hasClass(n)) {
                        for (var e = Gi(e), i = e.length - 1; i >= 0; i--) ji(e[i]) && e.splice(i, 1);
                        t[n] = e
                    }
                }), delete t[bM], t
            },
            getTheme: function() { return this._theme },
            getComponent: function(t, e) { var n = this._componentsMap.get(t); return n ? n[e || 0] : void 0 },
            queryComponents: function(t) {
                var e = t.mainType;
                if (!e) return [];
                var n = t.index,
                    i = t.id,
                    a = t.name,
                    r = this._componentsMap.get(e);
                if (!r || !r.length) return [];
                var o;
                if (null != n) _(n) || (n = [n]), o = m(g(n, function(t) { return r[t] }), function(t) { return !!t });
                else if (null != i) {
                    var s = _(i);
                    o = m(r, function(t) { return s && u(i, t.id) >= 0 || !s && t.id === i })
                } else if (null != a) {
                    var l = _(a);
                    o = m(r, function(t) { return l && u(a, t.name) >= 0 || !l && t.name === a })
                } else o = r.slice();
                return fs(o, t)
            },
            findComponents: function(t) {
                function e(t) {
                    var e = a + "Index",
                        n = a + "Id",
                        i = a + "Name";
                    return !t || null == t[e] && null == t[n] && null == t[i] ? null : { mainType: a, index: t[e], id: t[n], name: t[i] }
                }

                function n(e) { return t.filter ? m(e, t.filter) : e }
                var i = t.query,
                    a = t.mainType,
                    r = e(i),
                    o = r ? this.queryComponents(r) : this._componentsMap.get(a);
                return n(fs(o, t))
            },
            eachComponent: function(t, e, n) {
                var i = this._componentsMap;
                if ("function" == typeof t) n = e, e = t, i.each(function(t, i) { f(t, function(t, a) { e.call(n, i, t, a) }) });
                else if (b(t)) f(i.get(t), e, n);
                else if (S(t)) {
                    var a = this.findComponents(t);
                    f(a, e, n)
                }
            },
            getSeriesByName: function(t) { var e = this._componentsMap.get("series"); return m(e, function(e) { return e.name === t }) },
            getSeriesByIndex: function(t) { return this._componentsMap.get("series")[t] },
            getSeriesByType: function(t) { var e = this._componentsMap.get("series"); return m(e, function(e) { return e.subType === t }) },
            getSeries: function() { return this._componentsMap.get("series").slice() },
            getSeriesCount: function() { return this._componentsMap.get("series").length },
            eachSeries: function(t, e) {
                f(this._seriesIndices, function(n) {
                    var i = this._componentsMap.get("series")[n];
                    t.call(e, i, n)
                }, this)
            },
            eachRawSeries: function(t, e) { f(this._componentsMap.get("series"), t, e) },
            eachSeriesByType: function(t, e, n) {
                f(this._seriesIndices, function(i) {
                    var a = this._componentsMap.get("series")[i];
                    a.subType === t && e.call(n, a, i)
                }, this)
            },
            eachRawSeriesByType: function(t, e, n) { return f(this.getSeriesByType(t), e, n) },
            isSeriesFiltered: function(t) { return null == this._seriesIndicesMap.get(t.componentIndex) },
            getCurrentSeriesIndices: function() { return (this._seriesIndices || []).slice() },
            filterSeries: function(t, e) {
                var n = m(this._componentsMap.get("series"), t, e);
                ds(this, n)
            },
            restoreData: function(t) {
                var e = this._componentsMap;
                ds(this, e.get("series"));
                var n = [];
                e.each(function(t, e) { n.push(e) }), sM.topologicalTravel(n, sM.getAllClassMainTypes(), function(n) {
                    f(e.get(n), function(e) {
                        ("series" !== n || !ss(e, t)) && e.restoreData()
                    })
                })
            }
        });
    c(SM, cM);
    var IM = ["getDom", "getZr", "getWidth", "getHeight", "getDevicePixelRatio", "dispatchAction", "isDisposed", "on", "off", "getDataURL", "getConnectedDataURL", "getModel", "getOption", "getViewOfComponentModel", "getViewOfSeriesModel"],
        MM = {};
    ps.prototype = {
        constructor: ps,
        create: function(t, e) {
            var n = [];
            f(MM, function(i) {
                var a = i.create(t, e);
                n = n.concat(a || [])
            }), this._coordinateSystems = n
        },
        update: function(t, e) { f(this._coordinateSystems, function(n) { n.update && n.update(t, e) }) },
        getCoordinateSystems: function() { return this._coordinateSystems.slice() }
    }, ps.register = function(t, e) { MM[t] = e }, ps.get = function(t) { return MM[t] };
    var DM = f,
        TM = i,
        AM = g,
        CM = a,
        LM = /^(min|max)?(.+)$/;
    ms.prototype = {
        constructor: ms,
        setOption: function(t, e) {
            t && f(Gi(t.series), function(t) { t && t.data && M(t.data) && E(t.data) }), t = TM(t);
            var n = this._optionBackup,
                i = vs.call(this, t, e, !n);
            this._newBaseOption = i.baseOption, n ? (ws(n.baseOption, i.baseOption), i.timelineOptions.length && (n.timelineOptions = i.timelineOptions), i.mediaList.length && (n.mediaList = i.mediaList), i.mediaDefault && (n.mediaDefault = i.mediaDefault)) : this._optionBackup = i
        },
        mountOption: function(t) { var e = this._optionBackup; return this._timelineOptions = AM(e.timelineOptions, TM), this._mediaList = AM(e.mediaList, TM), this._mediaDefault = TM(e.mediaDefault), this._currentMediaIndices = [], TM(t ? e.baseOption : this._newBaseOption) },
        getTimelineOption: function(t) {
            var e, n = this._timelineOptions;
            if (n.length) {
                var i = t.getComponent("timeline");
                i && (e = TM(n[i.getCurrentIndex()], !0))
            }
            return e
        },
        getMediaOption: function() {
            var t = this._api.getWidth(),
                e = this._api.getHeight(),
                n = this._mediaList,
                i = this._mediaDefault,
                a = [],
                r = [];
            if (!n.length && !i) return r;
            for (var o = 0, s = n.length; s > o; o++) ys(n[o].query, t, e) && a.push(o);
            return !a.length && i && (a = [-1]), a.length && !_s(a, this._currentMediaIndices) && (r = AM(a, function(t) { return TM(-1 === t ? i.option : n[t].option) })), this._currentMediaIndices = a, r
        }
    };
    var PM = f,
        kM = S,
        NM = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"],
        OM = function(t, e) {
            PM(As(t.series), function(t) { kM(t) && Ts(t) });
            var n = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
            e && n.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), PM(n, function(e) { PM(As(t[e]), function(t) { t && (Ms(t, "axisLabel"), Ms(t.axisPointer, "label")) }) }), PM(As(t.parallel), function(t) {
                var e = t && t.parallelAxisDefault;
                Ms(e, "axisLabel"), Ms(e && e.axisPointer, "label")
            }), PM(As(t.calendar), function(t) { Ss(t, "itemStyle"), Ms(t, "dayLabel"), Ms(t, "monthLabel"), Ms(t, "yearLabel") }), PM(As(t.radar), function(t) { Ms(t, "name") }), PM(As(t.geo), function(t) { kM(t) && (Ds(t), PM(As(t.regions), function(t) { Ds(t) })) }), PM(As(t.timeline), function(t) {
                Ds(t), Ss(t, "label"), Ss(t, "itemStyle"), Ss(t, "controlStyle", !0);
                var e = t.data;
                _(e) && f(e, function(t) { S(t) && (Ss(t, "label"), Ss(t, "itemStyle")) })
            }), PM(As(t.toolbox), function(t) { Ss(t, "iconStyle"), PM(t.feature, function(t) { Ss(t, "iconStyle") }) }), Ms(Cs(t.axisPointer), "label"), Ms(Cs(t.tooltip).axisPointer, "label")
        },
        EM = [
            ["x", "left"],
            ["y", "top"],
            ["x2", "right"],
            ["y2", "bottom"]
        ],
        zM = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"],
        RM = function(t, e) {
            OM(t, e), t.series = Gi(t.series), f(t.series, function(t) {
                if (S(t)) {
                    var e = t.type;
                    if ("line" === e) null != t.clipOverflow && (t.clip = t.clipOverflow);
                    else if ("pie" === e || "gauge" === e) null != t.clockWise && (t.clockwise = t.clockWise);
                    else if ("gauge" === e) {
                        var n = Ls(t, "pointer.color");
                        null != n && Ps(t, "itemStyle.color", n)
                    }
                    ks(t)
                }
            }), t.dataRange && (t.visualMap = t.dataRange), f(zM, function(e) {
                var n = t[e];
                n && (_(n) || (n = [n]), f(n, function(t) { ks(t) }))
            })
        },
        BM = function(t) {
            var e = B();
            t.eachSeries(function(t) {
                var n = t.get("stack");
                if (n) {
                    var i = e.get(n) || e.set(n, []),
                        a = t.getData(),
                        r = { stackResultDimension: a.getCalculationInfo("stackResultDimension"), stackedOverDimension: a.getCalculationInfo("stackedOverDimension"), stackedDimension: a.getCalculationInfo("stackedDimension"), stackedByDimension: a.getCalculationInfo("stackedByDimension"), isStackedByIndex: a.getCalculationInfo("isStackedByIndex"), data: a, seriesModel: t };
                    if (!r.stackedDimension || !r.isStackedByIndex && !r.stackedByDimension) return;
                    i.length && a.setCalculationInfo("stackedOnSeries", i[i.length - 1].seriesModel), i.push(r)
                }
            }), e.each(Ns)
        },
        VM = Os.prototype;
    VM.pure = !1, VM.persistent = !0, VM.getSource = function() { return this._source };
    var GM = {
            arrayRows_column: { pure: !0, count: function() { return Math.max(0, this._data.length - this._source.startIndex) }, getItem: function(t) { return this._data[t + this._source.startIndex] }, appendData: Rs },
            arrayRows_row: {
                pure: !0,
                count: function() { var t = this._data[0]; return t ? Math.max(0, t.length - this._source.startIndex) : 0 },
                getItem: function(t) {
                    t += this._source.startIndex;
                    for (var e = [], n = this._data, i = 0; i < n.length; i++) {
                        var a = n[i];
                        e.push(a ? a[t] : null)
                    }
                    return e
                },
                appendData: function() { throw new Error('Do not support appendData when set seriesLayoutBy: "row".') }
            },
            objectRows: { pure: !0, count: Es, getItem: zs, appendData: Rs },
            keyedColumns: {
                pure: !0,
                count: function() {
                    var t = this._source.dimensionsDefine[0].name,
                        e = this._data[t];
                    return e ? e.length : 0
                },
                getItem: function(t) {
                    for (var e = [], n = this._source.dimensionsDefine, i = 0; i < n.length; i++) {
                        var a = this._data[n[i].name];
                        e.push(a ? a[t] : null)
                    }
                    return e
                },
                appendData: function(t) {
                    var e = this._data;
                    f(t, function(t, n) { for (var i = e[n] || (e[n] = []), a = 0; a < (t || []).length; a++) i.push(t[a]) })
                }
            },
            original: { count: Es, getItem: zs, appendData: Rs },
            typedArray: { persistent: !1, pure: !0, count: function() { return this._data ? this._data.length / this._dimSize : 0 }, getItem: function(t, e) { t -= this._offset, e = e || []; for (var n = this._dimSize * t, i = 0; i < this._dimSize; i++) e[i] = this._data[n + i]; return e }, appendData: function(t) { this._data = t }, clean: function() { this._offset += this.count(), this._data = null } }
        },
        FM = { arrayRows: Bs, objectRows: function(t, e, n, i) { return null != n ? t[i] : t }, keyedColumns: Bs, original: function(t, e, n) { var i = Wi(t); return null != n && i instanceof Array ? i[n] : i }, typedArray: Bs },
        WM = { arrayRows: Vs, objectRows: function(t, e) { return Gs(t[e], this._dimensionInfos[e]) }, keyedColumns: Vs, original: function(t, e, n, i) { var a = t && (null == t.value ? t : t.value); return !this._rawData.pure && Hi(t) && (this.hasItemOption = !0), Gs(a instanceof Array ? a[i] : a, this._dimensionInfos[e]) }, typedArray: function(t, e, n, i) { return t[i] } },
        HM = /\{@(.+?)\}/g,
        XM = {
            getDataParams: function(t, e) {
                var n = this.getData(e),
                    i = this.getRawValue(t, e),
                    a = n.getRawIndex(t),
                    r = n.getName(t),
                    o = n.getRawDataItem(t),
                    s = n.getItemVisual(t, "color"),
                    l = n.getItemVisual(t, "borderColor"),
                    u = this.ecModel.getComponent("tooltip"),
                    h = u && u.get("renderMode"),
                    c = ta(h),
                    d = this.mainType,
                    f = "series" === d,
                    g = n.userOutput;
                return { componentType: d, componentSubType: this.subType, componentIndex: this.componentIndex, seriesType: f ? this.subType : null, seriesIndex: this.seriesIndex, seriesId: f ? this.id : null, seriesName: f ? this.name : null, name: r, dataIndex: a, data: o, dataType: e, value: i, color: s, borderColor: l, dimensionNames: g ? g.dimensionNames : null, encode: g ? g.encode : null, marker: Lo({ color: s, renderMode: c }), $vars: ["seriesName", "name", "value"] }
            },
            getFormattedLabel: function(t, e, n, i, a) {
                e = e || "normal";
                var r = this.getData(n),
                    o = r.getItemModel(t),
                    s = this.getDataParams(t, n);
                null != i && s.value instanceof Array && (s.value = s.value[i]);
                var l = o.get("normal" === e ? [a || "label", "formatter"] : [e, a || "label", "formatter"]);
                if ("function" == typeof l) return s.status = e, s.dimensionIndex = i, l(s);
                if ("string" == typeof l) { var u = Ao(l, s); return u.replace(HM, function(e, n) { var i = n.length; return "[" === n.charAt(0) && "]" === n.charAt(i - 1) && (n = +n.slice(1, i - 1)), Fs(r, t, n) }) }
            },
            getRawValue: function(t, e) { return Fs(this.getData(e), t) },
            formatTooltip: function() {}
        },
        YM = Xs.prototype;
    YM.perform = function(t) {
        function e(t) { return !(t >= 1) && (t = 1), t }
        var n = this._upstream,
            i = t && t.skip;
        if (this._dirty && n) {
            var a = this.context;
            a.data = a.outputData = n.context.outputData
        }
        this.__pipeline && (this.__pipeline.currentTask = this);
        var r;
        this._plan && !i && (r = this._plan(this.context));
        var o = e(this._modBy),
            s = this._modDataCount || 0,
            l = e(t && t.modBy),
            u = t && t.modDataCount || 0;
        (o !== l || s !== u) && (r = "reset");
        var h;
        (this._dirty || "reset" === r) && (this._dirty = !1, h = Us(this, i)), this._modBy = l, this._modDataCount = u;
        var c = t && t.step;
        if (this._dueEnd = n ? n._outputDueEnd : this._count ? this._count(this.context) : 1 / 0, this._progress) {
            var d = this._dueIndex,
                f = Math.min(null != c ? this._dueIndex + c : 1 / 0, this._dueEnd);
            if (!i && (h || f > d)) {
                var g = this._progress;
                if (_(g))
                    for (var p = 0; p < g.length; p++) Ys(this, g[p], d, f, l, u);
                else Ys(this, g, d, f, l, u)
            }
            this._dueIndex = f;
            var m = null != this._settedOutputEnd ? this._settedOutputEnd : f;
            this._outputDueEnd = m
        } else this._dueIndex = this._outputDueEnd = null != this._settedOutputEnd ? this._settedOutputEnd : this._dueEnd;
        return this.unfinished()
    };
    var UM = function() {
        function t() { return n > i ? i++ : null }

        function e() {
            var t = i % o * a + Math.ceil(i / o),
                e = i >= n ? null : r > t ? t : i;
            return i++, e
        }
        var n, i, a, r, o, s = { reset: function(l, u, h, c) { i = l, n = u, a = h, r = c, o = Math.ceil(r / a), s.next = a > 1 && r > 0 ? e : t } };
        return s
    }();
    YM.dirty = function() { this._dirty = !0, this._onDirty && this._onDirty(this.context) }, YM.unfinished = function() { return this._progress && this._dueIndex < this._dueEnd }, YM.pipe = function(t) {
        (this._downstream !== t || this._dirty) && (this._downstream = t, t._upstream = this, t.dirty())
    }, YM.dispose = function() { this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0) }, YM.getUpstream = function() { return this._upstream }, YM.getDownstream = function() { return this._downstream }, YM.setOutputEnd = function(t) { this._outputDueEnd = this._settedOutputEnd = t };
    var jM = qi(),
        ZM = sM.extend({
            type: "series.__base__",
            seriesIndex: 0,
            coordinateSystem: null,
            defaultOption: null,
            legendDataProvider: null,
            visualColorAccessPath: "itemStyle.color",
            visualBorderColorAccessPath: "itemStyle.borderColor",
            layoutMode: null,
            init: function(t, e, n) {
                this.seriesIndex = this.componentIndex, this.dataTask = Hs({ count: qs, reset: Ks }), this.dataTask.context = { model: this }, this.mergeDefaultAndTheme(t, n), Jo(this);
                var i = this.getInitialData(t, n);
                Js(i, this), this.dataTask.context.data = i, jM(this).dataBeforeProcessed = i, js(this)
            },
            mergeDefaultAndTheme: function(t, e) {
                var n = this.layoutMode,
                    i = n ? Wo(t) : {},
                    r = this.subType;
                sM.hasClass(r) && (r += "Series"), a(t, e.getTheme().get(this.subType)), a(t, this.getDefaultOption()), Fi(t, "label", ["show"]), this.fillDataTextStyle(t.data), n && Fo(t, i, n)
            },
            mergeOption: function(t, e) {
                t = a(this.option, t, !0), this.fillDataTextStyle(t.data);
                var n = this.layoutMode;
                n && Fo(this.option, t, n), Jo(this);
                var i = this.getInitialData(t, e);
                Js(i, this), this.dataTask.dirty(), this.dataTask.context.data = i, jM(this).dataBeforeProcessed = i, js(this)
            },
            fillDataTextStyle: function(t) {
                if (t && !M(t))
                    for (var e = ["show"], n = 0; n < t.length; n++) t[n] && t[n].label && Fi(t[n], "label", e)
            },
            getInitialData: function() {},
            appendData: function(t) {
                var e = this.getRawData();
                e.appendData(t.data)
            },
            getData: function(t) { var e = tl(this); if (e) { var n = e.context.data; return null == t ? n : n.getLinkedData(t) } return jM(this).data },
            setData: function(t) {
                var e = tl(this);
                if (e) {
                    var n = e.context;
                    n.data !== t && e.modifyOutputEnd && e.setOutputEnd(t.count()), n.outputData = t, e !== this.dataTask && (n.data = t)
                }
                jM(this).data = t
            },
            getSource: function() { return Ko(this) },
            getRawData: function() { return jM(this).dataBeforeProcessed },
            getBaseAxis: function() { var t = this.coordinateSystem; return t && t.getBaseAxis && t.getBaseAxis() },
            formatTooltip: function(t, e, n, i) {
                function a(n) {
                    function a(t, n) {
                        var a = c.getDimensionInfo(n);
                        if (a && a.otherDims.tooltip !== !1) {
                            var d = a.type,
                                f = "sub" + o.seriesIndex + "at" + h,
                                g = Lo({ color: y, type: "subItem", renderMode: i, markerId: f }),
                                p = "string" == typeof g ? g : g.content,
                                m = (r ? p + To(a.displayName || "-") + ": " : "") + To("ordinal" === d ? t + "" : "time" === d ? e ? "" : ko("yyyy/MM/dd hh:mm:ss", t) : Mo(t));
                            m && s.push(m), l && (u[f] = y, ++h)
                        }
                    }
                    var r = p(n, function(t, e, n) { var i = c.getDimensionInfo(n); return t |= i && i.tooltip !== !1 && null != i.displayName }, 0),
                        s = [];
                    d.length ? f(d, function(e) { a(Fs(c, t, e), e) }) : f(n, a);
                    var g = r ? l ? "\n" : "<br/>" : "",
                        m = g + s.join(g || ", ");
                    return { renderMode: i, content: m, style: u }
                }

                function r(t) { return { renderMode: i, content: To(Mo(t)), style: u } }
                var o = this;
                i = i || "html";
                var s = "html" === i ? "<br/>" : "\n",
                    l = "richText" === i,
                    u = {},
                    h = 0,
                    c = this.getData(),
                    d = c.mapDimension("defaultedTooltip", !0),
                    g = d.length,
                    m = this.getRawValue(t),
                    v = _(m),
                    y = c.getItemVisual(t, "color");
                S(y) && y.colorStops && (y = (y.colorStops[0] || {}).color), y = y || "transparent";
                var x = g > 1 || v && !g ? a(m) : r(g ? Fs(c, t, d[0]) : v ? m[0] : m),
                    w = x.content,
                    b = o.seriesIndex + "at" + h,
                    I = Lo({ color: y, type: "item", renderMode: i, markerId: b });
                u[b] = y, ++h;
                var M = c.getName(t),
                    D = this.name;
                Ui(this) || (D = ""), D = D ? To(D) + (e ? ": " : s) : "";
                var T = "string" == typeof I ? I : I.content,
                    A = e ? T + D + w : D + T + (M ? To(M) + ": " + w : w);
                return { html: A, markers: u }
            },
            isAnimationEnabled: function() { if (D_.node) return !1; var t = this.getShallow("animation"); return t && this.getData().count() > this.getShallow("animationThreshold") && (t = !1), t },
            restoreData: function() { this.dataTask.dirty() },
            getColorFromPalette: function(t, e, n) {
                var i = this.ecModel,
                    a = cM.getColorFromPalette.call(this, t, e, n);
                return a || (a = i.getColorFromPalette(t, e, n)), a
            },
            coordDimToDataDim: function(t) { return this.getRawData().mapDimension(t, !0) },
            getProgressive: function() { return this.get("progressive") },
            getProgressiveThreshold: function() { return this.get("progressiveThreshold") },
            getAxisTooltipData: null,
            getTooltipPosition: null,
            pipeTask: null,
            preventIncremental: null,
            pipelineContext: null
        });
    c(ZM, XM), c(ZM, cM);
    var qM = function() { this.group = new Vw, this.uid = io("viewComponent") };
    qM.prototype = { constructor: qM, init: function() {}, render: function() {}, dispose: function() {}, filterForExposedEvent: null };
    var KM = qM.prototype;
    KM.updateView = KM.updateLayout = KM.updateVisual = function() {}, aa(qM), la(qM, { registerWhenExtend: !0 });
    var $M = function() {
            var t = qi();
            return function(e) {
                var n = t(e),
                    i = e.pipelineContext,
                    a = n.large,
                    r = n.progressiveRender,
                    o = n.large = i.large,
                    s = n.progressiveRender = i.progressiveRender;
                return !!(a ^ o || r ^ s) && "reset"
            }
        },
        JM = qi(),
        QM = $M();
    el.prototype = { type: "chart", init: function() {}, render: function() {}, highlight: function(t, e, n, i) { il(t.getData(), i, "emphasis") }, downplay: function(t, e, n, i) { il(t.getData(), i, "normal") }, remove: function() { this.group.removeAll() }, dispose: function() {}, incrementalPrepareRender: null, incrementalRender: null, updateTransform: null, filterForExposedEvent: null };
    var tD = el.prototype;
    tD.updateView = tD.updateLayout = tD.updateVisual = function(t, e, n, i) { this.render(t, e, n, i) }, aa(el, ["dispose"]), la(el, { registerWhenExtend: !0 }), el.markUpdateMethod = function(t, e) { JM(t).updateMethod = e };
    var eD = { incrementalPrepareRender: { progress: function(t, e) { e.view.incrementalRender(t, e.model, e.ecModel, e.api, e.payload) } }, render: { forceFirstProgress: !0, progress: function(t, e) { e.view.render(e.model, e.ecModel, e.api, e.payload) } } },
        nD = "\x00__throttleOriginMethod",
        iD = "\x00__throttleRate",
        aD = "\x00__throttleType",
        rD = {
            createOnAllSeries: !0,
            performRawSeries: !0,
            reset: function(t, e) {
                var n = t.getData(),
                    i = (t.visualColorAccessPath || "itemStyle.color").split("."),
                    a = t.get(i) || t.getColorFromPalette(t.name, null, e.getSeriesCount());
                n.setVisual("color", a);
                var r = (t.visualBorderColorAccessPath || "itemStyle.borderColor").split("."),
                    o = t.get(r);
                if (n.setVisual("borderColor", o), !e.isSeriesFiltered(t)) {
                    "function" != typeof a || a instanceof yI || n.each(function(e) { n.setItemVisual(e, "color", a(t.getDataParams(e))) });
                    var s = function(t, e) {
                        var n = t.getItemModel(e),
                            a = n.get(i, !0),
                            o = n.get(r, !0);
                        null != a && t.setItemVisual(e, "color", a), null != o && t.setItemVisual(e, "borderColor", o)
                    };
                    return { dataEach: n.hasItemOption ? s : null }
                }
            }
        },
        oD = { legend: { selector: { all: "全选", inverse: "反选" } }, toolbox: { brush: { title: { rect: "矩形选择", polygon: "圈选", lineX: "横向选择", lineY: "纵向选择", keep: "保持选择", clear: "清除选择" } }, dataView: { title: "数据视图", lang: ["数据视图", "关闭", "刷新"] }, dataZoom: { title: { zoom: "区域缩放", back: "区域缩放还原" } }, magicType: { title: { line: "切换为折线图", bar: "切换为柱状图", stack: "切换为堆叠", tiled: "切换为平铺" } }, restore: { title: "还原" }, saveAsImage: { title: "保存为图片", lang: ["右键另存为图片"] } }, series: { typeNames: { pie: "饼图", bar: "柱状图", line: "折线图", scatter: "散点图", effectScatter: "涟漪散点图", radar: "雷达图", tree: "树图", treemap: "矩形树图", boxplot: "箱型图", candlestick: "K线图", k: "K线图", heatmap: "热力图", map: "地图", parallel: "平行坐标图", lines: "线图", graph: "关系图", sankey: "桑基图", funnel: "漏斗图", gauge: "仪表盘图", pictorialBar: "象形柱图", themeRiver: "主题河流图", sunburst: "旭日图" } }, aria: { general: { withTitle: "这是一个关于“{title}”的图表。", withoutTitle: "这是一个图表，" }, series: { single: { prefix: "", withName: "图表类型是{seriesType}，表示{seriesName}。", withoutName: "图表类型是{seriesType}。" }, multiple: { prefix: "它由{seriesCount}个图表系列组成。", withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，", withoutName: "第{seriesId}个系列是一个{seriesType}，", separator: { middle: "；", end: "。" } } }, data: { allData: "其数据是——", partialData: "其中，前{displayCnt}项是——", withName: "{name}的数据是{value}", withoutName: "{value}", separator: { middle: "，", end: "" } } } },
        sD = function(t, e) {
            function n(t, e) { if ("string" != typeof t) return t; var n = t; return f(e, function(t, e) { n = n.replace(new RegExp("\\{\\s*" + e + "\\s*\\}", "g"), t) }), n }

            function i(t) { var e = o.get(t); if (null == e) { for (var n = t.split("."), i = oD.aria, a = 0; a < n.length; ++a) i = i[n[a]]; return i } return e }

            function a() { var t = e.getModel("title").option; return t && t.length && (t = t[0]), t && t.text }

            function r(t) { return oD.series.typeNames[t] || "自定义图" }
            var o = e.getModel("aria");
            if (o.get("show")) {
                if (o.get("description")) return void t.setAttribute("aria-label", o.get("description"));
                var s = 0;
                e.eachSeries(function() {++s }, this);
                var l, u = o.get("data.maxCount") || 10,
                    h = o.get("series.maxCount") || 10,
                    c = Math.min(s, h);
                if (!(1 > s)) {
                    var d = a();
                    l = d ? n(i("general.withTitle"), { title: d }) : i("general.withoutTitle");
                    var g = [],
                        p = s > 1 ? "series.multiple.prefix" : "series.single.prefix";
                    l += n(i(p), { seriesCount: s }), e.eachSeries(function(t, e) {
                        if (c > e) {
                            var a, o = t.get("name"),
                                l = "series." + (s > 1 ? "multiple" : "single") + ".";
                            a = i(o ? l + "withName" : l + "withoutName"), a = n(a, { seriesId: t.seriesIndex, seriesName: t.get("name"), seriesType: r(t.subType) });
                            var h = t.getData();
                            window.data = h, a += h.count() > u ? n(i("data.partialData"), { displayCnt: u }) : i("data.allData");
                            for (var d = [], f = 0; f < h.count(); f++)
                                if (u > f) {
                                    var p = h.getName(f),
                                        m = Fs(h, f);
                                    d.push(n(i(p ? "data.withName" : "data.withoutName"), { name: p, value: m }))
                                }
                            a += d.join(i("data.separator.middle")) + i("data.separator.end"), g.push(a)
                        }
                    }), l += g.join(i("series.multiple.separator.middle")) + i("series.multiple.separator.end"), t.setAttribute("aria-label", l)
                }
            }
        },
        lD = Math.PI,
        uD = function(t, e) {
            e = e || {}, s(e, { text: "loading", color: "#c23531", textColor: "#000", maskColor: "rgba(255, 255, 255, 0.8)", zlevel: 0 });
            var n = new cI({ style: { fill: e.maskColor }, zlevel: e.zlevel, z: 1e4 }),
                i = new mI({ shape: { startAngle: -lD / 2, endAngle: -lD / 2 + .1, r: 10 }, style: { stroke: e.color, lineCap: "round", lineWidth: 5 }, zlevel: e.zlevel, z: 10001 }),
                a = new cI({ style: { fill: "none", text: e.text, textPosition: "right", textDistance: 10, textFill: e.textColor }, zlevel: e.zlevel, z: 10001 });
            i.animateShape(!0).when(1e3, { endAngle: 3 * lD / 2 }).start("circularInOut"), i.animateShape(!0).when(1e3, { startAngle: 3 * lD / 2 }).delay(300).start("circularInOut");
            var r = new Vw;
            return r.add(i), r.add(a), r.add(n), r.resize = function() {
                var e = t.getWidth() / 2,
                    r = t.getHeight() / 2;
                i.setShape({ cx: e, cy: r });
                var o = i.shape.r;
                a.setShape({ x: e - o, y: r - o, width: 2 * o, height: 2 * o }), n.setShape({ x: 0, y: 0, width: t.getWidth(), height: t.getHeight() })
            }, r.resize(), r
        },
        hD = ll.prototype;
    hD.restoreData = function(t, e) {
        t.restoreData(e), this._stageTaskMap.each(function(t) {
            var e = t.overallTask;
            e && e.dirty()
        })
    }, hD.getPerformArgs = function(t, e) {
        if (t.__pipeline) {
            var n = this._pipelineMap.get(t.__pipeline.id),
                i = n.context,
                a = !e && n.progressiveEnabled && (!i || i.progressiveRender) && t.__idxInPipeline > n.blockIndex,
                r = a ? n.step : null,
                o = i && i.modDataCount,
                s = null != o ? Math.ceil(o / r) : null;
            return { step: r, modBy: s, modDataCount: o }
        }
    }, hD.getPipeline = function(t) { return this._pipelineMap.get(t) }, hD.updateStreamModes = function(t, e) {
        var n = this._pipelineMap.get(t.uid),
            i = t.getData(),
            a = i.count(),
            r = n.progressiveEnabled && e.incrementalPrepareRender && a >= n.threshold,
            o = t.get("large") && a >= t.get("largeThreshold"),
            s = "mod" === t.get("progressiveChunkMode") ? a : null;
        t.pipelineContext = n.context = { progressiveRender: r, modDataCount: s, large: o }
    }, hD.restorePipelines = function(t) {
        var e = this,
            n = e._pipelineMap = B();
        t.eachSeries(function(t) {
            var i = t.getProgressive(),
                a = t.uid;
            n.set(a, { id: a, head: null, tail: null, threshold: t.getProgressiveThreshold(), progressiveEnabled: i && !(t.preventIncremental && t.preventIncremental()), blockIndex: -1, step: Math.round(i || 700), count: 0 }), _l(e, t, t.dataTask)
        })
    }, hD.prepareStageTasks = function() {
        var t = this._stageTaskMap,
            e = this.ecInstance.getModel(),
            n = this.api;
        f(this._allHandlers, function(i) {
            var a = t.get(i.uid) || t.set(i.uid, []);
            i.reset && hl(this, i, a, e, n), i.overallReset && cl(this, i, a, e, n)
        }, this)
    }, hD.prepareView = function(t, e, n, i) {
        var a = t.renderTask,
            r = a.context;
        r.model = e, r.ecModel = n, r.api = i, a.__block = !t.incrementalPrepareRender, _l(this, e, a)
    }, hD.performDataProcessorTasks = function(t, e) { ul(this, this._dataProcessorHandlers, t, e, { block: !0 }) }, hD.performVisualTasks = function(t, e, n) { ul(this, this._visualHandlers, t, e, n) }, hD.performSeriesTasks = function(t) {
        var e;
        t.eachSeries(function(t) { e |= t.dataTask.perform() }), this.unfinished |= e
    }, hD.plan = function() {
        this._pipelineMap.each(function(t) {
            var e = t.tail;
            do {
                if (e.__block) { t.blockIndex = e.__idxInPipeline; break }
                e = e.getUpstream()
            } while (e)
        })
    };
    var cD = hD.updatePayload = function(t, e) { "remain" !== e && (t.context.payload = e) },
        dD = yl(0);
    ll.wrapStageHandler = function(t, e) { return w(t) && (t = { overallReset: t, seriesType: wl(t) }), t.uid = io("stageHandler"), e && (t.visualType = e), t };
    var fD, gD = {},
        pD = {};
    bl(gD, SM), bl(pD, gs), gD.eachSeriesByType = gD.eachRawSeriesByType = function(t) { fD = t }, gD.eachComponent = function(t) { "series" === t.mainType && t.subType && (fD = t.subType) };
    var mD = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"],
        vD = {
            color: mD,
            colorLayer: [
                ["#37A2DA", "#ffd85c", "#fd7b5f"],
                ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"],
                ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], mD
            ]
        },
        yD = "#eee",
        xD = function() { return { axisLine: { lineStyle: { color: yD } }, axisTick: { lineStyle: { color: yD } }, axisLabel: { textStyle: { color: yD } }, splitLine: { lineStyle: { type: "dashed", color: "#aaa" } }, splitArea: { areaStyle: { color: yD } } } },
        _D = ["#dd6b66", "#759aa0", "#e69d87", "#8dc1a9", "#ea7e53", "#eedd78", "#73a373", "#73b9bc", "#7289ab", "#91ca8c", "#f49f42"],
        wD = { color: _D, backgroundColor: "#333", tooltip: { axisPointer: { lineStyle: { color: yD }, crossStyle: { color: yD } } }, legend: { textStyle: { color: yD } }, textStyle: { color: yD }, title: { textStyle: { color: yD } }, toolbox: { iconStyle: { normal: { borderColor: yD } } }, dataZoom: { textStyle: { color: yD } }, visualMap: { textStyle: { color: yD } }, timeline: { lineStyle: { color: yD }, itemStyle: { normal: { color: _D[1] } }, label: { normal: { textStyle: { color: yD } } }, controlStyle: { normal: { color: yD, borderColor: yD } } }, timeAxis: xD(), logAxis: xD(), valueAxis: xD(), categoryAxis: xD(), line: { symbol: "circle" }, graph: { color: _D }, gauge: { title: { textStyle: { color: yD } } }, candlestick: { itemStyle: { normal: { color: "#FD1050", color0: "#0CF49B", borderColor: "#FD1050", borderColor0: "#0CF49B" } } } };
    wD.categoryAxis.splitLine.show = !1, sM.extend({ type: "dataset", defaultOption: { seriesLayoutBy: xM, sourceHeader: null, dimensions: null, source: null }, optionUpdated: function() { qo(this) } }), qM.extend({ type: "dataset" });
    var bD = Wa.extend({
            type: "ellipse",
            shape: { cx: 0, cy: 0, rx: 0, ry: 0 },
            buildPath: function(t, e) {
                var n = .5522848,
                    i = e.cx,
                    a = e.cy,
                    r = e.rx,
                    o = e.ry,
                    s = r * n,
                    l = o * n;
                t.moveTo(i - r, a), t.bezierCurveTo(i - r, a - l, i - s, a - o, i, a - o), t.bezierCurveTo(i + s, a - o, i + r, a - l, i + r, a), t.bezierCurveTo(i + r, a + l, i + s, a + o, i, a + o), t.bezierCurveTo(i - s, a + o, i - r, a + l, i - r, a), t.closePath()
            }
        }),
        SD = /[\s,]+/;
    Il.prototype.parse = function(t, e) {
        e = e || {};
        var n = Sl(t);
        if (!n) throw new Error("Illegal svg");
        var i = new Vw;
        this._root = i;
        var a = n.getAttribute("viewBox") || "",
            r = parseFloat(n.getAttribute("width") || e.width),
            o = parseFloat(n.getAttribute("height") || e.height);
        isNaN(r) && (r = null), isNaN(o) && (o = null), Al(n, i, null, !0);
        for (var s = n.firstChild; s;) this._parseNode(s, i), s = s.nextSibling;
        var l, u;
        if (a) {
            var h = O(a).split(SD);
            h.length >= 4 && (l = { x: parseFloat(h[0] || 0), y: parseFloat(h[1] || 0), width: parseFloat(h[2]), height: parseFloat(h[3]) })
        }
        if (l && null != r && null != o && (u = kl(l, r, o), !e.ignoreViewBox)) {
            var c = i;
            i = new Vw, i.add(c), c.scale = u.scale.slice(), c.position = u.position.slice()
        }
        return e.ignoreRootClip || null == r || null == o || i.setClipPath(new cI({ shape: { x: 0, y: 0, width: r, height: o } })), { root: i, width: r, height: o, viewBoxRect: l, viewBoxTransform: u }
    }, Il.prototype._parseNode = function(t, e) {
        var n = t.nodeName.toLowerCase();
        "defs" === n ? this._isDefine = !0 : "text" === n && (this._isText = !0);
        var i;
        if (this._isDefine) {
            var a = MD[n];
            if (a) {
                var r = a.call(this, t),
                    o = t.getAttribute("id");
                o && (this._defs[o] = r)
            }
        } else {
            var a = ID[n];
            a && (i = a.call(this, t, e), e.add(i))
        }
        for (var s = t.firstChild; s;) 1 === s.nodeType && this._parseNode(s, i), 3 === s.nodeType && this._isText && this._parseText(s, i), s = s.nextSibling;
        "defs" === n ? this._isDefine = !1 : "text" === n && (this._isText = !1)
    }, Il.prototype._parseText = function(t, e) {
        if (1 === t.nodeType) {
            var n = t.getAttribute("dx") || 0,
                i = t.getAttribute("dy") || 0;
            this._textX += parseFloat(n), this._textY += parseFloat(i)
        }
        var a = new QS({ style: { text: t.textContent, transformText: !0 }, position: [this._textX || 0, this._textY || 0] });
        Dl(e, a), Al(t, a, this._defs);
        var r = a.style.fontSize;
        r && 9 > r && (a.style.fontSize = 9, a.scale = a.scale || [1, 1], a.scale[0] *= r / 9, a.scale[1] *= r / 9);
        var o = a.getBoundingRect();
        return this._textX += o.width, e.add(a), a
    };
    var ID = {
            g: function(t, e) { var n = new Vw; return Dl(e, n), Al(t, n, this._defs), n },
            rect: function(t, e) { var n = new cI; return Dl(e, n), Al(t, n, this._defs), n.setShape({ x: parseFloat(t.getAttribute("x") || 0), y: parseFloat(t.getAttribute("y") || 0), width: parseFloat(t.getAttribute("width") || 0), height: parseFloat(t.getAttribute("height") || 0) }), n },
            circle: function(t, e) { var n = new tI; return Dl(e, n), Al(t, n, this._defs), n.setShape({ cx: parseFloat(t.getAttribute("cx") || 0), cy: parseFloat(t.getAttribute("cy") || 0), r: parseFloat(t.getAttribute("r") || 0) }), n },
            line: function(t, e) { var n = new fI; return Dl(e, n), Al(t, n, this._defs), n.setShape({ x1: parseFloat(t.getAttribute("x1") || 0), y1: parseFloat(t.getAttribute("y1") || 0), x2: parseFloat(t.getAttribute("x2") || 0), y2: parseFloat(t.getAttribute("y2") || 0) }), n },
            ellipse: function(t, e) { var n = new bD; return Dl(e, n), Al(t, n, this._defs), n.setShape({ cx: parseFloat(t.getAttribute("cx") || 0), cy: parseFloat(t.getAttribute("cy") || 0), rx: parseFloat(t.getAttribute("rx") || 0), ry: parseFloat(t.getAttribute("ry") || 0) }), n },
            polygon: function(t, e) {
                var n = t.getAttribute("points");
                n && (n = Tl(n));
                var i = new sI({ shape: { points: n || [] } });
                return Dl(e, i), Al(t, i, this._defs), i
            },
            polyline: function(t, e) {
                var n = new Wa;
                Dl(e, n), Al(t, n, this._defs);
                var i = t.getAttribute("points");
                i && (i = Tl(i));
                var a = new lI({ shape: { points: i || [] } });
                return a
            },
            image: function(t, e) { var n = new Si; return Dl(e, n), Al(t, n, this._defs), n.setStyle({ image: t.getAttribute("xlink:href"), x: t.getAttribute("x"), y: t.getAttribute("y"), width: t.getAttribute("width"), height: t.getAttribute("height") }), n },
            text: function(t, e) {
                var n = t.getAttribute("x") || 0,
                    i = t.getAttribute("y") || 0,
                    a = t.getAttribute("dx") || 0,
                    r = t.getAttribute("dy") || 0;
                this._textX = parseFloat(n) + parseFloat(a), this._textY = parseFloat(i) + parseFloat(r);
                var o = new Vw;
                return Dl(e, o), Al(t, o, this._defs), o
            },
            tspan: function(t, e) {
                var n = t.getAttribute("x"),
                    i = t.getAttribute("y");
                null != n && (this._textX = parseFloat(n)), null != i && (this._textY = parseFloat(i));
                var a = t.getAttribute("dx") || 0,
                    r = t.getAttribute("dy") || 0,
                    o = new Vw;
                return Dl(e, o), Al(t, o, this._defs), this._textX += a, this._textY += r, o
            },
            path: function(t, e) {
                var n = t.getAttribute("d") || "",
                    i = Ua(n);
                return Dl(e, i), Al(t, i, this._defs), i
            }
        },
        MD = {
            lineargradient: function(t) {
                var e = parseInt(t.getAttribute("x1") || 0, 10),
                    n = parseInt(t.getAttribute("y1") || 0, 10),
                    i = parseInt(t.getAttribute("x2") || 10, 10),
                    a = parseInt(t.getAttribute("y2") || 0, 10),
                    r = new xI(e, n, i, a);
                return Ml(t, r), r
            },
            radialgradient: function() {}
        },
        DD = { fill: "fill", stroke: "stroke", "stroke-width": "lineWidth", opacity: "opacity", "fill-opacity": "fillOpacity", "stroke-opacity": "strokeOpacity", "stroke-dasharray": "lineDash", "stroke-dashoffset": "lineDashOffset", "stroke-linecap": "lineCap", "stroke-linejoin": "lineJoin", "stroke-miterlimit": "miterLimit", "font-family": "fontFamily", "font-size": "fontSize", "font-style": "fontStyle", "font-weight": "fontWeight", "text-align": "textAlign", "alignment-baseline": "textBaseline" },
        TD = /url\(\s*#(.*?)\)/,
        AD = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.e,]*)\)/g,
        CD = /([^\s:;]+)\s*:\s*([^:;]+)/g,
        LD = B(),
        PD = {
            registerMap: function(t, e, n) {
                var i;
                return _(e) ? i = e : e.svg ? i = [{ type: "svg", source: e.svg, specialAreas: e.specialAreas }] : (e.geoJson && !e.features && (n = e.specialAreas, e = e.geoJson), i = [{ type: "geoJSON", source: e, specialAreas: n }]), f(i, function(t) {
                    var e = t.type;
                    "geoJson" === e && (e = t.type = "geoJSON");
                    var n = kD[e];
                    n(t)
                }), LD.set(t, i)
            },
            retrieveMap: function(t) { return LD.get(t) }
        },
        kD = {
            geoJSON: function(t) {
                var e = t.source;
                t.geoJSON = b(e) ? "undefined" != typeof JSON && JSON.parse ? JSON.parse(e) : new Function("return (" + e + ");")() : e
            },
            svg: function(t) { t.svgXML = Sl(t.source) }
        },
        ND = N,
        OD = f,
        ED = w,
        zD = S,
        RD = sM.parseClassType,
        BD = "4.5.0",
        VD = { zrender: "4.1.2" },
        GD = 1,
        FD = 1e3,
        WD = 800,
        HD = 900,
        XD = 5e3,
        YD = 1e3,
        UD = 1100,
        jD = 2e3,
        ZD = 3e3,
        qD = 3500,
        KD = 4e3,
        $D = 5e3,
        JD = { PROCESSOR: { FILTER: FD, SERIES_FILTER: WD, STATISTIC: XD }, VISUAL: { LAYOUT: YD, PROGRESSIVE_LAYOUT: UD, GLOBAL: jD, CHART: ZD, POST_CHART_LAYOUT: qD, COMPONENT: KD, BRUSH: $D } },
        QD = "__flagInMainProcess",
        tT = "__optionUpdated",
        eT = /^[a-zA-Z0-9_]+$/;
    El.prototype.on = Ol("on", !0), El.prototype.off = Ol("off", !0), El.prototype.one = Ol("one", !0), c(El, Z_);
    var nT = zl.prototype;
    nT._onframe = function() {
        if (!this._disposed) {
            var t = this._scheduler;
            if (this[tT]) {
                var e = this[tT].silent;
                this[QD] = !0, Bl(this), iT.update.call(this), this[QD] = !1, this[tT] = !1, Wl.call(this, e), Hl.call(this, e)
            } else if (t.unfinished) {
                var n = GD,
                    i = this._model,
                    a = this._api;
                t.unfinished = !1;
                do {
                    var r = +new Date;
                    t.performSeriesTasks(i), t.performDataProcessorTasks(i), Gl(this, i), t.performVisualTasks(i), ql(this, this._model, a, "remain"), n -= +new Date - r
                } while (n > 0 && t.unfinished);
                t.unfinished || this._zr.flush()
            }
        }
    }, nT.getDom = function() { return this._dom }, nT.getZr = function() { return this._zr }, nT.setOption = function(t, e, n) {
        if (!this._disposed) {
            var i;
            if (zD(e) && (n = e.lazyUpdate, i = e.silent, e = e.notMerge), this[QD] = !0, !this._model || e) {
                var a = new ms(this._api),
                    r = this._theme,
                    o = this._model = new SM;
                o.scheduler = this._scheduler, o.init(null, null, r, a)
            }
            this._model.setOption(t, lT), n ? (this[tT] = { silent: i }, this[QD] = !1) : (Bl(this), iT.update.call(this), this._zr.flush(), this[tT] = !1, this[QD] = !1, Wl.call(this, i), Hl.call(this, i))
        }
    }, nT.setTheme = function() { console.error("ECharts#setTheme() is DEPRECATED in ECharts 3.0") }, nT.getModel = function() { return this._model }, nT.getOption = function() { return this._model && this._model.getOption() }, nT.getWidth = function() { return this._zr.getWidth() }, nT.getHeight = function() { return this._zr.getHeight() }, nT.getDevicePixelRatio = function() { return this._zr.painter.dpr || window.devicePixelRatio || 1 }, nT.getRenderedCanvas = function(t) { if (D_.canvasSupported) { t = t || {}, t.pixelRatio = t.pixelRatio || 1, t.backgroundColor = t.backgroundColor || this._model.get("backgroundColor"); var e = this._zr; return e.painter.getRenderedCanvas(t) } }, nT.getSvgDataUrl = function() {
        if (D_.svgSupported) {
            var t = this._zr,
                e = t.storage.getDisplayList();
            return f(e, function(t) { t.stopAnimation(!0) }), t.painter.pathToDataUrl()
        }
    }, nT.getDataURL = function(t) {
        if (!this._disposed) {
            t = t || {};
            var e = t.excludeComponents,
                n = this._model,
                i = [],
                a = this;
            OD(e, function(t) {
                n.eachComponent({ mainType: t }, function(t) {
                    var e = a._componentsMap[t.__viewId];
                    e.group.ignore || (i.push(e), e.group.ignore = !0)
                })
            });
            var r = "svg" === this._zr.painter.getType() ? this.getSvgDataUrl() : this.getRenderedCanvas(t).toDataURL("image/" + (t && t.type || "png"));
            return OD(i, function(t) { t.group.ignore = !1 }), r
        }
    }, nT.getConnectedDataURL = function(t) {
        if (!this._disposed && D_.canvasSupported) {
            var e = this.group,
                n = Math.min,
                a = Math.max,
                r = 1 / 0;
            if (gT[e]) {
                var o = r,
                    s = r,
                    l = -r,
                    u = -r,
                    h = [],
                    c = t && t.pixelRatio || 1;
                f(fT, function(r) {
                    if (r.group === e) {
                        var c = r.getRenderedCanvas(i(t)),
                            d = r.getDom().getBoundingClientRect();
                        o = n(d.left, o), s = n(d.top, s), l = a(d.right, l), u = a(d.bottom, u), h.push({ dom: c, left: d.left, top: d.top })
                    }
                }), o *= c, s *= c, l *= c, u *= c;
                var d = l - o,
                    g = u - s,
                    p = R_();
                p.width = d, p.height = g;
                var m = Ei(p);
                return t.connectedBackgroundColor && m.add(new cI({ shape: { x: 0, y: 0, width: d, height: g }, style: { fill: t.connectedBackgroundColor } })), OD(h, function(t) {
                    var e = new Si({ style: { x: t.left * c - o, y: t.top * c - s, image: t.dom } });
                    m.add(e)
                }), m.refreshImmediately(), p.toDataURL("image/" + (t && t.type || "png"))
            }
            return this.getDataURL(t)
        }
    }, nT.convertToPixel = x(Rl, "convertToPixel"), nT.convertFromPixel = x(Rl, "convertFromPixel"), nT.containPixel = function(t, e) {
        if (!this._disposed) {
            var n, i = this._model;
            return t = Ki(i, t), f(t, function(t, i) {
                i.indexOf("Models") >= 0 && f(t, function(t) {
                    var a = t.coordinateSystem;
                    if (a && a.containPoint) n |= !!a.containPoint(e);
                    else if ("seriesModels" === i) {
                        var r = this._chartsMap[t.__viewId];
                        r && r.containPoint && (n |= r.containPoint(e, t))
                    }
                }, this)
            }, this), !!n
        }
    }, nT.getVisual = function(t, e) {
        var n = this._model;
        t = Ki(n, t, { defaultMainType: "series" });
        var i = t.seriesModel,
            a = i.getData(),
            r = t.hasOwnProperty("dataIndexInside") ? t.dataIndexInside : t.hasOwnProperty("dataIndex") ? a.indexOfRawIndex(t.dataIndex) : null;
        return null != r ? a.getItemVisual(r, e) : a.getVisual(e)
    }, nT.getViewOfComponentModel = function(t) { return this._componentsMap[t.__viewId] }, nT.getViewOfSeriesModel = function(t) { return this._chartsMap[t.__viewId] };
    var iT = {
        prepareAndUpdate: function(t) { Bl(this), iT.update.call(this, t) },
        update: function(t) {
            var e = this._model,
                n = this._api,
                i = this._zr,
                a = this._coordSysMgr,
                r = this._scheduler;
            if (e) {
                r.restoreData(e, t), r.performSeriesTasks(e), a.create(e, n), r.performDataProcessorTasks(e, t), Gl(this, e), a.update(e, n), Ul(e), r.performVisualTasks(e, t), jl(this, e, n, t);
                var o = e.get("backgroundColor") || "transparent";
                if (D_.canvasSupported) i.setBackgroundColor(o);
                else {
                    var s = qe(o);
                    o = rn(s, "rgb"), 0 === s[3] && (o = "transparent")
                }
                Kl(e, n)
            }
        },
        updateTransform: function(t) {
            var e = this._model,
                n = this,
                i = this._api;
            if (e) {
                var a = [];
                e.eachComponent(function(r, o) {
                    var s = n.getViewOfComponentModel(o);
                    if (s && s.__alive)
                        if (s.updateTransform) {
                            var l = s.updateTransform(o, e, i, t);
                            l && l.update && a.push(s)
                        } else a.push(s)
                });
                var r = B();
                e.eachSeries(function(a) {
                    var o = n._chartsMap[a.__viewId];
                    if (o.updateTransform) {
                        var s = o.updateTransform(a, e, i, t);
                        s && s.update && r.set(a.uid, 1)
                    } else r.set(a.uid, 1)
                }), Ul(e), this._scheduler.performVisualTasks(e, t, { setDirty: !0, dirtyMap: r }), ql(n, e, i, t, r), Kl(e, this._api)
            }
        },
        updateView: function(t) {
            var e = this._model;
            e && (el.markUpdateMethod(t, "updateView"), Ul(e), this._scheduler.performVisualTasks(e, t, { setDirty: !0 }), jl(this, this._model, this._api, t), Kl(e, this._api))
        },
        updateVisual: function(t) { iT.update.call(this, t) },
        updateLayout: function(t) { iT.update.call(this, t) }
    };
    nT.resize = function(t) {
        if (!this._disposed) {
            this._zr.resize(t);
            var e = this._model;
            if (this._loadingFX && this._loadingFX.resize(), e) {
                var n = e.resetOption("media"),
                    i = t && t.silent;
                this[QD] = !0, n && Bl(this), iT.update.call(this), this[QD] = !1, Wl.call(this, i), Hl.call(this, i)
            }
        }
    }, nT.showLoading = function(t, e) {
        if (!this._disposed && (zD(t) && (e = t, t = ""), t = t || "default", this.hideLoading(), dT[t])) {
            var n = dT[t](this._api, e),
                i = this._zr;
            this._loadingFX = n, i.add(n)
        }
    }, nT.hideLoading = function() { this._disposed || (this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null) }, nT.makeActionFromEvent = function(t) { var e = o({}, t); return e.type = oT[t.type], e }, nT.dispatchAction = function(t, e) {
        if (!this._disposed && (zD(e) || (e = { silent: !!e }), rT[t.type] && this._model)) {
            if (this[QD]) return void this._pendingActions.push(t);
            Fl.call(this, t, e.silent), e.flush ? this._zr.flush(!0) : e.flush !== !1 && D_.browser.weChat && this._throttledZrFlush(), Wl.call(this, e.silent), Hl.call(this, e.silent)
        }
    }, nT.appendData = function(t) {
        if (!this._disposed) {
            var e = t.seriesIndex,
                n = this.getModel(),
                i = n.getSeriesByIndex(e);
            i.appendData(t), this._scheduler.unfinished = !0
        }
    }, nT.on = Ol("on", !1), nT.off = Ol("off", !1), nT.one = Ol("one", !1);
    var aT = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
    nT._initEvents = function() {
        OD(aT, function(t) {
            var e = function(e) {
                var n, i = this.getModel(),
                    a = e.target,
                    r = "globalout" === t;
                if (r) n = {};
                else if (a && null != a.dataIndex) {
                    var s = a.dataModel || i.getSeriesByIndex(a.seriesIndex);
                    n = s && s.getDataParams(a.dataIndex, a.dataType, a) || {}
                } else a && a.eventData && (n = o({}, a.eventData));
                if (n) {
                    var l = n.componentType,
                        u = n.componentIndex;
                    ("markLine" === l || "markPoint" === l || "markArea" === l) && (l = "series", u = n.seriesIndex);
                    var h = l && null != u && i.getComponent(l, u),
                        c = h && this["series" === h.mainType ? "_chartsMap" : "_componentsMap"][h.__viewId];
                    n.event = e, n.type = t, this._ecEventProcessor.eventInfo = { targetEl: a, packedEvent: n, model: h, view: c }, this.trigger(t, n)
                }
            };
            e.zrEventfulCallAtLast = !0, this._zr.on(t, e, this)
        }, this), OD(oT, function(t, e) { this._messageCenter.on(e, function(t) { this.trigger(e, t) }, this) }, this)
    }, nT.isDisposed = function() { return this._disposed }, nT.clear = function() { this._disposed || this.setOption({ series: [] }, !0) }, nT.dispose = function() {
        if (!this._disposed) {
            this._disposed = !0, Ji(this.getDom(), vT, "");
            var t = this._api,
                e = this._model;
            OD(this._componentsViews, function(n) { n.dispose(e, t) }), OD(this._chartsViews, function(n) { n.dispose(e, t) }), this._zr.dispose(), delete fT[this.id]
        }
    }, c(zl, Z_), eu.prototype = {
        constructor: eu,
        normalizeQuery: function(t) {
            var e = {},
                n = {},
                i = {};
            if (b(t)) {
                var a = RD(t);
                e.mainType = a.main || null, e.subType = a.sub || null
            } else {
                var r = ["Index", "Name", "Id"],
                    o = { name: 1, dataIndex: 1, dataType: 1 };
                f(t, function(t, a) {
                    for (var s = !1, l = 0; l < r.length; l++) {
                        var u = r[l],
                            h = a.lastIndexOf(u);
                        if (h > 0 && h === a.length - u.length) { var c = a.slice(0, h); "data" !== c && (e.mainType = c, e[u.toLowerCase()] = t, s = !0) }
                    }
                    o.hasOwnProperty(a) && (n[a] = t, s = !0), s || (i[a] = t)
                })
            }
            return { cptQuery: e, dataQuery: n, otherQuery: i }
        },
        filter: function(t, e) {
            function n(t, e, n, i) { return null == t[n] || e[i || n] === t[n] }
            var i = this.eventInfo;
            if (!i) return !0;
            var a = i.targetEl,
                r = i.packedEvent,
                o = i.model,
                s = i.view;
            if (!o || !s) return !0;
            var l = e.cptQuery,
                u = e.dataQuery;
            return n(l, o, "mainType") && n(l, o, "subType") && n(l, o, "index", "componentIndex") && n(l, o, "name") && n(l, o, "id") && n(u, r, "name") && n(u, r, "dataIndex") && n(u, r, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(t, e.otherQuery, a, r))
        },
        afterTrigger: function() { this.eventInfo = null }
    };
    var rT = {},
        oT = {},
        sT = [],
        lT = [],
        uT = [],
        hT = [],
        cT = {},
        dT = {},
        fT = {},
        gT = {},
        pT = new Date - 0,
        mT = new Date - 0,
        vT = "_echarts_instance_",
        yT = ru;
    vu(jD, rD), hu(RM), cu(HD, BM), xu("default", uD), fu({ type: "highlight", event: "highlight", update: "highlight" }, G), fu({ type: "downplay", event: "downplay", update: "downplay" }, G), uu("light", vD), uu("dark", wD);
    var xT = {};
    Au.prototype = {
        constructor: Au,
        add: function(t) { return this._add = t, this },
        update: function(t) { return this._update = t, this },
        remove: function(t) { return this._remove = t, this },
        execute: function() {
            var t, e = this._old,
                n = this._new,
                i = {},
                a = {},
                r = [],
                o = [];
            for (Cu(e, i, r, "_oldKeyGetter", this), Cu(n, a, o, "_newKeyGetter", this), t = 0; t < e.length; t++) {
                var s = r[t],
                    l = a[s];
                if (null != l) {
                    var u = l.length;
                    u ? (1 === u && (a[s] = null), l = l.shift()) : a[s] = null, this._update && this._update(l, t)
                } else this._remove && this._remove(t)
            }
            for (var t = 0; t < o.length; t++) {
                var s = o[t];
                if (a.hasOwnProperty(s)) {
                    var l = a[s];
                    if (null == l) continue;
                    if (l.length)
                        for (var h = 0, u = l.length; u > h; h++) this._add && this._add(l[h]);
                    else this._add && this._add(l)
                }
            }
        }
    };
    var _T = B(["tooltip", "label", "itemName", "itemId", "seriesName"]),
        wT = S,
        bT = "undefined",
        ST = -1,
        IT = "e\x00\x00",
        MT = { "float": typeof Float64Array === bT ? Array : Float64Array, "int": typeof Int32Array === bT ? Array : Int32Array, ordinal: Array, number: Array, time: Array },
        DT = typeof Uint32Array === bT ? Array : Uint32Array,
        TT = typeof Int32Array === bT ? Array : Int32Array,
        AT = typeof Uint16Array === bT ? Array : Uint16Array,
        CT = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_rawData", "_chunkSize", "_chunkCount", "_dimValueGetter", "_count", "_rawCount", "_nameDimIdx", "_idDimIdx"],
        LT = ["_extent", "_approximateExtent", "_rawExtent"],
        PT = function(t, e) {
            t = t || ["x", "y"];
            for (var n = {}, i = [], a = {}, r = 0; r < t.length; r++) {
                var o = t[r];
                b(o) && (o = { name: o });
                var s = o.name;
                o.type = o.type || "float", o.coordDim || (o.coordDim = s, o.coordDimIndex = 0), o.otherDims = o.otherDims || {}, i.push(s), n[s] = o, o.index = r, o.createInvertedIndices && (a[s] = [])
            }
            this.dimensions = i, this._dimensionInfos = n, this.hostModel = e, this.dataType, this._indices = null, this._count = 0, this._rawCount = 0, this._storage = {}, this._nameList = [], this._idList = [], this._optionModels = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this.hasItemVisual = {}, this._itemLayouts = [], this._graphicEls = [], this._chunkSize = 1e5, this._chunkCount = 0, this._rawData, this._rawExtent = {}, this._extent = {}, this._approximateExtent = {}, this._dimensionsSummary = Lu(this), this._invertedIndicesMap = a, this._calculationInfo = {}, this.userOutput = this._dimensionsSummary.userOutput
        },
        kT = PT.prototype;
    kT.type = "list", kT.hasItemOption = !0, kT.getDimension = function(t) { return ("number" == typeof t || !isNaN(t) && !this._dimensionInfos.hasOwnProperty(t)) && (t = this.dimensions[t]), t }, kT.getDimensionInfo = function(t) { return this._dimensionInfos[this.getDimension(t)] }, kT.getDimensionsOnCoord = function() { return this._dimensionsSummary.dataDimsOnCoord.slice() }, kT.mapDimension = function(t, e) { var n = this._dimensionsSummary; if (null == e) return n.encodeFirstDimNotExtra[t]; var i = n.encode[t]; return e === !0 ? (i || []).slice() : i && i[e] }, kT.initData = function(t, e, n) {
        var i = Zo.isInstance(t) || d(t);
        i && (t = new Os(t, this.dimensions.length)), this._rawData = t, this._storage = {}, this._indices = null, this._nameList = e || [], this._idList = [], this._nameRepeatCount = {}, n || (this.hasItemOption = !1), this.defaultDimValueGetter = WM[this._rawData.getSource().sourceFormat], this._dimValueGetter = n = n || this.defaultDimValueGetter, this._dimValueGetterArrayRows = WM.arrayRows, this._rawExtent = {}, this._initDataFromProvider(0, t.count()), t.pure && (this.hasItemOption = !1)
    }, kT.getProvider = function() { return this._rawData }, kT.appendData = function(t) {
        var e = this._rawData,
            n = this.count();
        e.appendData(t);
        var i = e.count();
        e.persistent || (i += n), this._initDataFromProvider(n, i)
    }, kT.appendValues = function(t, e) {
        for (var n = this._chunkSize, i = this._storage, a = this.dimensions, r = a.length, o = this._rawExtent, s = this.count(), l = s + Math.max(t.length, e ? e.length : 0), u = this._chunkCount, h = 0; r > h; h++) {
            var c = a[h];
            o[c] || (o[c] = Uu()), i[c] || (i[c] = []), Ru(i, this._dimensionInfos[c], n, u, l), this._chunkCount = i[c].length
        }
        for (var d = new Array(r), f = s; l > f; f++) {
            for (var g = f - s, p = Math.floor(f / n), m = f % n, v = 0; r > v; v++) {
                var c = a[v],
                    y = this._dimValueGetterArrayRows(t[g] || d, c, g, v);
                i[c][p][m] = y;
                var x = o[c];
                y < x[0] && (x[0] = y), y > x[1] && (x[1] = y)
            }
            e && (this._nameList[f] = e[g])
        }
        this._rawCount = this._count = l, this._extent = {}, Bu(this)
    }, kT._initDataFromProvider = function(t, e) {
        if (!(t >= e)) {
            for (var n, i = this._chunkSize, a = this._rawData, r = this._storage, o = this.dimensions, s = o.length, l = this._dimensionInfos, u = this._nameList, h = this._idList, c = this._rawExtent, d = this._nameRepeatCount = {}, f = this._chunkCount, g = 0; s > g; g++) {
                var p = o[g];
                c[p] || (c[p] = Uu());
                var m = l[p];
                0 === m.otherDims.itemName && (n = this._nameDimIdx = g), 0 === m.otherDims.itemId && (this._idDimIdx = g), r[p] || (r[p] = []), Ru(r, m, i, f, e), this._chunkCount = r[p].length
            }
            for (var v = new Array(s), y = t; e > y; y++) {
                v = a.getItem(y, v);
                for (var x = Math.floor(y / i), _ = y % i, w = 0; s > w; w++) {
                    var p = o[w],
                        b = r[p][x],
                        S = this._dimValueGetter(v, p, y, w);
                    b[_] = S;
                    var I = c[p];
                    S < I[0] && (I[0] = S), S > I[1] && (I[1] = S)
                }
                if (!a.pure) {
                    var M = u[y];
                    if (v && null == M)
                        if (null != v.name) u[y] = M = v.name;
                        else if (null != n) {
                        var D = o[n],
                            T = r[D][x];
                        if (T) {
                            M = T[_];
                            var A = l[D].ordinalMeta;
                            A && A.categories.length && (M = A.categories[M])
                        }
                    }
                    var C = null == v ? null : v.id;
                    null == C && null != M && (d[M] = d[M] || 0, C = M, d[M] > 0 && (C += "__ec__" + d[M]), d[M]++), null != C && (h[y] = C)
                }
            }!a.persistent && a.clean && a.clean(), this._rawCount = this._count = e, this._extent = {}, Bu(this)
        }
    }, kT.count = function() { return this._count }, kT.getIndices = function() {
        var t, e = this._indices;
        if (e) {
            var n = e.constructor,
                i = this._count;
            if (n === Array) { t = new n(i); for (var a = 0; i > a; a++) t[a] = e[a] } else t = new n(e.buffer, 0, i)
        } else
            for (var n = Ou(this), t = new n(this.count()), a = 0; a < t.length; a++) t[a] = a;
        return t
    }, kT.get = function(t, e) {
        if (!(e >= 0 && e < this._count)) return 0 / 0;
        var n = this._storage;
        if (!n[t]) return 0 / 0;
        e = this.getRawIndex(e);
        var i = Math.floor(e / this._chunkSize),
            a = e % this._chunkSize,
            r = n[t][i],
            o = r[a];
        return o
    }, kT.getByRawIndex = function(t, e) {
        if (!(e >= 0 && e < this._rawCount)) return 0 / 0;
        var n = this._storage[t];
        if (!n) return 0 / 0;
        var i = Math.floor(e / this._chunkSize),
            a = e % this._chunkSize,
            r = n[i];
        return r[a]
    }, kT._getFast = function(t, e) {
        var n = Math.floor(e / this._chunkSize),
            i = e % this._chunkSize,
            a = this._storage[t][n];
        return a[i]
    }, kT.getValues = function(t, e) {
        var n = [];
        _(t) || (e = t, t = this.dimensions);
        for (var i = 0, a = t.length; a > i; i++) n.push(this.get(t[i], e));
        return n
    }, kT.hasValue = function(t) {
        for (var e = this._dimensionsSummary.dataDimsOnCoord, n = 0, i = e.length; i > n; n++)
            if (isNaN(this.get(e[n], t))) return !1;
        return !0
    }, kT.getDataExtent = function(t) {
        t = this.getDimension(t);
        var e = this._storage[t],
            n = Uu();
        if (!e) return n;
        var i, a = this.count(),
            r = !this._indices;
        if (r) return this._rawExtent[t].slice();
        if (i = this._extent[t]) return i.slice();
        i = n;
        for (var o = i[0], s = i[1], l = 0; a > l; l++) {
            var u = this._getFast(t, this.getRawIndex(l));
            o > u && (o = u), u > s && (s = u)
        }
        return i = [o, s], this._extent[t] = i, i
    }, kT.getApproximateExtent = function(t) { return t = this.getDimension(t), this._approximateExtent[t] || this.getDataExtent(t) }, kT.setApproximateExtent = function(t, e) { e = this.getDimension(e), this._approximateExtent[e] = t.slice() }, kT.getCalculationInfo = function(t) { return this._calculationInfo[t] }, kT.setCalculationInfo = function(t, e) { wT(t) ? o(this._calculationInfo, t) : this._calculationInfo[t] = e }, kT.getSum = function(t) {
        var e = this._storage[t],
            n = 0;
        if (e)
            for (var i = 0, a = this.count(); a > i; i++) {
                var r = this.get(t, i);
                isNaN(r) || (n += r)
            }
        return n
    }, kT.getMedian = function(t) {
        var e = [];
        this.each(t, function(t) { isNaN(t) || e.push(t) });
        var n = [].concat(e).sort(function(t, e) { return t - e }),
            i = this.count();
        return 0 === i ? 0 : i % 2 === 1 ? n[(i - 1) / 2] : (n[i / 2] + n[i / 2 - 1]) / 2
    }, kT.rawIndexOf = function(t, e) {
        var n = t && this._invertedIndicesMap[t],
            i = n[e];
        return null == i || isNaN(i) ? ST : i
    }, kT.indexOfName = function(t) {
        for (var e = 0, n = this.count(); n > e; e++)
            if (this.getName(e) === t) return e;
        return -1
    }, kT.indexOfRawIndex = function(t) {
        if (t >= this._rawCount || 0 > t) return -1;
        if (!this._indices) return t;
        var e = this._indices,
            n = e[t];
        if (null != n && n < this._count && n === t) return t;
        for (var i = 0, a = this._count - 1; a >= i;) {
            var r = (i + a) / 2 | 0;
            if (e[r] < t) i = r + 1;
            else {
                if (!(e[r] > t)) return r;
                a = r - 1
            }
        }
        return -1
    }, kT.indicesOfNearest = function(t, e, n) {
        var i = this._storage,
            a = i[t],
            r = [];
        if (!a) return r;
        null == n && (n = 1 / 0);
        for (var o = Number.MAX_VALUE, s = -1, l = 0, u = this.count(); u > l; l++) {
            var h = e - this.get(t, l),
                c = Math.abs(h);
            n >= h && o >= c && ((o > c || h >= 0 && 0 > s) && (o = c, s = h, r.length = 0), r.push(l))
        }
        return r
    }, kT.getRawIndex = Gu, kT.getRawDataItem = function(t) {
        if (this._rawData.persistent) return this._rawData.getItem(this.getRawIndex(t));
        for (var e = [], n = 0; n < this.dimensions.length; n++) {
            var i = this.dimensions[n];
            e.push(this.get(i, t))
        }
        return e
    }, kT.getName = function(t) { var e = this.getRawIndex(t); return this._nameList[e] || Vu(this, this._nameDimIdx, e) || "" }, kT.getId = function(t) { return Wu(this, this.getRawIndex(t)) }, kT.each = function(t, e, n, i) {
        if (this._count) {
            "function" == typeof t && (i = n, n = e, e = t, t = []), n = n || i || this, t = g(Hu(t), this.getDimension, this);
            for (var a = t.length, r = 0; r < this.count(); r++) switch (a) {
                case 0:
                    e.call(n, r);
                    break;
                case 1:
                    e.call(n, this.get(t[0], r), r);
                    break;
                case 2:
                    e.call(n, this.get(t[0], r), this.get(t[1], r), r);
                    break;
                default:
                    for (var o = 0, s = []; a > o; o++) s[o] = this.get(t[o], r);
                    s[o] = r, e.apply(n, s)
            }
        }
    }, kT.filterSelf = function(t, e, n, i) {
        if (this._count) {
            "function" == typeof t && (i = n, n = e, e = t, t = []), n = n || i || this, t = g(Hu(t), this.getDimension, this);
            for (var a = this.count(), r = Ou(this), o = new r(a), s = [], l = t.length, u = 0, h = t[0], c = 0; a > c; c++) {
                var d, f = this.getRawIndex(c);
                if (0 === l) d = e.call(n, c);
                else if (1 === l) {
                    var p = this._getFast(h, f);
                    d = e.call(n, p, c)
                } else {
                    for (var m = 0; l > m; m++) s[m] = this._getFast(h, f);
                    s[m] = c, d = e.apply(n, s)
                }
                d && (o[u++] = f)
            }
            return a > u && (this._indices = o), this._count = u, this._extent = {}, this.getRawIndex = this._indices ? Fu : Gu, this
        }
    }, kT.selectRange = function(t) {
        if (this._count) {
            var e = [];
            for (var n in t) t.hasOwnProperty(n) && e.push(n);
            var i = e.length;
            if (i) {
                var a = this.count(),
                    r = Ou(this),
                    o = new r(a),
                    s = 0,
                    l = e[0],
                    u = t[l][0],
                    h = t[l][1],
                    c = !1;
                if (!this._indices) {
                    var d = 0;
                    if (1 === i) {
                        for (var f = this._storage[e[0]], g = 0; g < this._chunkCount; g++)
                            for (var p = f[g], m = Math.min(this._count - g * this._chunkSize, this._chunkSize), v = 0; m > v; v++) {
                                var y = p[v];
                                (y >= u && h >= y || isNaN(y)) && (o[s++] = d), d++
                            }
                        c = !0
                    } else if (2 === i) {
                        for (var f = this._storage[l], x = this._storage[e[1]], _ = t[e[1]][0], w = t[e[1]][1], g = 0; g < this._chunkCount; g++)
                            for (var p = f[g], b = x[g], m = Math.min(this._count - g * this._chunkSize, this._chunkSize), v = 0; m > v; v++) {
                                var y = p[v],
                                    S = b[v];
                                (y >= u && h >= y || isNaN(y)) && (S >= _ && w >= S || isNaN(S)) && (o[s++] = d), d++
                            }
                        c = !0
                    }
                }
                if (!c)
                    if (1 === i)
                        for (var v = 0; a > v; v++) {
                            var I = this.getRawIndex(v),
                                y = this._getFast(l, I);
                            (y >= u && h >= y || isNaN(y)) && (o[s++] = I)
                        } else
                            for (var v = 0; a > v; v++) {
                                for (var M = !0, I = this.getRawIndex(v), g = 0; i > g; g++) {
                                    var D = e[g],
                                        y = this._getFast(n, I);
                                    (y < t[D][0] || y > t[D][1]) && (M = !1)
                                }
                                M && (o[s++] = this.getRawIndex(v))
                            }
                return a > s && (this._indices = o), this._count = s, this._extent = {}, this.getRawIndex = this._indices ? Fu : Gu, this
            }
        }
    }, kT.mapArray = function(t, e, n, i) { "function" == typeof t && (i = n, n = e, e = t, t = []), n = n || i || this; var a = []; return this.each(t, function() { a.push(e && e.apply(this, arguments)) }, n), a }, kT.map = function(t, e, n, i) {
        n = n || i || this, t = g(Hu(t), this.getDimension, this);
        var a = Xu(this, t);
        a._indices = this._indices, a.getRawIndex = a._indices ? Fu : Gu;
        for (var r = a._storage, o = [], s = this._chunkSize, l = t.length, u = this.count(), h = [], c = a._rawExtent, d = 0; u > d; d++) {
            for (var f = 0; l > f; f++) h[f] = this.get(t[f], d);
            h[l] = d;
            var p = e && e.apply(n, h);
            if (null != p) {
                "object" != typeof p && (o[0] = p, p = o);
                for (var m = this.getRawIndex(d), v = Math.floor(m / s), y = m % s, x = 0; x < p.length; x++) {
                    var _ = t[x],
                        w = p[x],
                        b = c[_],
                        S = r[_];
                    S && (S[v][y] = w), w < b[0] && (b[0] = w), w > b[1] && (b[1] = w)
                }
            }
        }
        return a
    }, kT.downSample = function(t, e, n, i) {
        for (var a = Xu(this, [t]), r = a._storage, o = [], s = Math.floor(1 / e), l = r[t], u = this.count(), h = this._chunkSize, c = a._rawExtent[t], d = new(Ou(this))(u), f = 0, g = 0; u > g; g += s) {
            s > u - g && (s = u - g, o.length = s);
            for (var p = 0; s > p; p++) {
                var m = this.getRawIndex(g + p),
                    v = Math.floor(m / h),
                    y = m % h;
                o[p] = l[v][y]
            }
            var x = n(o),
                _ = this.getRawIndex(Math.min(g + i(o, x) || 0, u - 1)),
                w = Math.floor(_ / h),
                b = _ % h;
            l[w][b] = x, x < c[0] && (c[0] = x), x > c[1] && (c[1] = x), d[f++] = _
        }
        return a._count = f, a._indices = d, a.getRawIndex = Fu, a
    }, kT.getItemModel = function(t) { var e = this.hostModel; return new to(this.getRawDataItem(t), e, e && e.ecModel) }, kT.diff = function(t) { var e = this; return new Au(t ? t.getIndices() : [], this.getIndices(), function(e) { return Wu(t, e) }, function(t) { return Wu(e, t) }) }, kT.getVisual = function(t) { var e = this._visual; return e && e[t] }, kT.setVisual = function(t, e) {
        if (wT(t))
            for (var n in t) t.hasOwnProperty(n) && this.setVisual(n, t[n]);
        else this._visual = this._visual || {}, this._visual[t] = e
    }, kT.setLayout = function(t, e) {
        if (wT(t))
            for (var n in t) t.hasOwnProperty(n) && this.setLayout(n, t[n]);
        else this._layout[t] = e
    }, kT.getLayout = function(t) { return this._layout[t] }, kT.getItemLayout = function(t) { return this._itemLayouts[t] }, kT.setItemLayout = function(t, e, n) { this._itemLayouts[t] = n ? o(this._itemLayouts[t] || {}, e) : e }, kT.clearItemLayouts = function() { this._itemLayouts.length = 0 }, kT.getItemVisual = function(t, e, n) {
        var i = this._itemVisuals[t],
            a = i && i[e];
        return null != a || n ? a : this.getVisual(e)
    }, kT.setItemVisual = function(t, e, n) {
        var i = this._itemVisuals[t] || {},
            a = this.hasItemVisual;
        if (this._itemVisuals[t] = i, wT(e))
            for (var r in e) e.hasOwnProperty(r) && (i[r] = e[r], a[r] = !0);
        else i[e] = n, a[e] = !0
    }, kT.clearAllVisual = function() { this._visual = {}, this._itemVisuals = [], this.hasItemVisual = {} };
    var NT = function(t) { t.seriesIndex = this.seriesIndex, t.dataIndex = this.dataIndex, t.dataType = this.dataType };
    kT.setItemGraphicEl = function(t, e) {
        var n = this.hostModel;
        e && (e.dataIndex = t, e.dataType = this.dataType, e.seriesIndex = n && n.seriesIndex, "group" === e.type && e.traverse(NT, e)), this._graphicEls[t] = e
    }, kT.getItemGraphicEl = function(t) { return this._graphicEls[t] }, kT.eachItemGraphicEl = function(t, e) { f(this._graphicEls, function(n, i) { n && t && t.call(e, n, i) }) }, kT.cloneShallow = function(t) {
        if (!t) {
            var e = g(this.dimensions, this.getDimensionInfo, this);
            t = new PT(e, this.hostModel)
        }
        if (t._storage = this._storage, zu(t, this), this._indices) {
            var n = this._indices.constructor;
            t._indices = new n(this._indices)
        } else t._indices = null;
        return t.getRawIndex = t._indices ? Fu : Gu, t
    }, kT.wrapMethod = function(t, e) { var n = this[t]; "function" == typeof n && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(t), this[t] = function() { var t = n.apply(this, arguments); return e.apply(this, [t].concat(P(arguments))) }) }, kT.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "map"], kT.CHANGABLE_METHODS = ["filterSelf", "selectRange"];
    var OT = function(t, e) { return e = e || {}, ju(e.coordDimensions || [], t, { dimsDef: e.dimensionsDefine || t.dimensionsDefine, encodeDef: e.encodeDefine || t.encodeDefine, dimCount: e.dimensionsCount, generateCoord: e.generateCoord, generateCoordCount: e.generateCoordCount }) };
    nh.prototype.parse = function(t) { return t }, nh.prototype.getSetting = function(t) { return this._setting[t] }, nh.prototype.contain = function(t) { var e = this._extent; return t >= e[0] && t <= e[1] }, nh.prototype.normalize = function(t) { var e = this._extent; return e[1] === e[0] ? .5 : (t - e[0]) / (e[1] - e[0]) }, nh.prototype.scale = function(t) { var e = this._extent; return t * (e[1] - e[0]) + e[0] }, nh.prototype.unionExtent = function(t) {
        var e = this._extent;
        t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1])
    }, nh.prototype.unionExtentFromData = function(t, e) { this.unionExtent(t.getApproximateExtent(e)) }, nh.prototype.getExtent = function() { return this._extent.slice() }, nh.prototype.setExtent = function(t, e) {
        var n = this._extent;
        isNaN(t) || (n[0] = t), isNaN(e) || (n[1] = e)
    }, nh.prototype.isBlank = function() { return this._isBlank }, nh.prototype.setBlank = function(t) { this._isBlank = t }, nh.prototype.getLabel = null, aa(nh), la(nh, { registerWhenExtend: !0 }), ih.createByAxisModel = function(t) {
        var e = t.option,
            n = e.data,
            i = n && g(n, rh);
        return new ih({ categories: i, needCollect: !i, deduplication: e.dedplication !== !1 })
    };
    var ET = ih.prototype;
    ET.getOrdinal = function(t) { return ah(this).get(t) }, ET.parseAndCollect = function(t) { var e, n = this._needCollect; if ("string" != typeof t && !n) return t; if (n && !this._deduplication) return e = this.categories.length, this.categories[e] = t, e; var i = ah(this); return e = i.get(t), null == e && (n ? (e = this.categories.length, this.categories[e] = t, i.set(t, e)) : e = 0 / 0), e };
    var zT = nh.prototype,
        RT = nh.extend({
            type: "ordinal",
            init: function(t, e) {
                (!t || _(t)) && (t = new ih({ categories: t })), this._ordinalMeta = t, this._extent = e || [0, t.categories.length - 1]
            },
            parse: function(t) { return "string" == typeof t ? this._ordinalMeta.getOrdinal(t) : Math.round(t) },
            contain: function(t) { return t = this.parse(t), zT.contain.call(this, t) && null != this._ordinalMeta.categories[t] },
            normalize: function(t) { return zT.normalize.call(this, this.parse(t)) },
            scale: function(t) { return Math.round(zT.scale.call(this, t)) },
            getTicks: function() { for (var t = [], e = this._extent, n = e[0]; n <= e[1];) t.push(n), n++; return t },
            getLabel: function(t) { return this.isBlank() ? void 0 : this._ordinalMeta.categories[t] },
            count: function() { return this._extent[1] - this._extent[0] + 1 },
            unionExtentFromData: function(t, e) { this.unionExtent(t.getApproximateExtent(e)) },
            getOrdinalMeta: function() { return this._ordinalMeta },
            niceTicks: G,
            niceExtent: G
        });
    RT.create = function() { return new RT };
    var BT = uo,
        VT = uo,
        GT = nh.extend({
            type: "interval",
            _interval: 0,
            _intervalPrecision: 2,
            setExtent: function(t, e) {
                var n = this._extent;
                isNaN(t) || (n[0] = parseFloat(t)), isNaN(e) || (n[1] = parseFloat(e))
            },
            unionExtent: function(t) {
                var e = this._extent;
                t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]), GT.prototype.setExtent.call(this, e[0], e[1])
            },
            getInterval: function() { return this._interval },
            setInterval: function(t) { this._interval = t, this._niceExtent = this._extent.slice(), this._intervalPrecision = sh(t) },
            getTicks: function() { return hh(this._interval, this._extent, this._niceExtent, this._intervalPrecision) },
            getLabel: function(t, e) { if (null == t) return ""; var n = e && e.precision; return null == n ? n = fo(t) || 0 : "auto" === n && (n = this._intervalPrecision), t = VT(t, n, !0), Mo(t) },
            niceTicks: function(t, e, n) {
                t = t || 5;
                var i = this._extent,
                    a = i[1] - i[0];
                if (isFinite(a)) {
                    0 > a && (a = -a, i.reverse());
                    var r = oh(i, t, e, n);
                    this._intervalPrecision = r.intervalPrecision, this._interval = r.interval, this._niceExtent = r.niceTickExtent
                }
            },
            niceExtent: function(t) {
                var e = this._extent;
                if (e[0] === e[1])
                    if (0 !== e[0]) {
                        var n = e[0];
                        t.fixMax ? e[0] -= n / 2 : (e[1] += n / 2, e[0] -= n / 2)
                    } else e[1] = 1;
                var i = e[1] - e[0];
                isFinite(i) || (e[0] = 0, e[1] = 1), this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval);
                var a = this._interval;
                t.fixMin || (e[0] = VT(Math.floor(e[0] / a) * a)), t.fixMax || (e[1] = VT(Math.ceil(e[1] / a) * a))
            }
        });
    GT.create = function() { return new GT };
    var FT = "__ec_stack_",
        WT = .5,
        HT = "undefined" != typeof Float32Array ? Float32Array : Array,
        XT = {
            seriesType: "bar",
            plan: $M(),
            reset: function(t) {
                function e(t, e) {
                    for (var n, c = t.count, d = new HT(2 * c), f = new HT(c), g = [], p = [], m = 0, v = 0; null != (n = t.next());) p[u] = e.get(o, n), p[1 - u] = e.get(s, n), g = i.dataToPoint(p, null, g), d[m++] = g[0], d[m++] = g[1], f[v++] = n;
                    e.setLayout({ largePoints: d, largeDataIndices: f, barWidth: h, valueAxisStart: bh(a, r, !1), valueAxisHorizontal: l })
                }
                if (_h(t) && wh(t)) {
                    var n = t.getData(),
                        i = t.coordinateSystem,
                        a = i.getBaseAxis(),
                        r = i.getOtherAxis(a),
                        o = n.mapDimension(r.dim),
                        s = n.mapDimension(a.dim),
                        l = r.isHorizontal(),
                        u = l ? 0 : 1,
                        h = yh(mh([t]), a, t).width;
                    return h > WT || (h = WT), { progress: e }
                }
            }
        },
        YT = GT.prototype,
        UT = Math.ceil,
        jT = Math.floor,
        ZT = 1e3,
        qT = 60 * ZT,
        KT = 60 * qT,
        $T = 24 * KT,
        JT = function(t, e, n, i) {
            for (; i > n;) {
                var a = n + i >>> 1;
                t[a][1] < e ? n = a + 1 : i = a
            }
            return n
        },
        QT = GT.extend({
            type: "time",
            getLabel: function(t) {
                var e = this._stepLvl,
                    n = new Date(t);
                return ko(e[0], n, this.getSetting("useUTC"))
            },
            niceExtent: function(t) {
                var e = this._extent;
                if (e[0] === e[1] && (e[0] -= $T, e[1] += $T), e[1] === -1 / 0 && 1 / 0 === e[0]) {
                    var n = new Date;
                    e[1] = +new Date(n.getFullYear(), n.getMonth(), n.getDate()), e[0] = e[1] - $T
                }
                this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval);
                var i = this._interval;
                t.fixMin || (e[0] = uo(jT(e[0] / i) * i)), t.fixMax || (e[1] = uo(UT(e[1] / i) * i))
            },
            niceTicks: function(t, e, n) {
                t = t || 10;
                var i = this._extent,
                    a = i[1] - i[0],
                    r = a / t;
                null != e && e > r && (r = e), null != n && r > n && (r = n);
                var o = tA.length,
                    s = JT(tA, r, 0, o),
                    l = tA[Math.min(s, o - 1)],
                    u = l[1];
                if ("year" === l[0]) {
                    var h = a / u,
                        c = wo(h / t, !0);
                    u *= c
                }
                var d = this.getSetting("useUTC") ? 0 : 60 * new Date(+i[0] || +i[1]).getTimezoneOffset() * 1e3,
                    f = [Math.round(UT((i[0] - d) / u) * u + d), Math.round(jT((i[1] - d) / u) * u + d)];
                uh(f, i), this._stepLvl = l, this._interval = u, this._niceExtent = f
            },
            parse: function(t) { return +yo(t) }
        });
    f(["contain", "normalize"], function(t) { QT.prototype[t] = function(e) { return YT[t].call(this, this.parse(e)) } });
    var tA = [
        ["hh:mm:ss", ZT],
        ["hh:mm:ss", 5 * ZT],
        ["hh:mm:ss", 10 * ZT],
        ["hh:mm:ss", 15 * ZT],
        ["hh:mm:ss", 30 * ZT],
        ["hh:mm\nMM-dd", qT],
        ["hh:mm\nMM-dd", 5 * qT],
        ["hh:mm\nMM-dd", 10 * qT],
        ["hh:mm\nMM-dd", 15 * qT],
        ["hh:mm\nMM-dd", 30 * qT],
        ["hh:mm\nMM-dd", KT],
        ["hh:mm\nMM-dd", 2 * KT],
        ["hh:mm\nMM-dd", 6 * KT],
        ["hh:mm\nMM-dd", 12 * KT],
        ["MM-dd\nyyyy", $T],
        ["MM-dd\nyyyy", 2 * $T],
        ["MM-dd\nyyyy", 3 * $T],
        ["MM-dd\nyyyy", 4 * $T],
        ["MM-dd\nyyyy", 5 * $T],
        ["MM-dd\nyyyy", 6 * $T],
        ["week", 7 * $T],
        ["MM-dd\nyyyy", 10 * $T],
        ["week", 14 * $T],
        ["week", 21 * $T],
        ["month", 31 * $T],
        ["week", 42 * $T],
        ["month", 62 * $T],
        ["week", 70 * $T],
        ["quarter", 95 * $T],
        ["month", 31 * $T * 4],
        ["month", 31 * $T * 5],
        ["half-year", 380 * $T / 2],
        ["month", 31 * $T * 8],
        ["month", 31 * $T * 10],
        ["year", 380 * $T]
    ];
    QT.create = function(t) { return new QT({ useUTC: t.ecModel.get("useUTC") }) };
    var eA = nh.prototype,
        nA = GT.prototype,
        iA = fo,
        aA = uo,
        rA = Math.floor,
        oA = Math.ceil,
        sA = Math.pow,
        lA = Math.log,
        uA = nh.extend({
            type: "log",
            base: 10,
            $constructor: function() { nh.apply(this, arguments), this._originalScale = new GT },
            getTicks: function() {
                var t = this._originalScale,
                    e = this._extent,
                    n = t.getExtent();
                return g(nA.getTicks.call(this), function(i) { var a = uo(sA(this.base, i)); return a = i === e[0] && t.__fixMin ? Sh(a, n[0]) : a, a = i === e[1] && t.__fixMax ? Sh(a, n[1]) : a }, this)
            },
            getLabel: nA.getLabel,
            scale: function(t) { return t = eA.scale.call(this, t), sA(this.base, t) },
            setExtent: function(t, e) {
                var n = this.base;
                t = lA(t) / lA(n), e = lA(e) / lA(n), nA.setExtent.call(this, t, e)
            },
            getExtent: function() {
                var t = this.base,
                    e = eA.getExtent.call(this);
                e[0] = sA(t, e[0]), e[1] = sA(t, e[1]);
                var n = this._originalScale,
                    i = n.getExtent();
                return n.__fixMin && (e[0] = Sh(e[0], i[0])), n.__fixMax && (e[1] = Sh(e[1], i[1])), e
            },
            unionExtent: function(t) {
                this._originalScale.unionExtent(t);
                var e = this.base;
                t[0] = lA(t[0]) / lA(e), t[1] = lA(t[1]) / lA(e), eA.unionExtent.call(this, t)
            },
            unionExtentFromData: function(t, e) { this.unionExtent(t.getApproximateExtent(e)) },
            niceTicks: function(t) {
                t = t || 10;
                var e = this._extent,
                    n = e[1] - e[0];
                if (!(1 / 0 === n || 0 >= n)) {
                    var i = xo(n),
                        a = t / n * i;
                    for (.5 >= a && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0;) i *= 10;
                    var r = [uo(oA(e[0] / i) * i), uo(rA(e[1] / i) * i)];
                    this._interval = i, this._niceExtent = r
                }
            },
            niceExtent: function(t) {
                nA.niceExtent.call(this, t);
                var e = this._originalScale;
                e.__fixMin = t.fixMin, e.__fixMax = t.fixMax
            }
        });
    f(["contain", "normalize"], function(t) { uA.prototype[t] = function(e) { return e = lA(e) / lA(this.base), eA[t].call(this, e) } }), uA.create = function() { return new uA };
    var hA = {
            getMin: function(t) {
                var e = this.option,
                    n = t || null == e.rangeStart ? e.min : e.rangeStart;
                return this.axis && null != n && "dataMin" !== n && "function" != typeof n && !T(n) && (n = this.axis.scale.parse(n)), n
            },
            getMax: function(t) {
                var e = this.option,
                    n = t || null == e.rangeEnd ? e.max : e.rangeEnd;
                return this.axis && null != n && "dataMax" !== n && "function" != typeof n && !T(n) && (n = this.axis.scale.parse(n)), n
            },
            getNeedCrossZero: function() { var t = this.option; return null != t.rangeStart || null != t.rangeEnd ? !1 : !t.scale },
            getCoordSysModel: G,
            setRange: function(t, e) { this.option.rangeStart = t, this.option.rangeEnd = e },
            resetRange: function() { this.option.rangeStart = this.option.rangeEnd = null }
        },
        cA = nr({
            type: "triangle",
            shape: { cx: 0, cy: 0, width: 0, height: 0 },
            buildPath: function(t, e) {
                var n = e.cx,
                    i = e.cy,
                    a = e.width / 2,
                    r = e.height / 2;
                t.moveTo(n, i - r), t.lineTo(n + a, i + r), t.lineTo(n - a, i + r), t.closePath()
            }
        }),
        dA = nr({
            type: "diamond",
            shape: { cx: 0, cy: 0, width: 0, height: 0 },
            buildPath: function(t, e) {
                var n = e.cx,
                    i = e.cy,
                    a = e.width / 2,
                    r = e.height / 2;
                t.moveTo(n, i - r), t.lineTo(n + a, i), t.lineTo(n, i + r), t.lineTo(n - a, i), t.closePath()
            }
        }),
        fA = nr({
            type: "pin",
            shape: { x: 0, y: 0, width: 0, height: 0 },
            buildPath: function(t, e) {
                var n = e.x,
                    i = e.y,
                    a = e.width / 5 * 3,
                    r = Math.max(a, e.height),
                    o = a / 2,
                    s = o * o / (r - o),
                    l = i - r + o + s,
                    u = Math.asin(s / o),
                    h = Math.cos(u) * o,
                    c = Math.sin(u),
                    d = Math.cos(u),
                    f = .6 * o,
                    g = .7 * o;
                t.moveTo(n - h, l + s), t.arc(n, l, o, Math.PI - u, 2 * Math.PI + u), t.bezierCurveTo(n + h - c * f, l + s + d * f, n, i - g, n, i), t.bezierCurveTo(n, i - g, n - h + c * f, l + s + d * f, n - h, l + s), t.closePath()
            }
        }),
        gA = nr({
            type: "arrow",
            shape: { x: 0, y: 0, width: 0, height: 0 },
            buildPath: function(t, e) {
                var n = e.height,
                    i = e.width,
                    a = e.x,
                    r = e.y,
                    o = i / 3 * 2;
                t.moveTo(a, r), t.lineTo(a + o, r + n), t.lineTo(a, r + n / 4 * 3), t.lineTo(a - o, r + n), t.lineTo(a, r), t.closePath()
            }
        }),
        pA = { line: fI, rect: cI, roundRect: cI, square: cI, circle: tI, diamond: dA, pin: fA, arrow: gA, triangle: cA },
        mA = {
            line: function(t, e, n, i, a) { a.x1 = t, a.y1 = e + i / 2, a.x2 = t + n, a.y2 = e + i / 2 },
            rect: function(t, e, n, i, a) { a.x = t, a.y = e, a.width = n, a.height = i },
            roundRect: function(t, e, n, i, a) { a.x = t, a.y = e, a.width = n, a.height = i, a.r = Math.min(n, i) / 4 },
            square: function(t, e, n, i, a) {
                var r = Math.min(n, i);
                a.x = t, a.y = e, a.width = r, a.height = r
            },
            circle: function(t, e, n, i, a) { a.cx = t + n / 2, a.cy = e + i / 2, a.r = Math.min(n, i) / 2 },
            diamond: function(t, e, n, i, a) { a.cx = t + n / 2, a.cy = e + i / 2, a.width = n, a.height = i },
            pin: function(t, e, n, i, a) { a.x = t + n / 2, a.y = e + i / 2, a.width = n, a.height = i },
            arrow: function(t, e, n, i, a) { a.x = t + n / 2, a.y = e + i / 2, a.width = n, a.height = i },
            triangle: function(t, e, n, i, a) { a.cx = t + n / 2, a.cy = e + i / 2, a.width = n, a.height = i }
        },
        vA = {};
    f(pA, function(t, e) { vA[e] = new t });
    var yA = nr({
            type: "symbol",
            shape: { symbolType: "", x: 0, y: 0, width: 0, height: 0 },
            calculateTextPosition: function(t, e, n) {
                var i = Un(t, e, n),
                    a = this.shape;
                return a && "pin" === a.symbolType && "inside" === e.textPosition && (i.y = n.y + .4 * n.height), i
            },
            buildPath: function(t, e, n) {
                var i = e.symbolType;
                if ("none" !== i) {
                    var a = vA[i];
                    a || (i = "rect", a = vA[i]), mA[i](e.x, e.y, e.width, e.height, a.shape), a.buildPath(t, a.shape, n)
                }
            }
        }),
        xA = { isDimensionStacked: $u, enableDataStack: Ku, getStackedDimension: Ju },
        _A = (Object.freeze || Object)({ createList: Rh, getLayoutRect: Bo, dataStack: xA, createScale: Bh, mixinAxisModelCommonMethods: Vh, completeDimensions: ju, createDimensions: OT, createSymbol: zh }),
        wA = 1e-8;
    Wh.prototype = {
        constructor: Wh,
        properties: null,
        getBoundingRect: function() {
            var t = this._rect;
            if (t) return t;
            for (var e = Number.MAX_VALUE, n = [e, e], i = [-e, -e], a = [], r = [], o = this.geometries, s = 0; s < o.length; s++)
                if ("polygon" === o[s].type) {
                    var l = o[s].exterior;
                    Sa(l, a, r), oe(n, n, a), se(i, i, r)
                }
            return 0 === s && (n[0] = n[1] = i[0] = i[1] = 0), this._rect = new bn(n[0], n[1], i[0] - n[0], i[1] - n[1])
        },
        contain: function(t) {
            var e = this.getBoundingRect(),
                n = this.geometries;
            if (!e.contain(t[0], t[1])) return !1;
            t: for (var i = 0, a = n.length; a > i; i++)
                if ("polygon" === n[i].type) {
                    var r = n[i].exterior,
                        o = n[i].interiors;
                    if (Fh(r, t[0], t[1])) {
                        for (var s = 0; s < (o ? o.length : 0); s++)
                            if (Fh(o[s])) continue t;
                        return !0
                    }
                }
            return !1
        },
        transformTo: function(t, e, n, i) {
            var a = this.getBoundingRect(),
                r = a.width / a.height;
            n ? i || (i = n / r) : n = r * i;
            for (var o = new bn(t, e, n, i), s = a.calculateTransform(o), l = this.geometries, u = 0; u < l.length; u++)
                if ("polygon" === l[u].type) {
                    for (var h = l[u].exterior, c = l[u].interiors, d = 0; d < h.length; d++) re(h[d], h[d], s);
                    for (var f = 0; f < (c ? c.length : 0); f++)
                        for (var d = 0; d < c[f].length; d++) re(c[f][d], c[f][d], s)
                }
            a = this._rect, a.copy(o), this.center = [a.x + a.width / 2, a.y + a.height / 2]
        },
        cloneShallow: function(t) { null == t && (t = this.name); var e = new Wh(t, this.geometries, this.center); return e._rect = this._rect, e.transformTo = null, e }
    };
    var bA = function(t) {
            return Hh(t), g(m(t.features, function(t) { return t.geometry && t.properties && t.geometry.coordinates.length > 0 }), function(t) {
                var e = t.properties,
                    n = t.geometry,
                    i = n.coordinates,
                    a = [];
                "Polygon" === n.type && a.push({ type: "polygon", exterior: i[0], interiors: i.slice(1) }), "MultiPolygon" === n.type && f(i, function(t) { t[0] && a.push({ type: "polygon", exterior: t[0], interiors: t.slice(1) }) });
                var r = new Wh(e.name, a, e.cp);
                return r.properties = e, r
            })
        },
        SA = qi(),
        IA = [0, 1],
        MA = function(t, e, n) { this.dim = t, this.scale = e, this._extent = n || [0, 0], this.inverse = !1, this.onBand = !1 };
    MA.prototype = {
        constructor: MA,
        contain: function(t) {
            var e = this._extent,
                n = Math.min(e[0], e[1]),
                i = Math.max(e[0], e[1]);
            return t >= n && i >= t
        },
        containData: function(t) { return this.contain(this.dataToCoord(t)) },
        getExtent: function() { return this._extent.slice() },
        getPixelPrecision: function(t) { return go(t || this.scale.getExtent(), this._extent) },
        setExtent: function(t, e) {
            var n = this._extent;
            n[0] = t, n[1] = e
        },
        dataToCoord: function(t, e) {
            var n = this._extent,
                i = this.scale;
            return t = i.normalize(t), this.onBand && "ordinal" === i.type && (n = n.slice(), rc(n, i.count())), so(t, IA, n, e)
        },
        coordToData: function(t, e) {
            var n = this._extent,
                i = this.scale;
            this.onBand && "ordinal" === i.type && (n = n.slice(), rc(n, i.count()));
            var a = so(t, n, IA, e);
            return this.scale.scale(a)
        },
        pointToData: function() {},
        getTicksCoords: function(t) {
            t = t || {};
            var e = t.tickModel || this.getTickModel(),
                n = Uh(this, e),
                i = n.ticks,
                a = g(i, function(t) { return { coord: this.dataToCoord(t), tickValue: t } }, this),
                r = e.get("alignWithLabel");
            return oc(this, a, r, t.clamp), a
        },
        getViewLabels: function() { return Yh(this).labels },
        getLabelModel: function() { return this.model.getModel("axisLabel") },
        getTickModel: function() { return this.model.getModel("axisTick") },
        getBandWidth: function() {
            var t = this._extent,
                e = this.scale.getExtent(),
                n = e[1] - e[0] + (this.onBand ? 1 : 0);
            0 === n && (n = 1);
            var i = Math.abs(t[1] - t[0]);
            return Math.abs(i) / n
        },
        isHorizontal: null,
        getRotate: null,
        calculateCategoryInterval: function() { return ec(this) }
    };
    var DA = bA,
        TA = {};
    f(["map", "each", "filter", "indexOf", "inherits", "reduce", "filter", "bind", "curry", "isArray", "isString", "isObject", "isFunction", "extend", "defaults", "clone", "merge"], function(t) { TA[t] = G_[t] });
    var AA = {};
    f(["extendShape", "extendPath", "makePath", "makeImage", "mergePath", "resizePath", "createIcon", "setHoverStyle", "setLabelStyle", "setTextStyle", "setText", "getFont", "updateProps", "initProps", "getTransform", "clipPointsByRect", "clipRectByRect", "registerShape", "getShapeClass", "Group", "Image", "Text", "Circle", "Sector", "Ring", "Polygon", "Polyline", "Rect", "Line", "BezierCurve", "Arc", "IncrementalDisplayable", "CompoundPath", "LinearGradient", "RadialGradient", "BoundingRect"], function(t) { AA[t] = zI[t] });
    var CA = function(t) { this._axes = {}, this._dimList = [], this.name = t || "" };
    CA.prototype = {
        constructor: CA,
        type: "cartesian",
        getAxis: function(t) { return this._axes[t] },
        getAxes: function() { return g(this._dimList, sc, this) },
        getAxesByScale: function(t) { return t = t.toLowerCase(), m(this.getAxes(), function(e) { return e.scale.type === t }) },
        addAxis: function(t) {
            var e = t.dim;
            this._axes[e] = t, this._dimList.push(e)
        },
        dataToCoord: function(t) { return this._dataCoordConvert(t, "dataToCoord") },
        coordToData: function(t) { return this._dataCoordConvert(t, "coordToData") },
        _dataCoordConvert: function(t, e) {
            for (var n = this._dimList, i = t instanceof Array ? [] : {}, a = 0; a < n.length; a++) {
                var r = n[a],
                    o = this._axes[r];
                i[r] = o[e](t[r])
            }
            return i
        }
    }, lc.prototype = {
        constructor: lc,
        type: "cartesian2d",
        dimensions: ["x", "y"],
        getBaseAxis: function() { return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x") },
        containPoint: function(t) {
            var e = this.getAxis("x"),
                n = this.getAxis("y");
            return e.contain(e.toLocalCoord(t[0])) && n.contain(n.toLocalCoord(t[1]))
        },
        containData: function(t) { return this.getAxis("x").containData(t[0]) && this.getAxis("y").containData(t[1]) },
        dataToPoint: function(t, e, n) {
            var i = this.getAxis("x"),
                a = this.getAxis("y");
            return n = n || [], n[0] = i.toGlobalCoord(i.dataToCoord(t[0])), n[1] = a.toGlobalCoord(a.dataToCoord(t[1])), n
        },
        clampData: function(t, e) {
            var n = this.getAxis("x").scale,
                i = this.getAxis("y").scale,
                a = n.getExtent(),
                r = i.getExtent(),
                o = n.parse(t[0]),
                s = i.parse(t[1]);
            return e = e || [], e[0] = Math.min(Math.max(Math.min(a[0], a[1]), o), Math.max(a[0], a[1])), e[1] = Math.min(Math.max(Math.min(r[0], r[1]), s), Math.max(r[0], r[1])), e
        },
        pointToData: function(t, e) {
            var n = this.getAxis("x"),
                i = this.getAxis("y");
            return e = e || [], e[0] = n.coordToData(n.toLocalCoord(t[0])), e[1] = i.coordToData(i.toLocalCoord(t[1])), e
        },
        getOtherAxis: function(t) { return this.getAxis("x" === t.dim ? "y" : "x") },
        getArea: function() {
            var t = this.getAxis("x").getGlobalExtent(),
                e = this.getAxis("y").getGlobalExtent(),
                n = Math.min(t[0], t[1]),
                i = Math.min(e[0], e[1]),
                a = Math.max(t[0], t[1]) - n,
                r = Math.max(e[0], e[1]) - i,
                o = new bn(n, i, a, r);
            return o
        }
    }, h(lc, CA);
    var LA = function(t, e, n, i, a) { MA.call(this, t, e, n), this.type = i || "value", this.position = a || "bottom" };
    LA.prototype = { constructor: LA, index: 0, getAxesOnZeroOf: null, model: null, isHorizontal: function() { var t = this.position; return "top" === t || "bottom" === t }, getGlobalExtent: function(t) { var e = this.getExtent(); return e[0] = this.toGlobalCoord(e[0]), e[1] = this.toGlobalCoord(e[1]), t && e[0] > e[1] && e.reverse(), e }, getOtherAxis: function() { this.grid.getOtherAxis() }, pointToData: function(t, e) { return this.coordToData(this.toLocalCoord(t["x" === this.dim ? 0 : 1]), e) }, toLocalCoord: null, toGlobalCoord: null }, h(LA, MA);
    var PA = { show: !0, zlevel: 0, z: 0, inverse: !1, name: "", nameLocation: "end", nameRotate: null, nameTruncate: { maxWidth: null, ellipsis: "...", placeholder: "." }, nameTextStyle: {}, nameGap: 15, silent: !1, triggerEvent: !1, tooltip: { show: !1 }, axisPointer: {}, axisLine: { show: !0, onZero: !0, onZeroAxisIndex: null, lineStyle: { color: "#333", width: 1, type: "solid" }, symbol: ["none", "none"], symbolSize: [10, 15] }, axisTick: { show: !0, inside: !1, length: 5, lineStyle: { width: 1 } }, axisLabel: { show: !0, inside: !1, rotate: 0, showMinLabel: null, showMaxLabel: null, margin: 8, fontSize: 12 }, splitLine: { show: !0, lineStyle: { color: ["#ccc"], width: 1, type: "solid" } }, splitArea: { show: !1, areaStyle: { color: ["rgba(250,250,250,0.3)", "rgba(200,200,200,0.3)"] } } },
        kA = {};
    kA.categoryAxis = a({ boundaryGap: !0, deduplication: null, splitLine: { show: !1 }, axisTick: { alignWithLabel: !1, interval: "auto" }, axisLabel: { interval: "auto" } }, PA), kA.valueAxis = a({ boundaryGap: [0, 0], splitNumber: 5 }, PA), kA.timeAxis = s({ scale: !0, min: "dataMin", max: "dataMax" }, kA.valueAxis), kA.logAxis = s({ scale: !0, logBase: 10 }, kA.valueAxis);
    var NA = ["value", "category", "time", "log"],
        OA = function(t, e, n, i) {
            f(NA, function(o) {
                e.extend({
                    type: t + "Axis." + o,
                    mergeDefaultAndTheme: function(e, i) {
                        var r = this.layoutMode,
                            s = r ? Wo(e) : {},
                            l = i.getTheme();
                        a(e, l.get(o + "Axis")), a(e, this.getDefaultOption()), e.type = n(t, e), r && Fo(e, s, r)
                    },
                    optionUpdated: function() { var t = this.option; "category" === t.type && (this.__ordinalMeta = ih.createByAxisModel(this)) },
                    getCategories: function(t) { var e = this.option; return "category" === e.type ? t ? e.data : this.__ordinalMeta.categories : void 0 },
                    getOrdinalMeta: function() { return this.__ordinalMeta },
                    defaultOption: r([{}, kA[o + "Axis"], i], !0)
                })
            }), sM.registerSubTypeDefaulter(t + "Axis", x(n, t))
        },
        EA = sM.extend({ type: "cartesian2dAxis", axis: null, init: function() { EA.superApply(this, "init", arguments), this.resetRange() }, mergeOption: function() { EA.superApply(this, "mergeOption", arguments), this.resetRange() }, restoreData: function() { EA.superApply(this, "restoreData", arguments), this.resetRange() }, getCoordSysModel: function() { return this.ecModel.queryComponents({ mainType: "grid", index: this.option.gridIndex, id: this.option.gridId })[0] } });
    a(EA.prototype, hA);
    var zA = { offset: 0 };
    OA("x", EA, uc, zA), OA("y", EA, uc, zA), sM.extend({ type: "grid", dependencies: ["xAxis", "yAxis"], layoutMode: "box", coordinateSystem: null, defaultOption: { show: !1, zlevel: 0, z: 0, left: "10%", top: 60, right: "10%", bottom: 60, containLabel: !1, backgroundColor: "rgba(0,0,0,0)", borderWidth: 1, borderColor: "#ccc" } });
    var RA = cc.prototype;
    RA.type = "grid", RA.axisPointerEnabled = !0, RA.getRect = function() { return this._rect }, RA.update = function(t, e) {
        var n = this._axesMap;
        this._updateScale(t, this.model), f(n.x, function(t) { Dh(t.scale, t.model) }), f(n.y, function(t) { Dh(t.scale, t.model) });
        var i = {};
        f(n.x, function(t) { dc(n, "y", t, i) }), f(n.y, function(t) { dc(n, "x", t, i) }), this.resize(this.model, e)
    }, RA.resize = function(t, e, n) {
        function i() {
            f(r, function(t) {
                var e = t.isHorizontal(),
                    n = e ? [0, a.width] : [0, a.height],
                    i = t.inverse ? 1 : 0;
                t.setExtent(n[i], n[1 - i]), gc(t, e ? a.x : a.y)
            })
        }
        var a = Bo(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() });
        this._rect = a;
        var r = this._axesList;
        i(), !n && t.get("containLabel") && (f(r, function(t) {
            if (!t.model.get("axisLabel.inside")) {
                var e = Ph(t);
                if (e) {
                    var n = t.isHorizontal() ? "height" : "width",
                        i = t.model.get("axisLabel.margin");
                    a[n] -= e[n] + i, "top" === t.position ? a.y += e.height + i : "left" === t.position && (a.x += e.width + i)
                }
            }
        }), i())
    }, RA.getAxis = function(t, e) {
        var n = this._axesMap[t];
        if (null != n) {
            if (null == e)
                for (var i in n)
                    if (n.hasOwnProperty(i)) return n[i];
            return n[e]
        }
    }, RA.getAxes = function() { return this._axesList.slice() }, RA.getCartesian = function(t, e) {
        if (null != t && null != e) { var n = "x" + t + "y" + e; return this._coordsMap[n] }
        S(t) && (e = t.yAxisIndex, t = t.xAxisIndex);
        for (var i = 0, a = this._coordsList; i < a.length; i++)
            if (a[i].getAxis("x").index === t || a[i].getAxis("y").index === e) return a[i]
    }, RA.getCartesians = function() { return this._coordsList.slice() }, RA.convertToPixel = function(t, e, n) { var i = this._findConvertTarget(t, e); return i.cartesian ? i.cartesian.dataToPoint(n) : i.axis ? i.axis.toGlobalCoord(i.axis.dataToCoord(n)) : null }, RA.convertFromPixel = function(t, e, n) { var i = this._findConvertTarget(t, e); return i.cartesian ? i.cartesian.pointToData(n) : i.axis ? i.axis.coordToData(i.axis.toLocalCoord(n)) : null }, RA._findConvertTarget = function(t, e) {
        var n, i, a = e.seriesModel,
            r = e.xAxisModel || a && a.getReferringComponents("xAxis")[0],
            o = e.yAxisModel || a && a.getReferringComponents("yAxis")[0],
            s = e.gridModel,
            l = this._coordsList;
        if (a) n = a.coordinateSystem, u(l, n) < 0 && (n = null);
        else if (r && o) n = this.getCartesian(r.componentIndex, o.componentIndex);
        else if (r) i = this.getAxis("x", r.componentIndex);
        else if (o) i = this.getAxis("y", o.componentIndex);
        else if (s) {
            var h = s.coordinateSystem;
            h === this && (n = this._coordsList[0])
        }
        return { cartesian: n, axis: i }
    }, RA.containPoint = function(t) { var e = this._coordsList[0]; return e ? e.containPoint(t) : void 0 }, RA._initCartesian = function(t, e) {
        function n(n) {
            return function(o, s) {
                if (hc(o, t, e)) {
                    var l = o.get("position");
                    "x" === n ? "top" !== l && "bottom" !== l && (l = i.bottom ? "top" : "bottom") : "left" !== l && "right" !== l && (l = i.left ? "right" : "left"), i[l] = !0;
                    var u = new LA(n, Th(o), [0, 0], o.get("type"), l),
                        h = "category" === u.type;
                    u.onBand = h && o.get("boundaryGap"), u.inverse = o.get("inverse"), o.axis = u, u.model = o, u.grid = this, u.index = s, this._axesList.push(u), a[n][s] = u, r[n]++
                }
            }
        }
        var i = { left: !1, right: !1, top: !1, bottom: !1 },
            a = { x: {}, y: {} },
            r = { x: 0, y: 0 };
        return e.eachComponent("xAxis", n("x"), this), e.eachComponent("yAxis", n("y"), this), r.x && r.y ? (this._axesMap = a, void f(a.x, function(e, n) {
            f(a.y, function(i, a) {
                var r = "x" + n + "y" + a,
                    o = new lc(r);
                o.grid = this, o.model = t, this._coordsMap[r] = o, this._coordsList.push(o), o.addAxis(e), o.addAxis(i)
            }, this)
        }, this)) : (this._axesMap = {}, void(this._axesList = []))
    }, RA._updateScale = function(t, e) {
        function n(t, e) { f(t.mapDimension(e.dim, !0), function(n) { e.scale.unionExtentFromData(t, Ju(t, n)) }) }
        f(this._axesList, function(t) { t.scale.setExtent(1 / 0, -1 / 0) }), t.eachSeries(function(i) {
            if (mc(i)) {
                var a = pc(i, t),
                    r = a[0],
                    o = a[1];
                if (!hc(r, e, t) || !hc(o, e, t)) return;
                var s = this.getCartesian(r.componentIndex, o.componentIndex),
                    l = i.getData(),
                    u = s.getAxis("x"),
                    h = s.getAxis("y");
                "list" === l.type && (n(l, u, i), n(l, h, i))
            }
        }, this)
    }, RA.getTooltipAxes = function(t) {
        var e = [],
            n = [];
        return f(this.getCartesians(), function(i) {
            var a = null != t && "auto" !== t ? i.getAxis(t) : i.getBaseAxis(),
                r = i.getOtherAxis(a);
            u(e, a) < 0 && e.push(a), u(n, r) < 0 && n.push(r)
        }), { baseAxes: e, otherAxes: n }
    };
    var BA = ["xAxis", "yAxis"];
    cc.create = function(t, e) {
        var n = [];
        return t.eachComponent("grid", function(i, a) {
            var r = new cc(i, t, e);
            r.name = "grid_" + a, r.resize(i, e, !0), i.coordinateSystem = r, n.push(r)
        }), t.eachSeries(function(e) {
            if (mc(e)) {
                var n = pc(e, t),
                    i = n[0],
                    a = n[1],
                    r = i.getCoordSysModel(),
                    o = r.coordinateSystem;
                e.coordinateSystem = o.getCartesian(i.componentIndex, a.componentIndex)
            }
        }), n
    }, cc.dimensions = cc.prototype.dimensions = lc.prototype.dimensions, ps.register("cartesian2d", cc);
    var VA = ZM.extend({
        type: "series.__base_bar__",
        getInitialData: function() { return Qu(this.getSource(), this) },
        getMarkerPosition: function(t) {
            var e = this.coordinateSystem;
            if (e) {
                var n = e.dataToPoint(e.clampData(t)),
                    i = this.getData(),
                    a = i.getLayout("offset"),
                    r = i.getLayout("size"),
                    o = e.getBaseAxis().isHorizontal() ? 0 : 1;
                return n[o] += a + r / 2, n
            }
            return [0 / 0, 0 / 0]
        },
        defaultOption: { zlevel: 0, z: 2, coordinateSystem: "cartesian2d", legendHoverLink: !0, barMinHeight: 0, barMinAngle: 0, large: !1, largeThreshold: 400, progressive: 3e3, progressiveChunkMode: "mod", itemStyle: {}, emphasis: {} }
    });
    VA.extend({
        type: "series.bar",
        dependencies: ["grid", "polar"],
        brushSelector: "rect",
        getProgressive: function() { return this.get("large") ? this.get("progressive") : !1 },
        getProgressiveThreshold: function() {
            var t = this.get("progressiveThreshold"),
                e = this.get("largeThreshold");
            return e > t && (t = e), t
        },
        defaultOption: { clip: !0, roundCap: !1 }
    });
    var GA = Ub([
            ["fill", "color"],
            ["stroke", "borderColor"],
            ["lineWidth", "borderWidth"],
            ["stroke", "barBorderColor"],
            ["lineWidth", "barBorderWidth"],
            ["opacity"],
            ["shadowBlur"],
            ["shadowOffsetX"],
            ["shadowOffsetY"],
            ["shadowColor"]
        ]),
        FA = {
            getBarItemStyle: function(t) {
                var e = GA(this, t);
                if (this.getBorderLineDash) {
                    var n = this.getBorderLineDash();
                    n && (e.lineDash = n)
                }
                return e
            }
        },
        WA = nr({
            type: "sausage",
            shape: { cx: 0, cy: 0, r0: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0 },
            buildPath: function(t, e) {
                var n = e.cx,
                    i = e.cy,
                    a = Math.max(e.r0 || 0, 0),
                    r = Math.max(e.r, 0),
                    o = .5 * (r - a),
                    s = a + o,
                    l = e.startAngle,
                    u = e.endAngle,
                    h = e.clockwise,
                    c = Math.cos(l),
                    d = Math.sin(l),
                    f = Math.cos(u),
                    g = Math.sin(u),
                    p = h ? u - l < 2 * Math.PI : l - u < 2 * Math.PI;
                p && (t.moveTo(c * a + n, d * a + i), t.arc(c * s + n, d * s + i, o, -Math.PI + l, l, !h)), t.arc(n, i, r, l, u, !h), t.moveTo(f * r + n, g * r + i), t.arc(f * s + n, g * s + i, o, u - 2 * Math.PI, u - Math.PI, !h), 0 !== a && (t.arc(n, i, a, u, l, h), t.moveTo(c * a + n, g * a + i)), t.closePath()
            }
        }),
        HA = ["itemStyle", "barBorderWidth"],
        XA = [0, 0];
    o(to.prototype, FA), Su({
        type: "bar",
        render: function(t, e, n) { this._updateDrawMode(t); var i = t.get("coordinateSystem"); return ("cartesian2d" === i || "polar" === i) && (this._isLargeDraw ? this._renderLarge(t, e, n) : this._renderNormal(t, e, n)), this.group },
        incrementalPrepareRender: function(t) { this._clear(), this._updateDrawMode(t) },
        incrementalRender: function(t, e) { this._incrementalRenderLarge(t, e) },
        _updateDrawMode: function(t) {
            var e = t.pipelineContext.large;
            (null == this._isLargeDraw || e ^ this._isLargeDraw) && (this._isLargeDraw = e, this._clear())
        },
        _renderNormal: function(t) {
            var e, n = this.group,
                i = t.getData(),
                a = this._data,
                r = t.coordinateSystem,
                o = r.getBaseAxis();
            "cartesian2d" === r.type ? e = o.isHorizontal() : "polar" === r.type && (e = "angle" === o.dim);
            var s = t.isAnimationEnabled() ? t : null,
                l = t.get("clip", !0),
                u = Sc(r, i);
            n.removeClipPath();
            var h = t.get("roundCap", !0);
            i.diff(a).add(function(a) {
                if (i.hasValue(a)) {
                    var o = i.getItemModel(a),
                        c = qA[r.type](i, a, o);
                    if (l) { var d = jA[r.type](u, c); if (d) return void n.remove(f) }
                    var f = ZA[r.type](a, c, e, s, !1, h);
                    i.setItemGraphicEl(a, f), n.add(f), Dc(f, i, a, o, c, t, e, "polar" === r.type)
                }
            }).update(function(o, c) {
                var d = a.getItemGraphicEl(c);
                if (!i.hasValue(o)) return void n.remove(d);
                var f = i.getItemModel(o),
                    g = qA[r.type](i, o, f);
                if (l) { var p = jA[r.type](u, g); if (p) return void n.remove(d) }
                d ? Fr(d, { shape: g }, s, o) : d = ZA[r.type](o, g, e, s, !0, h), i.setItemGraphicEl(o, d), n.add(d), Dc(d, i, o, f, g, t, e, "polar" === r.type)
            }).remove(function(t) { var e = a.getItemGraphicEl(t); "cartesian2d" === r.type ? e && Ic(t, s, e) : e && Mc(t, s, e) }).execute(), this._data = i
        },
        _renderLarge: function(t) {
            this._clear(), Ac(t, this.group);
            var e = t.get("clip", !0) ? bc(t.coordinateSystem, !1, t) : null;
            e ? this.group.setClipPath(e) : this.group.removeClipPath()
        },
        _incrementalRenderLarge: function(t, e) { Ac(e, this.group, !0) },
        dispose: G,
        remove: function(t) { this._clear(t) },
        _clear: function(t) {
            var e = this.group,
                n = this._data;
            t && t.get("animation") && n && !this._isLargeDraw ? n.eachItemGraphicEl(function(e) { "sector" === e.type ? Mc(e.dataIndex, t, e) : Ic(e.dataIndex, t, e) }) : e.removeAll(), this._data = null
        }
    });
    var YA = Math.max,
        UA = Math.min,
        jA = {
            cartesian2d: function(t, e) {
                var n = e.width < 0 ? -1 : 1,
                    i = e.height < 0 ? -1 : 1;
                0 > n && (e.x += e.width, e.width = -e.width), 0 > i && (e.y += e.height, e.height = -e.height);
                var a = YA(e.x, t.x),
                    r = UA(e.x + e.width, t.x + t.width),
                    o = YA(e.y, t.y),
                    s = UA(e.y + e.height, t.y + t.height);
                e.x = a, e.y = o, e.width = r - a, e.height = s - o;
                var l = e.width < 0 || e.height < 0;
                return 0 > n && (e.x += e.width, e.width = -e.width), 0 > i && (e.y += e.height, e.height = -e.height), l
            },
            polar: function() { return !1 }
        },
        ZA = {
            cartesian2d: function(t, e, n, i, a) {
                var r = new cI({ shape: o({}, e) });
                if (i) {
                    var s = r.shape,
                        l = n ? "height" : "width",
                        u = {};
                    s[l] = 0, u[l] = e[l], zI[a ? "updateProps" : "initProps"](r, { shape: u }, i, t)
                }
                return r
            },
            polar: function(t, e, n, i, a, r) {
                var o = e.startAngle < e.endAngle,
                    l = !n && r ? WA : iI,
                    u = new l({ shape: s({ clockwise: o }, e) });
                if (i) {
                    var h = u.shape,
                        c = n ? "r" : "endAngle",
                        d = {};
                    h[c] = n ? 0 : e.startAngle, d[c] = e[c], zI[a ? "updateProps" : "initProps"](u, { shape: d }, i, t)
                }
                return u
            }
        },
        qA = {
            cartesian2d: function(t, e, n) {
                var i = t.getItemLayout(e),
                    a = Tc(n, i),
                    r = i.width > 0 ? 1 : -1,
                    o = i.height > 0 ? 1 : -1;
                return { x: i.x + r * a / 2, y: i.y + o * a / 2, width: i.width - r * a, height: i.height - o * a }
            },
            polar: function(t, e) { var n = t.getItemLayout(e); return { cx: n.cx, cy: n.cy, r0: n.r0, r: n.r, startAngle: n.startAngle, endAngle: n.endAngle } }
        },
        KA = Wa.extend({ type: "largeBar", shape: { points: [] }, buildPath: function(t, e) { for (var n = e.points, i = this.__startPoint, a = this.__baseDimIdx, r = 0; r < n.length; r += 2) i[a] = n[r + a], t.moveTo(i[0], i[1]), t.lineTo(n[r], n[r + 1]) } }),
        $A = ol(function(t) {
            var e = this,
                n = Cc(e, t.offsetX, t.offsetY);
            e.dataIndex = n >= 0 ? n : null
        }, 30, !1),
        JA = Math.PI,
        QA = function(t, e) {
            this.opt = e, this.axisModel = t, s(e, { labelOffset: 0, nameDirection: 1, tickDirection: 1, labelDirection: 1, silent: !0 }), this.group = new Vw;
            var n = new Vw({ position: e.position.slice(), rotation: e.rotation });
            n.updateTransform(), this._transform = n.transform, this._dumbGroup = n
        };
    QA.prototype = { constructor: QA, hasBuilder: function(t) { return !!tC[t] }, add: function(t) { tC[t].call(this) }, getGroup: function() { return this.group } };
    var tC = {
            axisLine: function() {
                var t = this.opt,
                    e = this.axisModel;
                if (e.get("axisLine.show")) {
                    var n = this.axisModel.axis.getExtent(),
                        i = this._transform,
                        a = [n[0], 0],
                        r = [n[1], 0];
                    i && (re(a, a, i), re(r, r, i));
                    var s = o({ lineCap: "round" }, e.getModel("axisLine.lineStyle").getLineStyle());
                    this.group.add(new fI({ anid: "line", subPixelOptimize: !0, shape: { x1: a[0], y1: a[1], x2: r[0], y2: r[1] }, style: s, strokeContainThreshold: t.strokeContainThreshold || 5, silent: !0, z2: 1 }));
                    var l = e.get("axisLine.symbol"),
                        u = e.get("axisLine.symbolSize"),
                        h = e.get("axisLine.symbolOffset") || 0;
                    if ("number" == typeof h && (h = [h, h]), null != l) {
                        "string" == typeof l && (l = [l, l]), ("string" == typeof u || "number" == typeof u) && (u = [u, u]);
                        var c = u[0],
                            d = u[1];
                        f([{ rotate: t.rotation + Math.PI / 2, offset: h[0], r: 0 }, { rotate: t.rotation - Math.PI / 2, offset: h[1], r: Math.sqrt((a[0] - r[0]) * (a[0] - r[0]) + (a[1] - r[1]) * (a[1] - r[1])) }], function(e, n) {
                            if ("none" !== l[n] && null != l[n]) {
                                var i = zh(l[n], -c / 2, -d / 2, c, d, s.stroke, !0),
                                    r = e.r + e.offset,
                                    o = [a[0] + r * Math.cos(t.rotation), a[1] - r * Math.sin(t.rotation)];
                                i.attr({ rotation: e.rotate, position: o, silent: !0, z2: 11 }), this.group.add(i)
                            }
                        }, this)
                    }
                }
            },
            axisTickLabel: function() {
                var t = this.axisModel,
                    e = this.opt,
                    n = zc(this, t, e),
                    i = Rc(this, t, e);
                kc(t, i, n)
            },
            axisName: function() {
                var t = this.opt,
                    e = this.axisModel,
                    n = A(t.axisName, e.get("name"));
                if (n) {
                    var i, a = e.get("nameLocation"),
                        r = t.nameDirection,
                        s = e.getModel("nameTextStyle"),
                        l = e.get("nameGap") || 0,
                        u = this.axisModel.axis.getExtent(),
                        h = u[0] > u[1] ? -1 : 1,
                        c = ["start" === a ? u[0] - h * l : "end" === a ? u[1] + h * l : (u[0] + u[1]) / 2, Ec(a) ? t.labelOffset + r * l : 0],
                        d = e.get("nameRotate");
                    null != d && (d = d * JA / 180);
                    var f;
                    Ec(a) ? i = nC(t.rotation, null != d ? d : t.rotation, r) : (i = Pc(t, a, d || 0, u), f = t.axisNameAvailableWidth, null != f && (f = Math.abs(f / Math.sin(i.rotation)), !isFinite(f) && (f = null)));
                    var g = s.getFont(),
                        p = e.get("nameTruncate", !0) || {},
                        m = p.ellipsis,
                        v = A(t.nameTruncateMaxWidth, p.maxWidth, f),
                        y = null != m && null != v ? QI(n, v, g, m, { minChar: 2, placeholder: p.placeholder }) : n,
                        x = e.get("tooltip", !0),
                        _ = e.mainType,
                        w = { componentType: _, name: n, $vars: ["name"] };
                    w[_ + "Index"] = e.componentIndex;
                    var b = new QS({ anid: "name", __fullText: n, __truncatedText: y, position: c, rotation: i.rotation, silent: iC(e), z2: 1, tooltip: x && x.show ? o({ content: n, formatter: function() { return n }, formatterParams: w }, x) : null });
                    Pr(b.style, s, { text: y, textFont: g, textFill: s.getTextColor() || e.get("axisLine.lineStyle.color"), textAlign: s.get("align") || i.textAlign, textVerticalAlign: s.get("verticalAlign") || i.textVerticalAlign }), e.get("triggerEvent") && (b.eventData = eC(e), b.eventData.targetType = "axisName", b.eventData.name = n), this._dumbGroup.add(b), b.updateTransform(), this.group.add(b), b.decomposeTransform()
                }
            }
        },
        eC = QA.makeAxisEventDataBase = function(t) { var e = { componentType: t.mainType, componentIndex: t.componentIndex }; return e[t.mainType + "Index"] = t.componentIndex, e },
        nC = QA.innerTextLayout = function(t, e, n) { var i, a, r = mo(e - t); return vo(r) ? (a = n > 0 ? "top" : "bottom", i = "center") : vo(r - JA) ? (a = n > 0 ? "bottom" : "top", i = "center") : (a = "middle", i = r > 0 && JA > r ? n > 0 ? "right" : "left" : n > 0 ? "left" : "right"), { rotation: r, textAlign: i, textVerticalAlign: a } },
        iC = QA.isLabelSilent = function(t) { var e = t.get("tooltip"); return t.get("silent") || !(t.get("triggerEvent") || e && e.show) },
        aC = f,
        rC = x,
        oC = wu({
            type: "axis",
            _axisPointer: null,
            axisPointerClass: null,
            render: function(t, e, n, i) { this.axisPointerClass && Xc(t), oC.superApply(this, "render", arguments), qc(this, t, e, n, i, !0) },
            updateAxisPointer: function(t, e, n, i) { qc(this, t, e, n, i, !1) },
            remove: function(t, e) {
                var n = this._axisPointer;
                n && n.remove(e), oC.superApply(this, "remove", arguments)
            },
            dispose: function(t, e) { Kc(this, e), oC.superApply(this, "dispose", arguments) }
        }),
        sC = [];
    oC.registerAxisPointerClass = function(t, e) { sC[t] = e }, oC.getAxisPointerClass = function(t) { return t && sC[t] };
    var lC = ["axisLine", "axisTickLabel", "axisName"],
        uC = ["splitArea", "splitLine"],
        hC = oC.extend({
            type: "cartesianAxis",
            axisPointerClass: "CartesianAxisPointer",
            render: function(t, e, n, i) {
                this.group.removeAll();
                var a = this._axisGroup;
                if (this._axisGroup = new Vw, this.group.add(this._axisGroup), t.get("show")) {
                    var r = t.getCoordSysModel(),
                        o = $c(r, t),
                        s = new QA(t, o);
                    f(lC, s.add, s), this._axisGroup.add(s.getGroup()), f(uC, function(e) { t.get(e + ".show") && this["_" + e](t, r) }, this), Ur(a, this._axisGroup, t), hC.superCall(this, "render", t, e, n, i)
                }
            },
            remove: function() { this._splitAreaColors = null },
            _splitLine: function(t, e) {
                var n = t.axis;
                if (!n.scale.isBlank()) {
                    var i = t.getModel("splitLine"),
                        a = i.getModel("lineStyle"),
                        r = a.get("color");
                    r = _(r) ? r : [r];
                    for (var o = e.coordinateSystem.getRect(), l = n.isHorizontal(), u = 0, h = n.getTicksCoords({ tickModel: i }), c = [], d = [], f = a.getLineStyle(), g = 0; g < h.length; g++) {
                        var p = n.toGlobalCoord(h[g].coord);
                        l ? (c[0] = p, c[1] = o.y, d[0] = p, d[1] = o.y + o.height) : (c[0] = o.x, c[1] = p, d[0] = o.x + o.width, d[1] = p);
                        var m = u++ % r.length,
                            v = h[g].tickValue;
                        this._axisGroup.add(new fI({ anid: null != v ? "line_" + h[g].tickValue : null, subPixelOptimize: !0, shape: { x1: c[0], y1: c[1], x2: d[0], y2: d[1] }, style: s({ stroke: r[m] }, f), silent: !0 }))
                    }
                }
            },
            _splitArea: function(t, e) {
                var n = t.axis;
                if (!n.scale.isBlank()) {
                    var i = t.getModel("splitArea"),
                        a = i.getModel("areaStyle"),
                        r = a.get("color"),
                        o = e.coordinateSystem.getRect(),
                        l = n.getTicksCoords({ tickModel: i, clamp: !0 });
                    if (l.length) {
                        var u = r.length,
                            h = this._splitAreaColors,
                            c = B(),
                            d = 0;
                        if (h)
                            for (var f = 0; f < l.length; f++) { var g = h.get(l[f].tickValue); if (null != g) { d = (g + (u - 1) * f) % u; break } }
                        var p = n.toGlobalCoord(l[0].coord),
                            m = a.getAreaStyle();
                        r = _(r) ? r : [r];
                        for (var f = 1; f < l.length; f++) {
                            var v, y, x, w, b = n.toGlobalCoord(l[f].coord);
                            n.isHorizontal() ? (v = p, y = o.y, x = b - v, w = o.height, p = v + x) : (v = o.x, y = p, x = o.width, w = b - y, p = y + w);
                            var S = l[f - 1].tickValue;
                            null != S && c.set(S, d), this._axisGroup.add(new cI({ anid: null != S ? "area_" + S : null, shape: { x: v, y: y, width: x, height: w }, style: s({ fill: r[d] }, m), silent: !0 })), d = (d + 1) % u
                        }
                        this._splitAreaColors = c
                    }
                }
            }
        });
    hC.extend({ type: "xAxis" }), hC.extend({ type: "yAxis" }), wu({ type: "grid", render: function(t) { this.group.removeAll(), t.get("show") && this.group.add(new cI({ shape: t.coordinateSystem.getRect(), style: s({ fill: t.get("backgroundColor") }, t.getItemStyle()), silent: !0, z2: -1 })) } }), hu(function(t) { t.xAxis && t.yAxis && !t.grid && (t.grid = {}) }), mu(JD.VISUAL.LAYOUT, x(xh, "bar")), mu(JD.VISUAL.PROGRESSIVE_LAYOUT, XT), vu({ seriesType: "bar", reset: function(t) { t.getData().setVisual("legendSymbol", "roundRect") } }), ZM.extend({ type: "series.line", dependencies: ["grid", "polar"], getInitialData: function() { return Qu(this.getSource(), this) }, defaultOption: { zlevel: 0, z: 2, coordinateSystem: "cartesian2d", legendHoverLink: !0, hoverAnimation: !0, clip: !0, label: { position: "top" }, lineStyle: { width: 2, type: "solid" }, step: !1, smooth: !1, smoothMonotone: null, symbol: "emptyCircle", symbolSize: 4, symbolRotate: null, showSymbol: !0, showAllSymbol: "auto", connectNulls: !1, sampling: "none", animationEasing: "linear", progressive: 0, hoverLayerThreshold: 1 / 0 } });
    var cC = Jc.prototype,
        dC = Jc.getSymbolSize = function(t, e) { var n = t.getItemVisual(e, "symbolSize"); return n instanceof Array ? n.slice() : [+n, +n] };
    cC._createSymbol = function(t, e, n, i, a) {
        this.removeAll();
        var r = e.getItemVisual(n, "color"),
            o = zh(t, -1, -1, 2, 2, r, a);
        o.attr({ z2: 100, culling: !0, scale: Qc(i) }), o.drift = td, this._symbolType = t, this.add(o)
    }, cC.stopSymbolAnimation = function(t) { this.childAt(0).stopAnimation(t) }, cC.getSymbolPath = function() { return this.childAt(0) }, cC.getScale = function() { return this.childAt(0).scale }, cC.highlight = function() { this.childAt(0).trigger("emphasis") }, cC.downplay = function() { this.childAt(0).trigger("normal") }, cC.setZ = function(t, e) {
        var n = this.childAt(0);
        n.zlevel = t, n.z = e
    }, cC.setDraggable = function(t) {
        var e = this.childAt(0);
        e.draggable = t, e.cursor = t ? "move" : e.cursor
    }, cC.updateData = function(t, e, n) {
        this.silent = !1;
        var i = t.getItemVisual(e, "symbol") || "circle",
            a = t.hostModel,
            r = dC(t, e),
            o = i !== this._symbolType;
        if (o) {
            var s = t.getItemVisual(e, "symbolKeepAspect");
            this._createSymbol(i, t, e, r, s)
        } else {
            var l = this.childAt(0);
            l.silent = !1, Fr(l, { scale: Qc(r) }, a, e)
        }
        if (this._updateCommon(t, e, r, n), o) {
            var l = this.childAt(0),
                u = n && n.fadeIn,
                h = { scale: l.scale.slice() };
            u && (h.style = { opacity: l.style.opacity }), l.scale = [0, 0], u && (l.style.opacity = 0), Wr(l, h, a, e)
        }
        this._seriesModel = a
    };
    var fC = ["itemStyle"],
        gC = ["emphasis", "itemStyle"],
        pC = ["label"],
        mC = ["emphasis", "label"];
    cC._updateCommon = function(t, e, n, i) {
        function a(e) { return b ? t.getName(e) : vc(t, e) }
        var r = this.childAt(0),
            s = t.hostModel,
            l = t.getItemVisual(e, "color");
        "image" !== r.type ? r.useStyle({ strokeNoScale: !0 }) : r.setStyle({ opacity: null, shadowBlur: null, shadowOffsetX: null, shadowOffsetY: null, shadowColor: null });
        var u = i && i.itemStyle,
            h = i && i.hoverItemStyle,
            c = i && i.symbolRotate,
            d = i && i.symbolOffset,
            f = i && i.labelModel,
            g = i && i.hoverLabelModel,
            p = i && i.hoverAnimation,
            m = i && i.cursorStyle;
        if (!i || t.hasItemOption) {
            var v = i && i.itemModel ? i.itemModel : t.getItemModel(e);
            u = v.getModel(fC).getItemStyle(["color"]), h = v.getModel(gC).getItemStyle(), c = v.getShallow("symbolRotate"), d = v.getShallow("symbolOffset"), f = v.getModel(pC), g = v.getModel(mC), p = v.getShallow("hoverAnimation"), m = v.getShallow("cursor")
        } else h = o({}, h);
        var y = r.style;
        r.attr("rotation", (c || 0) * Math.PI / 180 || 0), d && r.attr("position", [lo(d[0], n[0]), lo(d[1], n[1])]), m && r.attr("cursor", m), r.setColor(l, i && i.symbolInnerColor), r.setStyle(u);
        var x = t.getItemVisual(e, "opacity");
        null != x && (y.opacity = x);
        var _ = t.getItemVisual(e, "liftZ"),
            w = r.__z2Origin;
        null != _ ? null == w && (r.__z2Origin = r.z2, r.z2 += _) : null != w && (r.z2 = w, r.__z2Origin = null);
        var b = i && i.useNameLabel;
        Cr(y, h, f, g, { labelFetcher: s, labelDataIndex: e, defaultText: a, isRectText: !0, autoColor: l }), r.__symbolOriginalScale = Qc(n), r.hoverStyle = h, r.highDownOnUpdate = p && s.isAnimationEnabled() ? ed : null, Mr(r)
    }, cC.fadeOut = function(t, e) {
        var n = this.childAt(0);
        this.silent = n.silent = !0, !(e && e.keepLabel) && (n.style.text = null), Fr(n, { style: { opacity: 0 }, scale: [0, 0] }, this._seriesModel, this.dataIndex, t)
    }, h(Jc, Vw);
    var vC = nd.prototype;
    vC.updateData = function(t, e) {
        e = ad(e);
        var n = this.group,
            i = t.hostModel,
            a = this._data,
            r = this._symbolCtor,
            o = rd(t);
        a || n.removeAll(), t.diff(a).add(function(i) {
            var a = t.getItemLayout(i);
            if (id(t, a, i, e)) {
                var s = new r(t, i, o);
                s.attr("position", a), t.setItemGraphicEl(i, s), n.add(s)
            }
        }).update(function(s, l) {
            var u = a.getItemGraphicEl(l),
                h = t.getItemLayout(s);
            return id(t, h, s, e) ? (u ? (u.updateData(t, s, o), Fr(u, { position: h }, i)) : (u = new r(t, s), u.attr("position", h)), n.add(u), void t.setItemGraphicEl(s, u)) : void n.remove(u)
        }).remove(function(t) {
            var e = a.getItemGraphicEl(t);
            e && e.fadeOut(function() { n.remove(e) })
        }).execute(), this._data = t
    }, vC.isPersistent = function() { return !0 }, vC.updateLayout = function() {
        var t = this._data;
        t && t.eachItemGraphicEl(function(e, n) {
            var i = t.getItemLayout(n);
            e.attr("position", i)
        })
    }, vC.incrementalPrepareUpdate = function(t) { this._seriesScope = rd(t), this._data = null, this.group.removeAll() }, vC.incrementalUpdate = function(t, e, n) {
        function i(t) { t.isGroup || (t.incremental = t.useHoverLayer = !0) }
        n = ad(n);
        for (var a = t.start; a < t.end; a++) {
            var r = e.getItemLayout(a);
            if (id(e, r, a, n)) {
                var o = new this._symbolCtor(e, a, this._seriesScope);
                o.traverse(i), o.attr("position", r), this.group.add(o), e.setItemGraphicEl(a, o)
            }
        }
    }, vC.remove = function(t) {
        var e = this.group,
            n = this._data;
        n && t ? n.eachItemGraphicEl(function(t) { t.fadeOut(function() { e.remove(t) }) }) : e.removeAll()
    };
    var yC = function(t, e, n, i, a, r, o, s) {
            for (var l = ud(t, e), u = [], h = [], c = [], d = [], f = [], g = [], p = [], m = od(a, e, o), v = od(r, t, s), y = 0; y < l.length; y++) {
                var x = l[y],
                    _ = !0;
                switch (x.cmd) {
                    case "=":
                        var w = t.getItemLayout(x.idx),
                            b = e.getItemLayout(x.idx1);
                        (isNaN(w[0]) || isNaN(w[1])) && (w = b.slice()), u.push(w), h.push(b), c.push(n[x.idx]), d.push(i[x.idx1]), p.push(e.getRawIndex(x.idx1));
                        break;
                    case "+":
                        var S = x.idx;
                        u.push(a.dataToPoint([e.get(m.dataDimsForPoint[0], S), e.get(m.dataDimsForPoint[1], S)])), h.push(e.getItemLayout(S).slice()), c.push(ld(m, a, e, S)), d.push(i[S]), p.push(e.getRawIndex(S));
                        break;
                    case "-":
                        var S = x.idx,
                            I = t.getRawIndex(S);
                        I !== S ? (u.push(t.getItemLayout(S)), h.push(r.dataToPoint([t.get(v.dataDimsForPoint[0], S), t.get(v.dataDimsForPoint[1], S)])), c.push(n[S]), d.push(ld(v, r, t, S)), p.push(I)) : _ = !1
                }
                _ && (f.push(x), g.push(g.length))
            }
            g.sort(function(t, e) { return p[t] - p[e] });
            for (var M = [], D = [], T = [], A = [], C = [], y = 0; y < g.length; y++) {
                var S = g[y];
                M[y] = u[S], D[y] = h[S], T[y] = c[S], A[y] = d[S], C[y] = f[S]
            }
            return { current: M, next: D, stackedOnCurrent: T, stackedOnNext: A, status: C }
        },
        xC = oe,
        _C = se,
        wC = U,
        bC = W,
        SC = [],
        IC = [],
        MC = [],
        DC = Wa.extend({
            type: "ec-polyline",
            shape: { points: [], smooth: 0, smoothConstraint: !0, smoothMonotone: null, connectNulls: !1 },
            style: { fill: null, stroke: "#000" },
            brush: nI(Wa.prototype.brush),
            buildPath: function(t, e) {
                var n = e.points,
                    i = 0,
                    a = n.length,
                    r = gd(n, e.smoothConstraint);
                if (e.connectNulls) { for (; a > 0 && hd(n[a - 1]); a--); for (; a > i && hd(n[i]); i++); }
                for (; a > i;) i += cd(t, n, i, a, a, 1, r.min, r.max, e.smooth, e.smoothMonotone, e.connectNulls) + 1
            }
        }),
        TC = Wa.extend({
            type: "ec-polygon",
            shape: { points: [], stackedOnPoints: [], smooth: 0, stackedOnSmooth: 0, smoothConstraint: !0, smoothMonotone: null, connectNulls: !1 },
            brush: nI(Wa.prototype.brush),
            buildPath: function(t, e) {
                var n = e.points,
                    i = e.stackedOnPoints,
                    a = 0,
                    r = n.length,
                    o = e.smoothMonotone,
                    s = gd(n, e.smoothConstraint),
                    l = gd(i, e.smoothConstraint);
                if (e.connectNulls) { for (; r > 0 && hd(n[r - 1]); r--); for (; r > a && hd(n[a]); a++); }
                for (; r > a;) {
                    var u = cd(t, n, a, r, r, 1, s.min, s.max, e.smooth, o, e.connectNulls);
                    cd(t, i, a + u - 1, u, r, -1, l.min, l.max, e.stackedOnSmooth, o, e.connectNulls), a += u + 1, t.closePath()
                }
            }
        });
    el.extend({
        type: "line",
        init: function() {
            var t = new Vw,
                e = new nd;
            this.group.add(e.group), this._symbolDraw = e, this._lineGroup = t
        },
        render: function(t, e, n) {
            var i = t.coordinateSystem,
                a = this.group,
                r = t.getData(),
                o = t.getModel("lineStyle"),
                l = t.getModel("areaStyle"),
                u = r.mapArray(r.getItemLayout),
                h = "polar" === i.type,
                c = this._coordSys,
                d = this._symbolDraw,
                f = this._polyline,
                g = this._polygon,
                p = this._lineGroup,
                m = t.get("animation"),
                v = !l.isEmpty(),
                y = l.get("origin"),
                x = od(i, r, y),
                _ = vd(i, r, x),
                w = t.get("showSymbol"),
                b = w && !h && _d(t, r, i),
                S = this._data;
            S && S.eachItemGraphicEl(function(t, e) { t.__temp && (a.remove(t), S.setItemGraphicEl(e, null)) }), w || d.remove(), a.add(p);
            var I, M = !h && t.get("step");
            i && i.getArea && (I = i.getArea(), null != I.width ? (I.x -= .1, I.y -= .1, I.width += .2, I.height += .2) : I.r0 && (I.r0 -= .5, I.r1 += .5)), f && c.type === i.type && M === this._step ? (v && !g ? g = this._newPolygon(u, _, i, m) : g && !v && (p.remove(g), g = this._polygon = null), p.setClipPath(bd(i, !1, t)), w && d.updateData(r, { isIgnore: b, clipShape: I }), r.eachItemGraphicEl(function(t) { t.stopAnimation(!0) }), pd(this._stackedOnPoints, _) && pd(this._points, u) || (m ? this._updateAnimation(r, _, i, n, M, y) : (M && (u = yd(u, i, M), _ = yd(_, i, M)), f.setShape({ points: u }), g && g.setShape({ points: u, stackedOnPoints: _ })))) : (w && d.updateData(r, { isIgnore: b, clipShape: I }), M && (u = yd(u, i, M), _ = yd(_, i, M)), f = this._newPolyline(u, i, m), v && (g = this._newPolygon(u, _, i, m)), p.setClipPath(bd(i, !0, t)));
            var D = xd(r, i) || r.getVisual("color");
            f.useStyle(s(o.getLineStyle(), { fill: "none", stroke: D, lineJoin: "bevel" }));
            var T = t.get("smooth");
            if (T = md(t.get("smooth")), f.setShape({ smooth: T, smoothMonotone: t.get("smoothMonotone"), connectNulls: t.get("connectNulls") }), g) {
                var A = r.getCalculationInfo("stackedOnSeries"),
                    C = 0;
                g.useStyle(s(l.getAreaStyle(), { fill: D, opacity: .7, lineJoin: "bevel" })), A && (C = md(A.get("smooth"))), g.setShape({ smooth: T, stackedOnSmooth: C, smoothMonotone: t.get("smoothMonotone"), connectNulls: t.get("connectNulls") })
            }
            this._data = r, this._coordSys = i, this._stackedOnPoints = _, this._points = u, this._step = M, this._valueOrigin = y
        },
        dispose: function() {},
        highlight: function(t, e, n, i) {
            var a = t.getData(),
                r = Zi(a, i);
            if (!(r instanceof Array) && null != r && r >= 0) {
                var o = a.getItemGraphicEl(r);
                if (!o) {
                    var s = a.getItemLayout(r);
                    if (!s) return;
                    o = new Jc(a, r), o.position = s, o.setZ(t.get("zlevel"), t.get("z")), o.ignore = isNaN(s[0]) || isNaN(s[1]), o.__temp = !0, a.setItemGraphicEl(r, o), o.stopSymbolAnimation(!0), this.group.add(o)
                }
                o.highlight()
            } else el.prototype.highlight.call(this, t, e, n, i)
        },
        downplay: function(t, e, n, i) {
            var a = t.getData(),
                r = Zi(a, i);
            if (null != r && r >= 0) {
                var o = a.getItemGraphicEl(r);
                o && (o.__temp ? (a.setItemGraphicEl(r, null), this.group.remove(o)) : o.downplay())
            } else el.prototype.downplay.call(this, t, e, n, i)
        },
        _newPolyline: function(t) { var e = this._polyline; return e && this._lineGroup.remove(e), e = new DC({ shape: { points: t }, silent: !0, z2: 10 }), this._lineGroup.add(e), this._polyline = e, e },
        _newPolygon: function(t, e) { var n = this._polygon; return n && this._lineGroup.remove(n), n = new TC({ shape: { points: t, stackedOnPoints: e }, silent: !0 }), this._lineGroup.add(n), this._polygon = n, n },
        _updateAnimation: function(t, e, n, i, a, r) {
            var o = this._polyline,
                s = this._polygon,
                l = t.hostModel,
                u = yC(this._data, t, this._stackedOnPoints, e, this._coordSys, n, this._valueOrigin, r),
                h = u.current,
                c = u.stackedOnCurrent,
                d = u.next,
                f = u.stackedOnNext;
            a && (h = yd(u.current, n, a), c = yd(u.stackedOnCurrent, n, a), d = yd(u.next, n, a), f = yd(u.stackedOnNext, n, a)), o.shape.__points = u.current, o.shape.points = h, Fr(o, { shape: { points: d } }, l), s && (s.setShape({ points: h, stackedOnPoints: c }), Fr(s, { shape: { points: d, stackedOnPoints: f } }, l));
            for (var g = [], p = u.status, m = 0; m < p.length; m++) {
                var v = p[m].cmd;
                if ("=" === v) {
                    var y = t.getItemGraphicEl(p[m].idx1);
                    y && g.push({ el: y, ptIdx: m })
                }
            }
            o.animators && o.animators.length && o.animators[0].during(function() {
                for (var t = 0; t < g.length; t++) {
                    var e = g[t].el;
                    e.attr("position", o.shape.__points[g[t].ptIdx])
                }
            })
        },
        remove: function() {
            var t = this.group,
                e = this._data;
            this._lineGroup.removeAll(), this._symbolDraw.remove(!0), e && e.eachItemGraphicEl(function(n, i) { n.__temp && (t.remove(n), e.setItemGraphicEl(i, null)) }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null
        }
    });
    var AC = function(t, e, n) {
            return {
                seriesType: t,
                performRawSeries: !0,
                reset: function(t, i) {
                    function a(e, n) {
                        if (c) {
                            var i = t.getRawValue(n),
                                a = t.getDataParams(n);
                            u && e.setItemVisual(n, "symbol", o(i, a)), h && e.setItemVisual(n, "symbolSize", s(i, a))
                        }
                        if (e.hasItemOption) {
                            var r = e.getItemModel(n),
                                l = r.getShallow("symbol", !0),
                                d = r.getShallow("symbolSize", !0),
                                f = r.getShallow("symbolKeepAspect", !0);
                            null != l && e.setItemVisual(n, "symbol", l), null != d && e.setItemVisual(n, "symbolSize", d), null != f && e.setItemVisual(n, "symbolKeepAspect", f)
                        }
                    }
                    var r = t.getData(),
                        o = t.get("symbol"),
                        s = t.get("symbolSize"),
                        l = t.get("symbolKeepAspect"),
                        u = w(o),
                        h = w(s),
                        c = u || h,
                        d = !u && o ? o : e,
                        f = h ? null : s;
                    return r.setVisual({ legendSymbol: n || d, symbol: d, symbolSize: f, symbolKeepAspect: l }), i.isSeriesFiltered(t) ? void 0 : { dataEach: r.hasItemOption || c ? a : null }
                }
            }
        },
        CC = function(t) {
            return {
                seriesType: t,
                plan: $M(),
                reset: function(t) {
                    function e(t, e) {
                        for (var n = t.end - t.start, a = r && new Float32Array(n * s), l = t.start, u = 0, h = [], c = []; l < t.end; l++) {
                            var d;
                            if (1 === s) {
                                var f = e.get(o[0], l);
                                d = !isNaN(f) && i.dataToPoint(f, null, c)
                            } else {
                                var f = h[0] = e.get(o[0], l),
                                    g = h[1] = e.get(o[1], l);
                                d = !isNaN(f) && !isNaN(g) && i.dataToPoint(h, null, c)
                            }
                            r ? (a[u++] = d ? d[0] : 0 / 0, a[u++] = d ? d[1] : 0 / 0) : e.setItemLayout(l, d && d.slice() || [0 / 0, 0 / 0])
                        }
                        r && e.setLayout("symbolPoints", a)
                    }
                    var n = t.getData(),
                        i = t.coordinateSystem,
                        a = t.pipelineContext,
                        r = a.large;
                    if (i) {
                        var o = g(i.dimensions, function(t) { return n.mapDimension(t) }).slice(0, 2),
                            s = o.length,
                            l = n.getCalculationInfo("stackResultDimension");
                        return $u(n, o[0]) && (o[0] = l), $u(n, o[1]) && (o[1] = l), s && { progress: e }
                    }
                }
            }
        },
        LC = { average: function(t) { for (var e = 0, n = 0, i = 0; i < t.length; i++) isNaN(t[i]) || (e += t[i], n++); return 0 === n ? 0 / 0 : e / n }, sum: function(t) { for (var e = 0, n = 0; n < t.length; n++) e += t[n] || 0; return e }, max: function(t) { for (var e = -1 / 0, n = 0; n < t.length; n++) t[n] > e && (e = t[n]); return isFinite(e) ? e : 0 / 0 }, min: function(t) { for (var e = 1 / 0, n = 0; n < t.length; n++) t[n] < e && (e = t[n]); return isFinite(e) ? e : 0 / 0 }, nearest: function(t) { return t[0] } },
        PC = function(t) { return Math.round(t.length / 2) },
        kC = function(t) {
            return {
                seriesType: t,
                modifyOutputEnd: !0,
                reset: function(t) {
                    var e = t.getData(),
                        n = t.get("sampling"),
                        i = t.coordinateSystem;
                    if ("cartesian2d" === i.type && n) {
                        var a = i.getBaseAxis(),
                            r = i.getOtherAxis(a),
                            o = a.getExtent(),
                            s = o[1] - o[0],
                            l = Math.round(e.count() / s);
                        if (l > 1) { var u; "string" == typeof n ? u = LC[n] : "function" == typeof n && (u = n), u && t.setData(e.downSample(e.mapDimension(r.dim), 1 / l, u, PC)) }
                    }
                }
            }
        };
    vu(AC("line", "circle", "line")), mu(CC("line")), cu(JD.PROCESSOR.STATISTIC, kC("line"));
    var NC = function(t, e, n) {
            e = _(e) && { coordDimensions: e } || o({}, e);
            var i = t.getSource(),
                a = OT(i, e),
                r = new PT(a, t);
            return r.initData(i, n), r
        },
        OC = {
            updateSelectedMap: function(t) { this._targetList = _(t) ? t.slice() : [], this._selectTargetMap = p(t || [], function(t, e) { return t.set(e.name, e), t }, B()) },
            select: function(t, e) {
                var n = null != e ? this._targetList[e] : this._selectTargetMap.get(t),
                    i = this.get("selectedMode");
                "single" === i && this._selectTargetMap.each(function(t) { t.selected = !1 }), n && (n.selected = !0)
            },
            unSelect: function(t, e) {
                var n = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
                n && (n.selected = !1)
            },
            toggleSelected: function(t, e) { var n = null != e ? this._targetList[e] : this._selectTargetMap.get(t); return null != n ? (this[n.selected ? "unSelect" : "select"](t, e), n.selected) : void 0 },
            isSelected: function(t, e) { var n = null != e ? this._targetList[e] : this._selectTargetMap.get(t); return n && n.selected }
        },
        EC = bu({
            type: "series.pie",
            init: function(t) { EC.superApply(this, "init", arguments), this.legendDataProvider = function() { return this.getRawData() }, this.updateSelectedMap(this._createSelectableList()), this._defaultLabelLine(t) },
            mergeOption: function(t) { EC.superCall(this, "mergeOption", t), this.updateSelectedMap(this._createSelectableList()) },
            getInitialData: function() { return NC(this, ["value"]) },
            _createSelectableList: function() { for (var t = this.getRawData(), e = t.mapDimension("value"), n = [], i = 0, a = t.count(); a > i; i++) n.push({ name: t.getName(i), value: t.get(e, i), selected: Ws(t, i, "selected") }); return n },
            getDataParams: function(t) {
                var e = this.getData(),
                    n = EC.superCall(this, "getDataParams", t),
                    i = [];
                return e.each(e.mapDimension("value"), function(t) { i.push(t) }), n.percent = po(i, t, e.hostModel.get("percentPrecision")), n.$vars.push("percent"), n
            },
            _defaultLabelLine: function(t) {
                Fi(t, "labelLine", ["show"]);
                var e = t.labelLine,
                    n = t.emphasis.labelLine;
                e.show = e.show && t.label.show, n.show = n.show && t.emphasis.label.show
            },
            defaultOption: { zlevel: 0, z: 2, legendHoverLink: !0, hoverAnimation: !0, center: ["50%", "50%"], radius: [0, "75%"], clockwise: !0, startAngle: 90, minAngle: 0, minShowLabelAngle: 0, selectedOffset: 10, hoverOffset: 10, avoidLabelOverlap: !0, percentPrecision: 2, stillShowZeroSum: !0, label: { rotate: !1, show: !0, position: "outer" }, labelLine: { show: !0, length: 15, length2: 15, smooth: !1, lineStyle: { width: 1, type: "solid" } }, itemStyle: { borderWidth: 1 }, animationType: "expansion", animationTypeUpdate: "transition", animationEasing: "cubicOut" }
        });
    c(EC, OC);
    var zC = Md.prototype;
    zC.updateData = function(t, e, n) {
        var i = this.childAt(0),
            a = this.childAt(1),
            r = this.childAt(2),
            l = t.hostModel,
            u = t.getItemModel(e),
            h = t.getItemLayout(e),
            c = o({}, h);
        c.label = null;
        var d = l.getShallow("animationTypeUpdate");
        if (n) { i.setShape(c); var f = l.getShallow("animationType"); "scale" === f ? (i.shape.r = h.r0, Wr(i, { shape: { r: h.r } }, l, e)) : (i.shape.endAngle = h.startAngle, Fr(i, { shape: { endAngle: h.endAngle } }, l, e)) } else "expansion" === d ? i.setShape(c) : Fr(i, { shape: c }, l, e);
        var g = t.getItemVisual(e, "color");
        i.useStyle(s({ lineJoin: "bevel", fill: g }, u.getModel("itemStyle").getItemStyle())), i.hoverStyle = u.getModel("emphasis.itemStyle").getItemStyle();
        var p = u.getShallow("cursor");
        p && i.attr("cursor", p), Id(this, t.getItemLayout(e), l.isSelected(null, e), l.get("selectedOffset"), l.get("animation"));
        var m = !n && "transition" === d;
        this._updateLabel(t, e, m), this.highDownOnUpdate = u.get("hoverAnimation") && l.isAnimationEnabled() ? function(t, e) { "emphasis" === e ? (a.ignore = a.hoverIgnore, r.ignore = r.hoverIgnore, i.stopAnimation(!0), i.animateTo({ shape: { r: h.r + l.get("hoverOffset") } }, 300, "elasticOut")) : (a.ignore = a.normalIgnore, r.ignore = r.normalIgnore, i.stopAnimation(!0), i.animateTo({ shape: { r: h.r } }, 300, "elasticOut")) } : null, Mr(this)
    }, zC._updateLabel = function(t, e, n) {
        var i = this.childAt(1),
            a = this.childAt(2),
            r = t.hostModel,
            o = t.getItemModel(e),
            s = t.getItemLayout(e),
            l = s.label,
            u = t.getItemVisual(e, "color");
        if (!l || isNaN(l.x) || isNaN(l.y)) return void(a.ignore = a.normalIgnore = a.hoverIgnore = i.ignore = i.normalIgnore = i.hoverIgnore = !0);
        var h = {
                points: l.linePoints || [
                    [l.x, l.y],
                    [l.x, l.y],
                    [l.x, l.y]
                ]
            },
            c = { x: l.x, y: l.y };
        n ? (Fr(i, { shape: h }, r, e), Fr(a, { style: c }, r, e)) : (i.attr({ shape: h }), a.attr({ style: c })), a.attr({ rotation: l.rotation, origin: [l.x, l.y], z2: 10 });
        var d = o.getModel("label"),
            f = o.getModel("emphasis.label"),
            g = o.getModel("labelLine"),
            p = o.getModel("emphasis.labelLine"),
            u = t.getItemVisual(e, "color");
        Cr(a.style, a.hoverStyle = {}, d, f, { labelFetcher: t.hostModel, labelDataIndex: e, defaultText: t.getName(e), autoColor: u, useInsideStyle: !!l.inside }, { textAlign: l.textAlign, textVerticalAlign: l.verticalAlign, opacity: t.getItemVisual(e, "opacity") }), a.ignore = a.normalIgnore = !d.get("show"), a.hoverIgnore = !f.get("show"), i.ignore = i.normalIgnore = !g.get("show"), i.hoverIgnore = !p.get("show"), i.setStyle({ stroke: u, opacity: t.getItemVisual(e, "opacity") }), i.setStyle(g.getModel("lineStyle").getLineStyle()), i.hoverStyle = p.getModel("lineStyle").getLineStyle();
        var m = g.get("smooth");
        m && m === !0 && (m = .4), i.setShape({ smooth: m })
    }, h(Md, Vw);
    var RC = (el.extend({
            type: "pie",
            init: function() {
                var t = new Vw;
                this._sectorGroup = t
            },
            render: function(t, e, n, i) {
                if (!i || i.from !== this.uid) {
                    var a = t.getData(),
                        r = this._data,
                        o = this.group,
                        s = e.get("animation"),
                        l = !r,
                        u = t.get("animationType"),
                        h = t.get("animationTypeUpdate"),
                        c = x(Sd, this.uid, t, s, n),
                        d = t.get("selectedMode");
                    if (a.diff(r).add(function(t) {
                            var e = new Md(a, t);
                            l && "scale" !== u && e.eachChild(function(t) { t.stopAnimation(!0) }), d && e.on("click", c), a.setItemGraphicEl(t, e), o.add(e)
                        }).update(function(t, e) {
                            var n = r.getItemGraphicEl(e);
                            l || "transition" === h || n.eachChild(function(t) { t.stopAnimation(!0) }), n.updateData(a, t), n.off("click"), d && n.on("click", c), o.add(n), a.setItemGraphicEl(t, n)
                        }).remove(function(t) {
                            var e = r.getItemGraphicEl(t);
                            o.remove(e)
                        }).execute(), s && a.count() > 0 && (l ? "scale" !== u : "transition" !== h)) {
                        for (var f = a.getItemLayout(0), g = 1; isNaN(f.startAngle) && g < a.count(); ++g) f = a.getItemLayout(g);
                        var p = Math.max(n.getWidth(), n.getHeight()) / 2,
                            m = y(o.removeClipPath, o);
                        o.setClipPath(this._createClipPath(f.cx, f.cy, p, f.startAngle, f.clockwise, m, t, l))
                    } else o.removeClipPath();
                    this._data = a
                }
            },
            dispose: function() {},
            _createClipPath: function(t, e, n, i, a, r, o, s) {
                var l = new iI({ shape: { cx: t, cy: e, r0: 0, r: n, startAngle: i, endAngle: i, clockwise: a } }),
                    u = s ? Wr : Fr;
                return u(l, { shape: { endAngle: i + (a ? 1 : -1) * Math.PI * 2 } }, o, r), l
            },
            containPoint: function(t, e) {
                var n = e.getData(),
                    i = n.getItemLayout(0);
                if (i) {
                    var a = t[0] - i.cx,
                        r = t[1] - i.cy,
                        o = Math.sqrt(a * a + r * r);
                    return o <= i.r && o >= i.r0
                }
            }
        }), function(t, e) {
            f(e, function(e) {
                e.update = "updateView", fu(e, function(n, i) {
                    var a = {};
                    return i.eachComponent({ mainType: "series", subType: t, query: n }, function(t) {
                        t[e.method] && t[e.method](n.name, n.dataIndex);
                        var i = t.getData();
                        i.each(function(e) {
                            var n = i.getName(e);
                            a[n] = t.isSelected(n) || !1
                        })
                    }), { name: n.name, selected: a, seriesId: n.seriesId }
                })
            })
        }),
        BC = function(t) {
            return {
                getTargetSeries: function(e) {
                    var n = {},
                        i = B();
                    return e.eachSeriesByType(t, function(t) { t.__paletteScope = n, i.set(t.uid, t) }), i
                },
                reset: function(t) {
                    var e = t.getRawData(),
                        n = {},
                        i = t.getData();
                    i.each(function(t) {
                        var e = i.getRawIndex(t);
                        n[e] = t
                    }), e.each(function(a) {
                        var r, o = n[a],
                            s = null != o && i.getItemVisual(o, "color", !0),
                            l = null != o && i.getItemVisual(o, "borderColor", !0);
                        if (s && l || (r = e.getItemModel(a)), s) e.setItemVisual(a, "color", s);
                        else {
                            var u = r.get("itemStyle.color") || t.getColorFromPalette(e.getName(a) || a + "", t.__paletteScope, e.count());
                            e.setItemVisual(a, "color", u), null != o && i.setItemVisual(o, "color", u)
                        }
                        if (l) e.setItemVisual(a, "borderColor", l);
                        else {
                            var h = r.get("itemStyle.borderColor");
                            e.setItemVisual(a, "borderColor", h), null != o && i.setItemVisual(o, "borderColor", h)
                        }
                    })
                }
            }
        },
        VC = Math.PI / 180,
        GC = function(t, e, n, i) {
            var a, r, o = t.getData(),
                s = [],
                l = !1,
                u = (t.get("minShowLabelAngle") || 0) * VC;
            o.each(function(n) {
                var i = o.getItemLayout(n),
                    h = o.getItemModel(n),
                    c = h.getModel("label"),
                    d = c.get("position") || h.get("emphasis.label.position"),
                    f = h.getModel("labelLine"),
                    g = f.get("length"),
                    p = f.get("length2");
                if (!(i.angle < u)) {
                    var m, v, y, x, _ = (i.startAngle + i.endAngle) / 2,
                        w = Math.cos(_),
                        b = Math.sin(_);
                    a = i.cx, r = i.cy;
                    var S = "inside" === d || "inner" === d;
                    if ("center" === d) m = i.cx, v = i.cy, x = "center";
                    else {
                        var I = (S ? (i.r + i.r0) / 2 * w : i.r * w) + a,
                            M = (S ? (i.r + i.r0) / 2 * b : i.r * b) + r;
                        if (m = I + 3 * w, v = M + 3 * b, !S) {
                            var D = I + w * (g + e - i.r),
                                T = M + b * (g + e - i.r),
                                A = D + (0 > w ? -1 : 1) * p,
                                C = T;
                            m = A + (0 > w ? -5 : 5), v = C, y = [
                                [I, M],
                                [D, T],
                                [A, C]
                            ]
                        }
                        x = S ? "center" : w > 0 ? "left" : "right"
                    }
                    var L, P = c.getFont(),
                        k = c.get("rotate");
                    L = "number" == typeof k ? k * (Math.PI / 180) : k ? 0 > w ? -_ + Math.PI : -_ : 0;
                    var N = t.getFormattedLabel(n, "normal") || o.getName(n),
                        O = Fn(N, P, x, "top");
                    l = !!L, i.label = { x: m, y: v, position: d, height: O.height, len: g, len2: p, linePoints: y, textAlign: x, verticalAlign: "middle", rotation: L, inside: S }, S || s.push(i.label)
                }
            }), !l && t.get("avoidLabelOverlap") && Td(s, a, r, e, n, i)
        },
        FC = 2 * Math.PI,
        WC = Math.PI / 180,
        HC = function(t, e, n) {
            e.eachSeriesByType(t, function(t) {
                var e = t.getData(),
                    i = e.mapDimension("value"),
                    a = t.get("center"),
                    r = t.get("radius");
                _(r) || (r = [0, r]), _(a) || (a = [a, a]);
                var o = n.getWidth(),
                    s = n.getHeight(),
                    l = Math.min(o, s),
                    u = lo(a[0], o),
                    h = lo(a[1], s),
                    c = lo(r[0], l / 2),
                    d = lo(r[1], l / 2),
                    f = -t.get("startAngle") * WC,
                    g = t.get("minAngle") * WC,
                    p = 0;
                e.each(i, function(t) {!isNaN(t) && p++ });
                var m = e.getSum(i),
                    v = Math.PI / (m || p) * 2,
                    y = t.get("clockwise"),
                    x = t.get("roseType"),
                    w = t.get("stillShowZeroSum"),
                    b = e.getDataExtent(i);
                b[0] = 0;
                var S = FC,
                    I = 0,
                    M = f,
                    D = y ? 1 : -1;
                if (e.each(i, function(t, n) {
                        var i;
                        if (isNaN(t)) return void e.setItemLayout(n, { angle: 0 / 0, startAngle: 0 / 0, endAngle: 0 / 0, clockwise: y, cx: u, cy: h, r0: c, r: x ? 0 / 0 : d });
                        i = "area" !== x ? 0 === m && w ? v : t * v : FC / p, g > i ? (i = g, S -= g) : I += t;
                        var a = M + D * i;
                        e.setItemLayout(n, { angle: i, startAngle: M, endAngle: a, clockwise: y, cx: u, cy: h, r0: c, r: x ? so(t, b, [c, d]) : d }), M = a
                    }), FC > S && p)
                    if (.001 >= S) {
                        var T = FC / p;
                        e.each(i, function(t, n) {
                            if (!isNaN(t)) {
                                var i = e.getItemLayout(n);
                                i.angle = T, i.startAngle = f + D * n * T, i.endAngle = f + D * (n + 1) * T
                            }
                        })
                    } else v = S / I, M = f, e.each(i, function(t, n) {
                        if (!isNaN(t)) {
                            var i = e.getItemLayout(n),
                                a = i.angle === g ? g : t * v;
                            i.startAngle = M, i.endAngle = M + D * a, M += D * a
                        }
                    });
                GC(t, d, o, s)
            })
        },
        XC = function(t) {
            return {
                seriesType: t,
                reset: function(t, e) {
                    var n = e.findComponents({ mainType: "legend" });
                    if (n && n.length) {
                        var i = t.getData();
                        i.filterSelf(function(t) {
                            for (var e = i.getName(t), a = 0; a < n.length; a++)
                                if (!n[a].isSelected(e)) return !1;
                            return !0
                        })
                    }
                }
            }
        };
    RC("pie", [{ type: "pieToggleSelect", event: "pieselectchanged", method: "toggleSelected" }, { type: "pieSelect", event: "pieselected", method: "select" }, { type: "pieUnSelect", event: "pieunselected", method: "unSelect" }]), vu(BC("pie")), mu(x(HC, "pie")), cu(XC("pie")), ZM.extend({ type: "series.scatter", dependencies: ["grid", "polar", "geo", "singleAxis", "calendar"], getInitialData: function() { return Qu(this.getSource(), this) }, brushSelector: "point", getProgressive: function() { var t = this.option.progressive; return null == t ? this.option.large ? 5e3 : this.get("progressive") : t }, getProgressiveThreshold: function() { var t = this.option.progressiveThreshold; return null == t ? this.option.large ? 1e4 : this.get("progressiveThreshold") : t }, defaultOption: { coordinateSystem: "cartesian2d", zlevel: 0, z: 2, legendHoverLink: !0, hoverAnimation: !0, symbolSize: 10, large: !1, largeThreshold: 2e3, itemStyle: { opacity: .8 }, clip: !0 } });
    var YC = 4,
        UC = nr({
            shape: { points: null },
            symbolProxy: null,
            softClipShape: null,
            buildPath: function(t, e) {
                var n = e.points,
                    i = e.size,
                    a = this.symbolProxy,
                    r = a.shape,
                    o = t.getContext ? t.getContext() : t,
                    s = o && i[0] < YC;
                if (!s)
                    for (var l = 0; l < n.length;) {
                        var u = n[l++],
                            h = n[l++];
                        isNaN(u) || isNaN(h) || (!this.softClipShape || this.softClipShape.contain(u, h)) && (r.x = u - i[0] / 2, r.y = h - i[1] / 2, r.width = i[0], r.height = i[1], a.buildPath(t, r, !0))
                    }
            },
            afterBrush: function(t) {
                var e = this.shape,
                    n = e.points,
                    i = e.size,
                    a = i[0] < YC;
                if (a) {
                    this.setTransform(t);
                    for (var r = 0; r < n.length;) {
                        var o = n[r++],
                            s = n[r++];
                        isNaN(o) || isNaN(s) || (!this.softClipShape || this.softClipShape.contain(o, s)) && t.fillRect(o - i[0] / 2, s - i[1] / 2, i[0], i[1])
                    }
                    this.restoreTransform(t)
                }
            },
            findDataIndex: function(t, e) {
                for (var n = this.shape, i = n.points, a = n.size, r = Math.max(a[0], 4), o = Math.max(a[1], 4), s = i.length / 2 - 1; s >= 0; s--) {
                    var l = 2 * s,
                        u = i[l] - r / 2,
                        h = i[l + 1] - o / 2;
                    if (t >= u && e >= h && u + r >= t && h + o >= e) return s
                }
                return -1
            }
        }),
        jC = Cd.prototype;
    jC.isPersistent = function() { return !this._incremental }, jC.updateData = function(t, e) {
        this.group.removeAll();
        var n = new UC({ rectHover: !0, cursor: "default" });
        n.setShape({ points: t.getLayout("symbolPoints") }), this._setCommon(n, t, !1, e), this.group.add(n), this._incremental = null
    }, jC.updateLayout = function(t) {
        if (!this._incremental) {
            var e = t.getLayout("symbolPoints");
            this.group.eachChild(function(t) {
                if (null != t.startIndex) {
                    var n = 2 * (t.endIndex - t.startIndex),
                        i = 4 * t.startIndex * 2;
                    e = new Float32Array(e.buffer, i, n)
                }
                t.setShape("points", e)
            })
        }
    }, jC.incrementalPrepareUpdate = function(t) { this.group.removeAll(), this._clearIncremental(), t.count() > 2e6 ? (this._incremental || (this._incremental = new er({ silent: !0 })), this.group.add(this._incremental)) : this._incremental = null }, jC.incrementalUpdate = function(t, e, n) {
        var i;
        this._incremental ? (i = new UC, this._incremental.addDisplayable(i, !0)) : (i = new UC({ rectHover: !0, cursor: "default", startIndex: t.start, endIndex: t.end }), i.incremental = !0, this.group.add(i)), i.setShape({ points: e.getLayout("symbolPoints") }), this._setCommon(i, e, !!this._incremental, n)
    }, jC._setCommon = function(t, e, n, i) {
        var a = e.hostModel;
        i = i || {};
        var r = e.getVisual("symbolSize");
        t.setShape("size", r instanceof Array ? r : [r, r]), t.softClipShape = i.clipShape || null, t.symbolProxy = zh(e.getVisual("symbol"), 0, 0, 0, 0), t.setColor = t.symbolProxy.setColor;
        var o = t.shape.size[0] < YC;
        t.useStyle(a.getModel("itemStyle").getItemStyle(o ? ["color", "shadowBlur", "shadowColor"] : ["color"]));
        var s = e.getVisual("color");
        s && t.setColor(s), n || (t.seriesIndex = a.seriesIndex, t.on("mousemove", function(e) {
            t.dataIndex = null;
            var n = t.findDataIndex(e.offsetX, e.offsetY);
            n >= 0 && (t.dataIndex = n + (t.startIndex || 0))
        }))
    }, jC.remove = function() { this._clearIncremental(), this._incremental = null, this.group.removeAll() }, jC._clearIncremental = function() {
        var t = this._incremental;
        t && t.clearDisplaybles()
    }, Su({
        type: "scatter",
        render: function(t) {
            var e = t.getData(),
                n = this._updateSymbolDraw(e, t);
            n.updateData(e, { clipShape: this._getClipShape(t) }), this._finished = !0
        },
        incrementalPrepareRender: function(t) {
            var e = t.getData(),
                n = this._updateSymbolDraw(e, t);
            n.incrementalPrepareUpdate(e), this._finished = !1
        },
        incrementalRender: function(t, e) { this._symbolDraw.incrementalUpdate(t, e.getData(), { clipShape: this._getClipShape(e) }), this._finished = t.end === e.getData().count() },
        updateTransform: function(t) {
            var e = t.getData();
            if (this.group.dirty(), !this._finished || e.count() > 1e4 || !this._symbolDraw.isPersistent()) return { update: !0 };
            var n = CC().reset(t);
            n.progress && n.progress({ start: 0, end: e.count() }, e), this._symbolDraw.updateLayout(e)
        },
        _getClipShape: function(t) {
            var e = t.coordinateSystem,
                n = e && e.getArea && e.getArea();
            return t.get("clip", !0) ? n : null
        },
        _updateSymbolDraw: function(t, e) {
            var n = this._symbolDraw,
                i = e.pipelineContext,
                a = i.large;
            return n && a === this._isLargeDraw || (n && n.remove(), n = this._symbolDraw = a ? new Cd : new nd, this._isLargeDraw = a, this.group.removeAll()), this.group.add(n.group), n
        },
        remove: function() { this._symbolDraw && this._symbolDraw.remove(!0), this._symbolDraw = null },
        dispose: function() {}
    }), vu(AC("scatter", "circle")), mu(CC("scatter")), ZM.extend({ type: "series.effectScatter", dependencies: ["grid", "polar"], getInitialData: function() { return Qu(this.getSource(), this) }, brushSelector: "point", defaultOption: { coordinateSystem: "cartesian2d", zlevel: 0, z: 2, legendHoverLink: !0, effectType: "ripple", progressive: 0, showEffectOn: "render", rippleEffect: { period: 4, scale: 2.5, brushType: "fill" }, symbolSize: 10 } });
    var ZC = 3,
        qC = kd.prototype;
    qC.stopEffectAnimation = function() { this.childAt(1).removeAll() }, qC.startEffectAnimation = function(t) {
        for (var e = t.symbolType, n = t.color, i = this.childAt(1), a = 0; ZC > a; a++) {
            var r = zh(e, -1, -1, 2, 2, n);
            r.attr({ style: { strokeNoScale: !0 }, z2: 99, silent: !0, scale: [.5, .5] });
            var o = -a / ZC * t.period + t.effectOffset;
            r.animate("", !0).when(t.period, { scale: [t.rippleScale / 2, t.rippleScale / 2] }).delay(o).start(), r.animateStyle(!0).when(t.period, { opacity: 0 }).delay(o).start(), i.add(r)
        }
        Pd(i, t)
    }, qC.updateEffectAnimation = function(t) {
        for (var e = this._effectCfg, n = this.childAt(1), i = ["symbolType", "period", "rippleScale"], a = 0; a < i.length; a++) { var r = i[a]; if (e[r] !== t[r]) return this.stopEffectAnimation(), void this.startEffectAnimation(t) }
        Pd(n, t)
    }, qC.highlight = function() { this.trigger("emphasis") }, qC.downplay = function() { this.trigger("normal") }, qC.updateData = function(t, e) {
        var n = t.hostModel;
        this.childAt(0).updateData(t, e);
        var i = this.childAt(1),
            a = t.getItemModel(e),
            r = t.getItemVisual(e, "symbol"),
            o = Ld(t.getItemVisual(e, "symbolSize")),
            s = t.getItemVisual(e, "color");
        i.attr("scale", o), i.traverse(function(t) { t.attr({ fill: s }) });
        var l = a.getShallow("symbolOffset");
        if (l) {
            var u = i.position;
            u[0] = lo(l[0], o[0]), u[1] = lo(l[1], o[1])
        }
        i.rotation = (a.getShallow("symbolRotate") || 0) * Math.PI / 180 || 0;
        var h = {};
        if (h.showEffectOn = n.get("showEffectOn"), h.rippleScale = a.get("rippleEffect.scale"), h.brushType = a.get("rippleEffect.brushType"), h.period = 1e3 * a.get("rippleEffect.period"), h.effectOffset = e / t.count(), h.z = a.getShallow("z") || 0, h.zlevel = a.getShallow("zlevel") || 0, h.symbolType = r, h.color = s, h.rippleEffectColor = a.get("rippleEffect.color"), this.off("mouseover").off("mouseout").off("emphasis").off("normal"), "render" === h.showEffectOn) this._effectCfg ? this.updateEffectAnimation(h) : this.startEffectAnimation(h), this._effectCfg = h;
        else {
            this._effectCfg = null, this.stopEffectAnimation();
            var c = this.childAt(0),
                d = function() { c.highlight(), "render" !== h.showEffectOn && this.startEffectAnimation(h) },
                f = function() { c.downplay(), "render" !== h.showEffectOn && this.stopEffectAnimation() };
            this.on("mouseover", d, this).on("mouseout", f, this).on("emphasis", d, this).on("normal", f, this)
        }
        this._effectCfg = h
    }, qC.fadeOut = function(t) { this.off("mouseover").off("mouseout").off("emphasis").off("normal"), t && t() }, h(kd, Vw), Su({
        type: "effectScatter",
        init: function() { this._symbolDraw = new nd(kd) },
        render: function(t) {
            var e = t.getData(),
                n = this._symbolDraw;
            n.updateData(e), this.group.add(n.group)
        },
        updateTransform: function(t) {
            var e = t.getData();
            this.group.dirty();
            var n = CC().reset(t);
            n.progress && n.progress({ start: 0, end: e.count() }, e), this._symbolDraw.updateLayout(e)
        },
        _updateGroupTransform: function(t) {
            var e = t.coordinateSystem;
            e && e.getRoamTransform && (this.group.transform = ze(e.getRoamTransform()), this.group.decomposeTransform())
        },
        remove: function(t, e) { this._symbolDraw && this._symbolDraw.remove(e) },
        dispose: function() {}
    }), vu(AC("effectScatter", "circle")), mu(CC("effectScatter"));
    var KC = {
            _baseAxisDim: null,
            getInitialData: function(t, e) {
                var n, i, a = e.getComponent("xAxis", this.get("xAxisIndex")),
                    r = e.getComponent("yAxis", this.get("yAxisIndex")),
                    o = a.get("type"),
                    s = r.get("type");
                "category" === o ? (t.layout = "horizontal", n = a.getOrdinalMeta(), i = !0) : "category" === s ? (t.layout = "vertical", n = r.getOrdinalMeta(), i = !0) : t.layout = t.layout || "horizontal";
                var l = ["x", "y"],
                    u = "horizontal" === t.layout ? 0 : 1,
                    h = this._baseAxisDim = l[u],
                    c = l[1 - u],
                    d = [a, r],
                    g = d[u].get("type"),
                    p = d[1 - u].get("type"),
                    m = t.data;
                if (m && i) {
                    var v = [];
                    f(m, function(t, e) {
                        var n;
                        t.value && _(t.value) ? (n = t.value.slice(), t.value.unshift(e)) : _(t) ? (n = t.slice(), t.unshift(e)) : n = t, v.push(n)
                    }), t.data = v
                }
                var y = this.defaultValueDimensions;
                return NC(this, { coordDimensions: [{ name: h, type: ku(g), ordinalMeta: n, otherDims: { tooltip: !1, itemName: 0 }, dimsDef: ["base"] }, { name: c, type: ku(p), dimsDef: y.slice() }], dimensionsCount: y.length + 1 })
            },
            getBaseAxis: function() { var t = this._baseAxisDim; return this.ecModel.getComponent(t + "Axis", this.get(t + "AxisIndex")).axis }
        },
        $C = ZM.extend({ type: "series.candlestick", dependencies: ["xAxis", "yAxis", "grid"], defaultValueDimensions: [{ name: "open", defaultTooltip: !0 }, { name: "close", defaultTooltip: !0 }, { name: "lowest", defaultTooltip: !0 }, { name: "highest", defaultTooltip: !0 }], dimensions: null, defaultOption: { zlevel: 0, z: 2, coordinateSystem: "cartesian2d", legendHoverLink: !0, hoverAnimation: !0, layout: null, clip: !0, itemStyle: { color: "#c23531", color0: "#314656", borderWidth: 1, borderColor: "#c23531", borderColor0: "#314656" }, emphasis: { itemStyle: { borderWidth: 2 } }, barMaxWidth: null, barMinWidth: null, barWidth: null, large: !0, largeThreshold: 600, progressive: 3e3, progressiveThreshold: 1e4, progressiveChunkMode: "mod", animationUpdate: !1, animationEasing: "linear", animationDuration: 300 }, getShadowDim: function() { return "open" }, brushSelector: function(t, e, n) { var i = e.getItemLayout(t); return i && n.rect(i.brushRect) } });
    c($C, KC, !0);
    var JC = ["itemStyle"],
        QC = ["emphasis", "itemStyle"],
        tL = ["color", "color0", "borderColor", "borderColor0"],
        eL = (el.extend({
            type: "candlestick",
            render: function(t) { this.group.removeClipPath(), this._updateDrawMode(t), this._isLargeDraw ? this._renderLarge(t) : this._renderNormal(t) },
            incrementalPrepareRender: function(t) { this._clear(), this._updateDrawMode(t) },
            incrementalRender: function(t, e) { this._isLargeDraw ? this._incrementalRenderLarge(t, e) : this._incrementalRenderNormal(t, e) },
            _updateDrawMode: function(t) {
                var e = t.pipelineContext.large;
                (null == this._isLargeDraw || e ^ this._isLargeDraw) && (this._isLargeDraw = e, this._clear())
            },
            _renderNormal: function(t) {
                var e = t.getData(),
                    n = this._data,
                    i = this.group,
                    a = e.getLayout("isSimpleBox"),
                    r = t.get("clip", !0),
                    o = t.coordinateSystem,
                    s = o.getArea && o.getArea();
                this._data || i.removeAll(), e.diff(n).add(function(n) {
                    if (e.hasValue(n)) {
                        var o, l = e.getItemLayout(n);
                        if (r && Od(s, l)) return;
                        o = Nd(l, n, !0), Wr(o, { shape: { points: l.ends } }, t, n), Ed(o, e, n, a), i.add(o), e.setItemGraphicEl(n, o)
                    }
                }).update(function(o, l) { var u = n.getItemGraphicEl(l); if (!e.hasValue(o)) return void i.remove(u); var h = e.getItemLayout(o); return r && Od(s, h) ? void i.remove(u) : (u ? Fr(u, { shape: { points: h.ends } }, t, o) : u = Nd(h, o), Ed(u, e, o, a), i.add(u), void e.setItemGraphicEl(o, u)) }).remove(function(t) {
                    var e = n.getItemGraphicEl(t);
                    e && i.remove(e)
                }).execute(), this._data = e
            },
            _renderLarge: function(t) {
                this._clear(), Rd(t, this.group);
                var e = t.get("clip", !0) ? bc(t.coordinateSystem, !1, t) : null;
                e ? this.group.setClipPath(e) : this.group.removeClipPath()
            },
            _incrementalRenderNormal: function(t, e) {
                for (var n, i = e.getData(), a = i.getLayout("isSimpleBox"); null != (n = t.next());) {
                    var r, o = i.getItemLayout(n);
                    r = Nd(o, n), Ed(r, i, n, a), r.incremental = !0, this.group.add(r)
                }
            },
            _incrementalRenderLarge: function(t, e) { Rd(e, this.group, !0) },
            remove: function() { this._clear() },
            _clear: function() { this.group.removeAll(), this._data = null },
            dispose: G
        }), Wa.extend({
            type: "normalCandlestickBox",
            shape: {},
            buildPath: function(t, e) {
                var n = e.points;
                this.__simpleBox ? (t.moveTo(n[4][0], n[4][1]), t.lineTo(n[6][0], n[6][1])) : (t.moveTo(n[0][0], n[0][1]), t.lineTo(n[1][0], n[1][1]), t.lineTo(n[2][0], n[2][1]), t.lineTo(n[3][0], n[3][1]), t.closePath(), t.moveTo(n[4][0], n[4][1]), t.lineTo(n[5][0], n[5][1]), t.moveTo(n[6][0], n[6][1]), t.lineTo(n[7][0], n[7][1]))
            }
        })),
        nL = Wa.extend({
            type: "largeCandlestickBox",
            shape: {},
            buildPath: function(t, e) {
                for (var n = e.points, i = 0; i < n.length;)
                    if (this.__sign === n[i++]) {
                        var a = n[i++];
                        t.moveTo(a, n[i++]), t.lineTo(a, n[i++])
                    } else i += 3
            }
        }),
        iL = function(t) { t && _(t.series) && f(t.series, function(t) { S(t) && "k" === t.type && (t.type = "candlestick") }) },
        aL = ["itemStyle", "borderColor"],
        rL = ["itemStyle", "borderColor0"],
        oL = ["itemStyle", "color"],
        sL = ["itemStyle", "color0"],
        lL = {
            seriesType: "candlestick",
            plan: $M(),
            performRawSeries: !0,
            reset: function(t, e) {
                function n(t, e) {
                    for (var n; null != (n = t.next());) {
                        var r = e.getItemModel(n),
                            o = e.getItemLayout(n).sign;
                        e.setItemVisual(n, { color: i(o, r), borderColor: a(o, r) })
                    }
                }

                function i(t, e) { return e.get(t > 0 ? oL : sL) }

                function a(t, e) { return e.get(t > 0 ? aL : rL) }
                var r = t.getData(),
                    o = t.pipelineContext.large;
                return r.setVisual({ legendSymbol: "roundRect", colorP: i(1, t), colorN: i(-1, t), borderColorP: a(1, t), borderColorN: a(-1, t) }), e.isSeriesFiltered(t) ? void 0 : !o && { progress: n }
            }
        },
        uL = "undefined" != typeof Float32Array ? Float32Array : Array,
        hL = {
            seriesType: "candlestick",
            plan: $M(),
            reset: function(t) {
                function e(t, e) {
                    function n(t, e) { var n = []; return n[o] = e, n[s] = t, isNaN(e) || isNaN(t) ? [0 / 0, 0 / 0] : i.dataToPoint(n) }

                    function a(t, e, n) {
                        var i = e.slice(),
                            a = e.slice();
                        i[o] = NI(i[o] + r / 2, 1, !1), a[o] = NI(a[o] - r / 2, 1, !0), n ? t.push(i, a) : t.push(a, i)
                    }

                    function l(t, e, i) {
                        var a = n(t, i),
                            l = n(e, i);
                        return a[o] -= r / 2, l[o] -= r / 2, { x: a[0], y: a[1], width: s ? r : l[0] - a[0], height: s ? l[1] - a[1] : r }
                    }

                    function h(t) { return t[o] = NI(t[o], 1), t }
                    for (var p; null != (p = t.next());) {
                        var m = e.get(u, p),
                            v = e.get(c, p),
                            y = e.get(d, p),
                            x = e.get(f, p),
                            _ = e.get(g, p),
                            w = Math.min(v, y),
                            b = Math.max(v, y),
                            S = n(w, m),
                            I = n(b, m),
                            M = n(x, m),
                            D = n(_, m),
                            T = [];
                        a(T, I, 0), a(T, S, 1), T.push(h(D), h(I), h(M), h(S)), e.setItemLayout(p, { sign: Vd(e, p, v, y, d), initBaseline: v > y ? I[s] : S[s], ends: T, brushRect: l(x, _, m) })
                    }
                }

                function n(t, e) {
                    for (var n, a, r = new uL(4 * t.count), l = 0, h = [], p = []; null != (a = t.next());) {
                        var m = e.get(u, a),
                            v = e.get(c, a),
                            y = e.get(d, a),
                            x = e.get(f, a),
                            _ = e.get(g, a);
                        isNaN(m) || isNaN(x) || isNaN(_) ? (r[l++] = 0 / 0, l += 3) : (r[l++] = Vd(e, a, v, y, d), h[o] = m, h[s] = x, n = i.dataToPoint(h, null, p), r[l++] = n ? n[0] : 0 / 0, r[l++] = n ? n[1] : 0 / 0, h[s] = _, n = i.dataToPoint(h, null, p), r[l++] = n ? n[1] : 0 / 0)
                    }
                    e.setLayout("largePoints", r)
                }
                var i = t.coordinateSystem,
                    a = t.getData(),
                    r = Gd(t, a),
                    o = 0,
                    s = 1,
                    l = ["x", "y"],
                    u = a.mapDimension(l[o]),
                    h = a.mapDimension(l[s], !0),
                    c = h[0],
                    d = h[1],
                    f = h[2],
                    g = h[3];
                return a.setLayout({ candleWidth: r, isSimpleBox: 1.3 >= r }), null == u || h.length < 4 ? void 0 : { progress: t.pipelineContext.large ? n : e }
            }
        };
    hu(iL), vu(lL), mu(hL), h(Fd, MA), Wd.prototype.getIndicatorAxes = function() { return this._indicatorAxes }, Wd.prototype.dataToPoint = function(t, e) { var n = this._indicatorAxes[e]; return this.coordToPoint(n.dataToCoord(t), e) }, Wd.prototype.coordToPoint = function(t, e) {
        var n = this._indicatorAxes[e],
            i = n.angle,
            a = this.cx + t * Math.cos(i),
            r = this.cy - t * Math.sin(i);
        return [a, r]
    }, Wd.prototype.pointToData = function(t) {
        var e = t[0] - this.cx,
            n = t[1] - this.cy,
            i = Math.sqrt(e * e + n * n);
        e /= i, n /= i;
        for (var a, r = Math.atan2(-n, e), o = 1 / 0, s = -1, l = 0; l < this._indicatorAxes.length; l++) {
            var u = this._indicatorAxes[l],
                h = Math.abs(r - u.angle);
            o > h && (a = u, s = l, o = h)
        }
        return [s, +(a && a.coordToData(i))]
    }, Wd.prototype.resize = function(t, e) {
        var n = t.get("center"),
            i = e.getWidth(),
            a = e.getHeight(),
            r = Math.min(i, a) / 2;
        this.cx = lo(n[0], i), this.cy = lo(n[1], a), this.startAngle = t.get("startAngle") * Math.PI / 180;
        var o = t.get("radius");
        ("string" == typeof o || "number" == typeof o) && (o = [0, o]), this.r0 = lo(o[0], r), this.r = lo(o[1], r), f(this._indicatorAxes, function(t, e) {
            t.setExtent(this.r0, this.r);
            var n = this.startAngle + e * Math.PI * 2 / this._indicatorAxes.length;
            n = Math.atan2(Math.sin(n), Math.cos(n)), t.angle = n
        }, this)
    }, Wd.prototype.update = function(t) {
        function e(t) {
            var e = Math.pow(10, Math.floor(Math.log(t) / Math.LN10)),
                n = t / e;
            return 2 === n ? n = 5 : n *= 2, n * e
        }
        var n = this._indicatorAxes,
            i = this._model;
        f(n, function(t) { t.scale.setExtent(1 / 0, -1 / 0) }), t.eachSeriesByType("radar", function(e) {
            if ("radar" === e.get("coordinateSystem") && t.getComponent("radar", e.get("radarIndex")) === i) {
                var a = e.getData();
                f(n, function(t) { t.scale.unionExtentFromData(a, a.mapDimension(t.dim)) })
            }
        }, this);
        var a = i.get("splitNumber");
        f(n, function(t) {
            var n = Ih(t.scale, t.model);
            Dh(t.scale, t.model);
            var i = t.model,
                r = t.scale,
                o = i.getMin(),
                s = i.getMax(),
                l = r.getInterval();
            if (null != o && null != s) r.setExtent(+o, +s), r.setInterval((s - o) / a);
            else if (null != o) {
                var u;
                do u = o + l * a, r.setExtent(+o, u), r.setInterval(l), l = e(l); while (u < n[1] && isFinite(u) && isFinite(n[1]))
            } else if (null != s) {
                var h;
                do h = s - l * a, r.setExtent(h, +s), r.setInterval(l), l = e(l); while (h > n[0] && isFinite(h) && isFinite(n[0]))
            } else {
                var c = r.getTicks().length - 1;
                c > a && (l = e(l));
                var d = Math.round((n[0] + n[1]) / 2 / l) * l,
                    f = Math.round(a / 2);
                r.setExtent(uo(d - f * l), uo(d + (a - f) * l)), r.setInterval(l)
            }
        })
    }, Wd.dimensions = [], Wd.create = function(t, e) {
        var n = [];
        return t.eachComponent("radar", function(i) {
            var a = new Wd(i, t, e);
            n.push(a), i.coordinateSystem = a
        }), t.eachSeriesByType("radar", function(t) { "radar" === t.get("coordinateSystem") && (t.coordinateSystem = n[t.get("radarIndex") || 0]) }), n
    }, ps.register("radar", Wd);
    var cL = kA.valueAxis,
        dL = (_u({
            type: "radar",
            optionUpdated: function() {
                var t = this.get("boundaryGap"),
                    e = this.get("splitNumber"),
                    n = this.get("scale"),
                    r = this.get("axisLine"),
                    l = this.get("axisTick"),
                    u = this.get("axisType"),
                    h = this.get("axisLabel"),
                    c = this.get("name"),
                    d = this.get("name.show"),
                    f = this.get("name.formatter"),
                    p = this.get("nameGap"),
                    m = this.get("triggerEvent"),
                    v = g(this.get("indicator") || [], function(g) {
                        null != g.max && g.max > 0 && !g.min ? g.min = 0 : null != g.min && g.min < 0 && !g.max && (g.max = 0);
                        var v = c;
                        if (null != g.color && (v = s({ color: g.color }, c)), g = a(i(g), { boundaryGap: t, splitNumber: e, scale: n, axisLine: r, axisTick: l, axisType: u, axisLabel: h, name: g.text, nameLocation: "end", nameGap: p, nameTextStyle: v, triggerEvent: m }, !1), d || (g.name = ""), "string" == typeof f) {
                            var y = g.name;
                            g.name = f.replace("{value}", null != y ? y : "")
                        } else "function" == typeof f && (g.name = f(g.name, g));
                        var x = o(new to(g, null, this.ecModel), hA);
                        return x.mainType = "radar", x.componentIndex = this.componentIndex, x
                    }, this);
                this.getIndicatorModels = function() { return v }
            },
            defaultOption: { zlevel: 0, z: 0, center: ["50%", "50%"], radius: "75%", startAngle: 90, name: { show: !0 }, boundaryGap: [0, 0], splitNumber: 5, nameGap: 15, scale: !1, shape: "polygon", axisLine: a({ lineStyle: { color: "#bbb" } }, cL.axisLine), axisLabel: Hd(cL.axisLabel, !1), axisTick: Hd(cL.axisTick, !1), axisType: "interval", splitLine: Hd(cL.splitLine, !0), splitArea: Hd(cL.splitArea, !0), indicator: [] }
        }), ["axisLine", "axisTickLabel", "axisName"]);
    wu({
        type: "radar",
        render: function(t) {
            var e = this.group;
            e.removeAll(), this._buildAxes(t), this._buildSplitLineAndArea(t)
        },
        _buildAxes: function(t) {
            var e = t.coordinateSystem,
                n = e.getIndicatorAxes(),
                i = g(n, function(t) { var n = new QA(t.model, { position: [e.cx, e.cy], rotation: t.angle, labelDirection: -1, tickDirection: -1, nameDirection: 1 }); return n });
            f(i, function(t) { f(dL, t.add, t), this.group.add(t.getGroup()) }, this)
        },
        _buildSplitLineAndArea: function(t) {
            function e(t, e, n) { var i = n % e.length; return t[i] = t[i] || [], i }
            var n = t.coordinateSystem,
                i = n.getIndicatorAxes();
            if (i.length) {
                var a = t.get("shape"),
                    r = t.getModel("splitLine"),
                    o = t.getModel("splitArea"),
                    l = r.getModel("lineStyle"),
                    u = o.getModel("areaStyle"),
                    h = r.get("show"),
                    c = o.get("show"),
                    d = l.get("color"),
                    p = u.get("color");
                d = _(d) ? d : [d], p = _(p) ? p : [p];
                var m = [],
                    v = [];
                if ("circle" === a)
                    for (var y = i[0].getTicksCoords(), x = n.cx, w = n.cy, b = 0; b < y.length; b++) {
                        if (h) {
                            var S = e(m, d, b);
                            m[S].push(new tI({ shape: { cx: x, cy: w, r: y[b].coord } }))
                        }
                        if (c && b < y.length - 1) {
                            var S = e(v, p, b);
                            v[S].push(new aI({ shape: { cx: x, cy: w, r0: y[b].coord, r: y[b + 1].coord } }))
                        }
                    } else
                        for (var I, M = g(i, function(t, e) { var i = t.getTicksCoords(); return I = null == I ? i.length - 1 : Math.min(i.length - 1, I), g(i, function(t) { return n.coordToPoint(t.coord, e) }) }), D = [], b = 0; I >= b; b++) {
                            for (var T = [], A = 0; A < i.length; A++) T.push(M[A][b]);
                            if (T[0] && T.push(T[0].slice()), h) {
                                var S = e(m, d, b);
                                m[S].push(new lI({ shape: { points: T } }))
                            }
                            if (c && D) {
                                var S = e(v, p, b - 1);
                                v[S].push(new sI({ shape: { points: T.concat(D) } }))
                            }
                            D = T.slice().reverse()
                        }
                var C = l.getLineStyle(),
                    L = u.getAreaStyle();
                f(v, function(t, e) { this.group.add(kI(t, { style: s({ stroke: "none", fill: p[e % p.length] }, L), silent: !0 })) }, this), f(m, function(t, e) { this.group.add(kI(t, { style: s({ fill: "none", stroke: d[e % d.length] }, C), silent: !0 })) }, this)
            }
        }
    });
    var fL = ZM.extend({
        type: "series.radar",
        dependencies: ["radar"],
        init: function() { fL.superApply(this, "init", arguments), this.legendDataProvider = function() { return this.getRawData() } },
        getInitialData: function() { return NC(this, { generateCoord: "indicator_", generateCoordCount: 1 / 0 }) },
        formatTooltip: function(t) {
            var e = this.getData(),
                n = this.coordinateSystem,
                i = n.getIndicatorAxes(),
                a = this.getData().getName(t);
            return To("" === a ? this.name : a) + "<br/>" + g(i, function(n) { var i = e.get(e.mapDimension(n.dim), t); return To(n.name + " : " + i) }).join("<br />")
        },
        defaultOption: { zlevel: 0, z: 2, coordinateSystem: "radar", legendHoverLink: !0, radarIndex: 0, lineStyle: { width: 2, type: "solid" }, label: { position: "top" }, symbol: "emptyCircle", symbolSize: 4 }
    });
    Su({
        type: "radar",
        render: function(t) {
            function e(t, e) {
                var n = t.getItemVisual(e, "symbol") || "circle",
                    i = t.getItemVisual(e, "color");
                if ("none" !== n) {
                    var a = Xd(t.getItemVisual(e, "symbolSize")),
                        r = zh(n, -1, -1, 2, 2, i);
                    return r.attr({ style: { strokeNoScale: !0 }, z2: 100, scale: [a[0] / 2, a[1] / 2] }), r
                }
            }

            function n(n, i, a, r, o, s) {
                a.removeAll();
                for (var l = 0; l < i.length - 1; l++) {
                    var u = e(r, o);
                    u && (u.__dimIdx = l, n[l] ? (u.attr("position", n[l]), zI[s ? "initProps" : "updateProps"](u, { position: i[l] }, t, o)) : u.attr("position", i[l]), a.add(u))
                }
            }

            function a(t) { return g(t, function() { return [r.cx, r.cy] }) }
            var r = t.coordinateSystem,
                o = this.group,
                l = t.getData(),
                u = this._data;
            l.diff(u).add(function(e) {
                var i = l.getItemLayout(e);
                if (i) {
                    var r = new sI,
                        o = new lI,
                        s = { shape: { points: i } };
                    r.shape.points = a(i), o.shape.points = a(i), Wr(r, s, t, e), Wr(o, s, t, e);
                    var u = new Vw,
                        h = new Vw;
                    u.add(o), u.add(r), u.add(h), n(o.shape.points, i, h, l, e, !0), l.setItemGraphicEl(e, u)
                }
            }).update(function(e, i) {
                var a = u.getItemGraphicEl(i),
                    r = a.childAt(0),
                    o = a.childAt(1),
                    s = a.childAt(2),
                    h = { shape: { points: l.getItemLayout(e) } };
                h.shape.points && (n(r.shape.points, h.shape.points, s, l, e, !1), Fr(r, h, t), Fr(o, h, t), l.setItemGraphicEl(e, a))
            }).remove(function(t) { o.remove(u.getItemGraphicEl(t)) }).execute(), l.eachItemGraphicEl(function(t, e) {
                var n = l.getItemModel(e),
                    a = t.childAt(0),
                    r = t.childAt(1),
                    u = t.childAt(2),
                    h = l.getItemVisual(e, "color");
                o.add(t), a.useStyle(s(n.getModel("lineStyle").getLineStyle(), { fill: "none", stroke: h })), a.hoverStyle = n.getModel("emphasis.lineStyle").getLineStyle();
                var c = n.getModel("areaStyle"),
                    d = n.getModel("emphasis.areaStyle"),
                    f = c.isEmpty() && c.parentModel.isEmpty(),
                    g = d.isEmpty() && d.parentModel.isEmpty();
                g = g && f, r.ignore = f, r.useStyle(s(c.getAreaStyle(), { fill: h, opacity: .7 })), r.hoverStyle = d.getAreaStyle();
                var p = n.getModel("itemStyle").getItemStyle(["color"]),
                    m = n.getModel("emphasis.itemStyle").getItemStyle(),
                    v = n.getModel("label"),
                    y = n.getModel("emphasis.label");
                u.eachChild(function(t) {
                    t.setStyle(p), t.hoverStyle = i(m);
                    var n = l.get(l.dimensions[t.__dimIdx], e);
                    (null == n || isNaN(n)) && (n = ""), Cr(t.style, t.hoverStyle, v, y, { labelFetcher: l.hostModel, labelDataIndex: e, labelDimIndex: t.__dimIdx, defaultText: n, autoColor: h, isRectText: !0 })
                }), t.highDownOnUpdate = function(t, e) { r.attr("ignore", "emphasis" === e ? g : f) }, Mr(t)
            }), this._data = l
        },
        remove: function() { this.group.removeAll(), this._data = null },
        dispose: function() {}
    });
    var gL = function(t) {
            t.eachSeriesByType("radar", function(t) {
                var e = t.getData(),
                    n = [],
                    i = t.coordinateSystem;
                if (i) {
                    var a = i.getIndicatorAxes();
                    f(a, function(t, r) {
                        e.each(e.mapDimension(a[r].dim), function(t, e) {
                            n[e] = n[e] || [];
                            var a = i.dataToPoint(t, r);
                            n[e][r] = Yd(a) ? a : Ud(i)
                        })
                    }), e.each(function(t) {
                        var a = v(n[t], function(t) { return Yd(t) }) || Ud(i);
                        n[t].push(a.slice()), e.setItemLayout(t, n[t])
                    })
                }
            })
        },
        pL = function(t) {
            var e = t.polar;
            if (e) {
                _(e) || (e = [e]);
                var n = [];
                f(e, function(e) { e.indicator ? (e.type && !e.shape && (e.shape = e.type), t.radar = t.radar || [], _(t.radar) || (t.radar = [t.radar]), t.radar.push(e)) : n.push(e) }), t.polar = n
            }
            f(t.series, function(t) { t && "radar" === t.type && t.polarIndex && (t.radarIndex = t.polarIndex) })
        };
    vu(BC("radar")), vu(AC("radar", "circle")), mu(gL), cu(XC("radar")), hu(pL), ZM.extend({ type: "series.heatmap", getInitialData: function() { return Qu(this.getSource(), this, { generateCoord: "value" }) }, preventIncremental: function() { var t = ps.get(this.get("coordinateSystem")); return t && t.dimensions ? "lng" === t.dimensions[0] && "lat" === t.dimensions[1] : void 0 }, defaultOption: { coordinateSystem: "cartesian2d", zlevel: 0, z: 2, geoIndex: 0, blurSize: 30, pointSize: 20, maxOpacity: 1, minOpacity: 0 } });
    var mL = 256;
    jd.prototype = {
        update: function(t, e, n, i, a, r) {
            var o = this._getBrush(),
                s = this._getGradient(t, a, "inRange"),
                l = this._getGradient(t, a, "outOfRange"),
                u = this.pointSize + this.blurSize,
                h = this.canvas,
                c = h.getContext("2d"),
                d = t.length;
            h.width = e, h.height = n;
            for (var f = 0; d > f; ++f) {
                var g = t[f],
                    p = g[0],
                    m = g[1],
                    v = g[2],
                    y = i(v);
                c.globalAlpha = y, c.drawImage(o, p - u, m - u)
            }
            if (!h.width || !h.height) return h;
            for (var x = c.getImageData(0, 0, h.width, h.height), _ = x.data, w = 0, b = _.length, S = this.minOpacity, I = this.maxOpacity, M = I - S; b > w;) {
                var y = _[w + 3] / 256,
                    D = 4 * Math.floor(y * (mL - 1));
                if (y > 0) {
                    var T = r(y) ? s : l;
                    y > 0 && (y = y * M + S), _[w++] = T[D], _[w++] = T[D + 1], _[w++] = T[D + 2], _[w++] = T[D + 3] * y * 256
                } else w += 4
            }
            return c.putImageData(x, 0, 0), h
        },
        _getBrush: function() {
            var t = this._brushCanvas || (this._brushCanvas = R_()),
                e = this.pointSize + this.blurSize,
                n = 2 * e;
            t.width = n, t.height = n;
            var i = t.getContext("2d");
            return i.clearRect(0, 0, n, n), i.shadowOffsetX = n, i.shadowBlur = this.blurSize, i.shadowColor = "#000", i.beginPath(), i.arc(-e, e, this.pointSize, 0, 2 * Math.PI, !0), i.closePath(), i.fill(), t
        },
        _getGradient: function(t, e, n) { for (var i = this._gradientPixels, a = i[n] || (i[n] = new Uint8ClampedArray(1024)), r = [0, 0, 0, 0], o = 0, s = 0; 256 > s; s++) e[n](s / 255, !0, r), a[o++] = r[0], a[o++] = r[1], a[o++] = r[2], a[o++] = r[3]; return a }
    }, Su({
        type: "heatmap",
        render: function(t, e, n) {
            var i;
            e.eachComponent("visualMap", function(e) { e.eachTargetSeries(function(n) { n === t && (i = e) }) }), this.group.removeAll(), this._incrementalDisplayable = null;
            var a = t.coordinateSystem;
            "cartesian2d" === a.type || "calendar" === a.type ? this._renderOnCartesianAndCalendar(t, n, 0, t.getData().count()) : Kd(a) && this._renderOnGeo(a, t, i, n)
        },
        incrementalPrepareRender: function() { this.group.removeAll() },
        incrementalRender: function(t, e, n, i) {
            var a = e.coordinateSystem;
            a && this._renderOnCartesianAndCalendar(e, i, t.start, t.end, !0)
        },
        _renderOnCartesianAndCalendar: function(t, e, n, i, a) {
            var r, s, l = t.coordinateSystem;
            if ("cartesian2d" === l.type) {
                var u = l.getAxis("x"),
                    h = l.getAxis("y");
                r = u.getBandWidth(), s = h.getBandWidth()
            }
            for (var c = this.group, d = t.getData(), f = "itemStyle", g = "emphasis.itemStyle", p = "label", m = "emphasis.label", v = t.getModel(f).getItemStyle(["color"]), y = t.getModel(g).getItemStyle(), x = t.getModel(p), _ = t.getModel(m), w = l.type, b = "cartesian2d" === w ? [d.mapDimension("x"), d.mapDimension("y"), d.mapDimension("value")] : [d.mapDimension("time"), d.mapDimension("value")], S = n; i > S; S++) {
                var I;
                if ("cartesian2d" === w) {
                    if (isNaN(d.get(b[2], S))) continue;
                    var M = l.dataToPoint([d.get(b[0], S), d.get(b[1], S)]);
                    I = new cI({ shape: { x: M[0] - r / 2, y: M[1] - s / 2, width: r, height: s }, style: { fill: d.getItemVisual(S, "color"), opacity: d.getItemVisual(S, "opacity") } })
                } else {
                    if (isNaN(d.get(b[1], S))) continue;
                    I = new cI({ z2: 1, shape: l.dataToRect([d.get(b[0], S)]).contentShape, style: { fill: d.getItemVisual(S, "color"), opacity: d.getItemVisual(S, "opacity") } })
                }
                var D = d.getItemModel(S);
                d.hasItemOption && (v = D.getModel(f).getItemStyle(["color"]), y = D.getModel(g).getItemStyle(), x = D.getModel(p), _ = D.getModel(m));
                var T = t.getRawValue(S),
                    A = "-";
                T && null != T[2] && (A = T[2]), Cr(v, y, x, _, { labelFetcher: t, labelDataIndex: S, defaultText: A, isRectText: !0 }), I.setStyle(v), Mr(I, d.hasItemOption ? y : o({}, y)), I.incremental = a, a && (I.useHoverLayer = !0), c.add(I), d.setItemGraphicEl(S, I)
            }
        },
        _renderOnGeo: function(t, e, n, i) {
            var a = n.targetVisuals.inRange,
                r = n.targetVisuals.outOfRange,
                o = e.getData(),
                s = this._hmLayer || this._hmLayer || new jd;
            s.blurSize = e.get("blurSize"), s.pointSize = e.get("pointSize"), s.minOpacity = e.get("minOpacity"), s.maxOpacity = e.get("maxOpacity");
            var l = t.getViewRect().clone(),
                u = t.getRoamTransform();
            l.applyTransform(u);
            var h = Math.max(l.x, 0),
                c = Math.max(l.y, 0),
                d = Math.min(l.width + l.x, i.getWidth()),
                f = Math.min(l.height + l.y, i.getHeight()),
                g = d - h,
                p = f - c,
                m = [o.mapDimension("lng"), o.mapDimension("lat"), o.mapDimension("value")],
                v = o.mapArray(m, function(e, n, i) { var a = t.dataToPoint([e, n]); return a[0] -= h, a[1] -= c, a.push(i), a }),
                y = n.getExtent(),
                x = "visualMap.continuous" === n.type ? qd(y, n.option.range) : Zd(y, n.getPieceList(), n.option.selected);
            s.update(v, g, p, a.color.getNormalizer(), { inRange: a.color.getColorMapper(), outOfRange: r.color.getColorMapper() }, x);
            var _ = new Si({ style: { width: g, height: p, x: h, y: c, image: s.canvas }, silent: !0 });
            this.group.add(_)
        },
        dispose: function() {}
    });
    var vL = f,
        yL = "\x00__link_datas",
        xL = "\x00__link_mainData",
        _L = function(t, e) { this.name = t || "", this.depth = 0, this.height = 0, this.parentNode = null, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.hostTree = e };
    _L.prototype = {
        constructor: _L,
        isRemoved: function() {
            return this.dataIndex < 0
        },
        eachNode: function(t, e, n) {
            "function" == typeof t && (n = e, e = t, t = null), t = t || {}, b(t) && (t = { order: t });
            var i, a = t.order || "preorder",
                r = this[t.attr || "children"];
            "preorder" === a && (i = e.call(n, this));
            for (var o = 0; !i && o < r.length; o++) r[o].eachNode(t, e, n);
            "postorder" === a && e.call(n, this)
        },
        updateDepthAndHeight: function(t) {
            var e = 0;
            this.depth = t;
            for (var n = 0; n < this.children.length; n++) {
                var i = this.children[n];
                i.updateDepthAndHeight(t + 1), i.height > e && (e = i.height)
            }
            this.height = e + 1
        },
        getNodeById: function(t) { if (this.getId() === t) return this; for (var e = 0, n = this.children, i = n.length; i > e; e++) { var a = n[e].getNodeById(t); if (a) return a } },
        contains: function(t) { if (t === this) return !0; for (var e = 0, n = this.children, i = n.length; i > e; e++) { var a = n[e].contains(t); if (a) return a } },
        getAncestors: function(t) { for (var e = [], n = t ? this : this.parentNode; n;) e.push(n), n = n.parentNode; return e.reverse(), e },
        getValue: function(t) { var e = this.hostTree.data; return e.get(e.getDimension(t || "value"), this.dataIndex) },
        setLayout: function(t, e) { this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, t, e) },
        getLayout: function() { return this.hostTree.data.getItemLayout(this.dataIndex) },
        getModel: function(t) {
            if (!(this.dataIndex < 0)) {
                var e, n = this.hostTree,
                    i = n.data.getItemModel(this.dataIndex),
                    a = this.getLevelModel();
                return a || 0 !== this.children.length && (0 === this.children.length || this.isExpand !== !1) || (e = this.getLeavesModel()), i.getModel(t, (a || e || n.hostModel).getModel(t))
            }
        },
        getLevelModel: function() { return (this.hostTree.levelModels || [])[this.depth] },
        getLeavesModel: function() { return this.hostTree.leavesModel },
        setVisual: function(t, e) { this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, t, e) },
        getVisual: function(t, e) { return this.hostTree.data.getItemVisual(this.dataIndex, t, e) },
        getRawIndex: function() { return this.hostTree.data.getRawIndex(this.dataIndex) },
        getId: function() { return this.hostTree.data.getId(this.dataIndex) },
        isAncestorOf: function(t) {
            for (var e = t.parentNode; e;) {
                if (e === this) return !0;
                e = e.parentNode
            }
            return !1
        },
        isDescendantOf: function(t) { return t !== this && t.isAncestorOf(this) }
    }, of.prototype = { constructor: of, type: "tree", eachNode: function(t, e, n) { this.root.eachNode(t, e, n) }, getNodeByDataIndex: function(t) { var e = this.data.getRawIndex(t); return this._nodes[e] }, getNodeByName: function(t) { return this.root.getNodeByName(t) }, update: function() { for (var t = this.data, e = this._nodes, n = 0, i = e.length; i > n; n++) e[n].dataIndex = -1; for (var n = 0, i = t.count(); i > n; n++) e[t.getRawIndex(n)].dataIndex = n }, clearLayouts: function() { this.data.clearItemLayouts() } }, of.createTree = function(t, e, n) {
        function i(t, e) {
            var n = t.value;
            o = Math.max(o, _(n) ? n.length : 1), r.push(t);
            var s = new _L(t.name, a);
            e ? sf(s, e) : a.root = s, a._nodes.push(s);
            var l = t.children;
            if (l)
                for (var u = 0; u < l.length; u++) i(l[u], s)
        }
        var a = new of(e, n.levels, n.leaves),
            r = [],
            o = 1;
        i(t), a.root.updateDepthAndHeight(0);
        var s = OT(r, { coordDimensions: ["value"], dimensionsCount: o }),
            l = new PT(s, e);
        return l.initData(r), $d({ mainData: l, struct: a, structAttr: "tree" }), a.update(), a
    }, ZM.extend({
        type: "series.tree",
        layoutInfo: null,
        layoutMode: "box",
        getInitialData: function(t) {
            var e = { name: t.name, children: t.data },
                n = t.leaves || {},
                i = {};
            i.leaves = n;
            var a = of.createTree(e, this, i),
                r = 0;
            a.eachNode("preorder", function(t) { t.depth > r && (r = t.depth) });
            var o = t.expandAndCollapse,
                s = o && t.initialTreeDepth >= 0 ? t.initialTreeDepth : r;
            return a.root.eachNode("preorder", function(t) {
                var e = t.hostTree.data.getRawDataItem(t.dataIndex);
                t.isExpand = e && null != e.collapsed ? !e.collapsed : t.depth <= s
            }), a.data
        },
        getOrient: function() { var t = this.get("orient"); return "horizontal" === t ? t = "LR" : "vertical" === t && (t = "TB"), t },
        setZoom: function(t) { this.option.zoom = t },
        setCenter: function(t) { this.option.center = t },
        formatTooltip: function(t) { for (var e = this.getData().tree, n = e.root.children[0], i = e.getNodeByDataIndex(t), a = i.getValue(), r = i.name; i && i !== n;) r = i.parentNode.name + "." + r, i = i.parentNode; return To(r + (isNaN(a) || null == a ? "" : " : " + a)) },
        defaultOption: { zlevel: 0, z: 2, coordinateSystem: "view", left: "12%", top: "12%", right: "12%", bottom: "12%", layout: "orthogonal", roam: !1, nodeScaleRatio: .4, center: null, zoom: 1, orient: "LR", symbol: "emptyCircle", symbolSize: 7, expandAndCollapse: !0, initialTreeDepth: 2, lineStyle: { color: "#ccc", width: 1.5, curveness: .5 }, itemStyle: { color: "lightsteelblue", borderColor: "#c23531", borderWidth: 1.5 }, label: { show: !0, color: "#555" }, leaves: { label: { show: !0 } }, animationEasing: "linear", animationDuration: 700, animationDurationUpdate: 1e3 }
    });
    var wL = re;
    c(wf, hw), bf.prototype = {
        constructor: bf,
        type: "view",
        dimensions: ["x", "y"],
        setBoundingRect: function(t, e, n, i) { return this._rect = new bn(t, e, n, i), this._rect },
        getBoundingRect: function() { return this._rect },
        setViewRect: function(t, e, n, i) { this.transformTo(t, e, n, i), this._viewRect = new bn(t, e, n, i) },
        transformTo: function(t, e, n, i) {
            var a = this.getBoundingRect(),
                r = this._rawTransformable;
            r.transform = a.calculateTransform(new bn(t, e, n, i)), r.decomposeTransform(), this._updateTransform()
        },
        setCenter: function(t) { t && (this._center = t, this._updateCenterAndZoom()) },
        setZoom: function(t) {
            t = t || 1;
            var e = this.zoomLimit;
            e && (null != e.max && (t = Math.min(e.max, t)), null != e.min && (t = Math.max(e.min, t))), this._zoom = t, this._updateCenterAndZoom()
        },
        getDefaultCenter: function() {
            var t = this.getBoundingRect(),
                e = t.x + t.width / 2,
                n = t.y + t.height / 2;
            return [e, n]
        },
        getCenter: function() { return this._center || this.getDefaultCenter() },
        getZoom: function() { return this._zoom || 1 },
        getRoamTransform: function() { return this._roamTransformable.getLocalTransform() },
        _updateCenterAndZoom: function() {
            var t = this._rawTransformable.getLocalTransform(),
                e = this._roamTransformable,
                n = this.getDefaultCenter(),
                i = this.getCenter(),
                a = this.getZoom();
            i = re([], i, t), n = re([], n, t), e.origin = i, e.position = [n[0] - i[0], n[1] - i[1]], e.scale = [a, a], this._updateTransform()
        },
        _updateTransform: function() {
            var t = this._roamTransformable,
                e = this._rawTransformable;
            e.parent = t, t.updateTransform(), e.updateTransform(), Le(this.transform || (this.transform = []), e.transform || Ae()), this._rawTransform = e.getLocalTransform(), this.invTransform = this.invTransform || [], Ee(this.invTransform, this.transform), this.decomposeTransform()
        },
        getViewRect: function() { return this._viewRect },
        getViewRectAfterRoam: function() { var t = this.getBoundingRect().clone(); return t.applyTransform(this.transform), t },
        dataToPoint: function(t, e, n) { var i = e ? this._rawTransform : this.transform; return n = n || [], i ? wL(n, t, i) : W(n, t) },
        pointToData: function(t) { var e = this.invTransform; return e ? wL([], t, e) : [t[0], t[1]] },
        convertToPixel: x(Sf, "dataToPoint"),
        convertFromPixel: x(Sf, "pointToData"),
        containPoint: function(t) { return this.getViewRectAfterRoam().contain(t[0], t[1]) }
    }, c(bf, hw);
    var bL = "\x00_ec_interaction_mutex";
    fu({ type: "takeGlobalCursor", event: "globalCursorTaken", update: "update" }, function() {}), c(Lf, Z_);
    var SL = { axisPointer: 1, tooltip: 1, brush: 1 };
    Su({
        type: "tree",
        init: function(t, e) { this._oldTree, this._mainGroup = new Vw, this._controller = new Lf(e.getZr()), this._controllerHost = { target: this.group }, this.group.add(this._mainGroup) },
        render: function(t, e, n) {
            var i = t.getData(),
                a = t.layoutInfo,
                r = this._mainGroup,
                o = t.get("layout");
            "radial" === o ? r.attr("position", [a.x + a.width / 2, a.y + a.height / 2]) : r.attr("position", [a.x, a.y]), this._updateViewCoordSys(t, a, o), this._updateController(t, e, n);
            var s = this._data,
                l = { expandAndCollapse: t.get("expandAndCollapse"), layout: o, orient: t.getOrient(), curvature: t.get("lineStyle.curveness"), symbolRotate: t.get("symbolRotate"), symbolOffset: t.get("symbolOffset"), hoverAnimation: t.get("hoverAnimation"), useNameLabel: !0, fadeIn: !0 };
            i.diff(s).add(function(e) { Gf(i, e) && Wf(i, e, null, r, t, l) }).update(function(e, n) { var a = s.getItemGraphicEl(n); return Gf(i, e) ? void Wf(i, e, a, r, t, l) : void(a && Hf(s, n, a, r, t, l)) }).remove(function(e) {
                var n = s.getItemGraphicEl(e);
                n && Hf(s, e, n, r, t, l)
            }).execute(), this._nodeScaleRatio = t.get("nodeScaleRatio"), this._updateNodeAndLinkScale(t), l.expandAndCollapse === !0 && i.eachItemGraphicEl(function(e, i) { e.off("click").on("click", function() { n.dispatchAction({ type: "treeExpandAndCollapse", seriesId: t.id, dataIndex: i }) }) }), this._data = i
        },
        _updateViewCoordSys: function(t) {
            var e = t.getData(),
                n = [];
            e.each(function(t) { var i = e.getItemLayout(t);!i || isNaN(i.x) || isNaN(i.y) || n.push([+i.x, +i.y]) });
            var i = [],
                a = [];
            Sa(n, i, a);
            var r = this._min,
                o = this._max;
            a[0] - i[0] === 0 && (i[0] = r ? r[0] : i[0] - 1, a[0] = o ? o[0] : a[0] + 1), a[1] - i[1] === 0 && (i[1] = r ? r[1] : i[1] - 1, a[1] = o ? o[1] : a[1] + 1);
            var s = t.coordinateSystem = new bf;
            s.zoomLimit = t.get("scaleLimit"), s.setBoundingRect(i[0], i[1], a[0] - i[0], a[1] - i[1]), s.setCenter(t.get("center")), s.setZoom(t.get("zoom")), this.group.attr({ position: s.position, scale: s.scale }), this._viewCoordSys = s, this._min = i, this._max = a
        },
        _updateController: function(t, e, n) {
            var i = this._controller,
                a = this._controllerHost,
                r = this.group;
            i.setPointerChecker(function(e, i, a) { var o = r.getBoundingRect(); return o.applyTransform(r.transform), o.contain(i, a) && !Vf(e, n, t) }), i.enable(t.get("roam")), a.zoomLimit = t.get("scaleLimit"), a.zoom = t.coordinateSystem.getZoom(), i.off("pan").off("zoom").on("pan", function(e) { If(a, e.dx, e.dy), n.dispatchAction({ seriesId: t.id, type: "treeRoam", dx: e.dx, dy: e.dy }) }, this).on("zoom", function(e) { Mf(a, e.scale, e.originX, e.originY), n.dispatchAction({ seriesId: t.id, type: "treeRoam", zoom: e.scale, originX: e.originX, originY: e.originY }), this._updateNodeAndLinkScale(t) }, this)
        },
        _updateNodeAndLinkScale: function(t) {
            var e = t.getData(),
                n = this._getNodeGlobalScale(t),
                i = [n, n];
            e.eachItemGraphicEl(function(t) { t.attr("scale", i) })
        },
        _getNodeGlobalScale: function(t) {
            var e = t.coordinateSystem;
            if ("view" !== e.type) return 1;
            var n = this._nodeScaleRatio,
                i = e.scale,
                a = i && i[0] || 1,
                r = e.getZoom(),
                o = (r - 1) * n + 1;
            return o / a
        },
        dispose: function() { this._controller && this._controller.dispose(), this._controllerHost = {} },
        remove: function() { this._mainGroup.removeAll(), this._data = null }
    }), fu({ type: "treeExpandAndCollapse", event: "treeExpandAndCollapse", update: "update" }, function(t, e) {
        e.eachComponent({ mainType: "series", subType: "tree", query: t }, function(e) {
            var n = t.dataIndex,
                i = e.getData().tree,
                a = i.getNodeByDataIndex(n);
            a.isExpand = !a.isExpand
        })
    }), fu({ type: "treeRoam", event: "treeRoam", update: "none" }, function(t, e) {
        e.eachComponent({ mainType: "series", subType: "tree", query: t }, function(e) {
            var n = e.coordinateSystem,
                i = Yf(n, t);
            e.setCenter && e.setCenter(i.center), e.setZoom && e.setZoom(i.zoom)
        })
    });
    var IL = function(t, e) { t.eachSeriesByType("tree", function(t) { Zf(t, e) }) };
    vu(AC("tree", "circle")), mu(IL), ZM.extend({
        type: "series.treemap",
        layoutMode: "box",
        dependencies: ["grid", "polar"],
        preventUsingHoverLayer: !0,
        _viewRoot: null,
        defaultOption: { progressive: 0, left: "center", top: "middle", right: null, bottom: null, width: "80%", height: "80%", sort: !0, clipWindow: "origin", squareRatio: .5 * (1 + Math.sqrt(5)), leafDepth: null, drillDownIcon: "▶", zoomToNodeRatio: .1024, roam: !0, nodeClick: "zoomToNode", animation: !0, animationDurationUpdate: 900, animationEasing: "quinticInOut", breadcrumb: { show: !0, height: 22, left: "center", top: "bottom", emptyItemWidth: 25, itemStyle: { color: "rgba(0,0,0,0.7)", borderColor: "rgba(255,255,255,0.7)", borderWidth: 1, shadowColor: "rgba(150,150,150,1)", shadowBlur: 3, shadowOffsetX: 0, shadowOffsetY: 0, textStyle: { color: "#fff" } }, emphasis: { textStyle: {} } }, label: { show: !0, distance: 0, padding: 5, position: "inside", color: "#fff", ellipsis: !0 }, upperLabel: { show: !1, position: [0, "50%"], height: 20, color: "#fff", ellipsis: !0, verticalAlign: "middle" }, itemStyle: { color: null, colorAlpha: null, colorSaturation: null, borderWidth: 0, gapWidth: 0, borderColor: "#fff", borderColorSaturation: null }, emphasis: { upperLabel: { show: !0, position: [0, "50%"], color: "#fff", ellipsis: !0, verticalAlign: "middle" } }, visualDimension: 0, visualMin: null, visualMax: null, color: [], colorAlpha: null, colorSaturation: null, colorMappingBy: "index", visibleMin: 10, childrenVisibleMin: null, levels: [] },
        getInitialData: function(t, e) {
            var n = { name: t.name, children: t.data };
            Qf(n);
            var i = t.levels || [];
            i = t.levels = tg(i, e);
            var a = {};
            return a.levels = i, of.createTree(n, this, a).data
        },
        optionUpdated: function() { this.resetViewRoot() },
        formatTooltip: function(t) {
            var e = this.getData(),
                n = this.getRawValue(t),
                i = Mo(_(n) ? n[0] : n),
                a = e.getName(t);
            return To(a + ": " + i)
        },
        getDataParams: function(t) {
            var e = ZM.prototype.getDataParams.apply(this, arguments),
                n = this.getData().tree.getNodeByDataIndex(t);
            return e.treePathInfo = Jf(n, this), e
        },
        setLayoutInfo: function(t) { this.layoutInfo = this.layoutInfo || {}, o(this.layoutInfo, t) },
        mapIdToIndex: function(t) {
            var e = this._idIndexMap;
            e || (e = this._idIndexMap = B(), this._idIndexMapCount = 0);
            var n = e.get(t);
            return null == n && e.set(t, n = this._idIndexMapCount++), n
        },
        getViewRoot: function() { return this._viewRoot },
        resetViewRoot: function(t) {
            t ? this._viewRoot = t : t = this._viewRoot;
            var e = this.getRawData().tree.root;
            (!t || t !== e && !e.contains(t)) && (this._viewRoot = e)
        }
    });
    var ML = 8,
        DL = 8,
        TL = 5;
    eg.prototype = {
        constructor: eg,
        render: function(t, e, n, i) {
            var a = t.getModel("breadcrumb"),
                r = this.group;
            if (r.removeAll(), a.get("show") && n) {
                var o = a.getModel("itemStyle"),
                    s = o.getModel("textStyle"),
                    l = { pos: { left: a.get("left"), right: a.get("right"), top: a.get("top"), bottom: a.get("bottom") }, box: { width: e.getWidth(), height: e.getHeight() }, emptyItemWidth: a.get("emptyItemWidth"), totalWidth: 0, renderList: [] };
                this._prepare(n, l, s), this._renderContent(t, l, o, s, i), Vo(r, l.pos, l.box)
            }
        },
        _prepare: function(t, e, n) {
            for (var i = t; i; i = i.parentNode) {
                var a = i.getModel().get("name"),
                    r = n.getTextRect(a),
                    o = Math.max(r.width + 2 * ML, e.emptyItemWidth);
                e.totalWidth += o + DL, e.renderList.push({ node: i, text: a, width: o })
            }
        },
        _renderContent: function(t, e, n, i, a) {
            for (var r = 0, o = e.emptyItemWidth, l = t.get("breadcrumb.height"), u = Ro(e.pos, e.box), h = e.totalWidth, c = e.renderList, d = c.length - 1; d >= 0; d--) {
                var f = c[d],
                    g = f.node,
                    p = f.width,
                    m = f.text;
                h > u.width && (h -= p - o, p = o, m = null);
                var v = new sI({ shape: { points: ng(r, 0, p, l, d === c.length - 1, 0 === d) }, style: s(n.getItemStyle(), { lineJoin: "bevel", text: m, textFill: i.getTextColor(), textFont: i.getFont() }), z: 10, onclick: x(a, g) });
                this.group.add(v), ig(v, t, g), r += p + DL
            }
        },
        remove: function() { this.group.removeAll() }
    };
    var AL = y,
        CL = Vw,
        LL = cI,
        PL = f,
        kL = 3,
        NL = ["label"],
        OL = ["emphasis", "label"],
        EL = ["upperLabel"],
        zL = ["emphasis", "upperLabel"],
        RL = 10,
        BL = 1,
        VL = 2,
        GL = Ub([
            ["fill", "color"],
            ["stroke", "strokeColor"],
            ["lineWidth", "strokeWidth"],
            ["shadowBlur"],
            ["shadowOffsetX"],
            ["shadowOffsetY"],
            ["shadowColor"]
        ]),
        FL = function(t) { var e = GL(t); return e.stroke = e.fill = e.lineWidth = null, e };
    Su({
        type: "treemap",
        init: function() { this._containerGroup, this._storage = rg(), this._oldTree, this._breadcrumb, this._controller, this._state = "ready" },
        render: function(t, e, n, i) {
            var a = e.findComponents({ mainType: "series", subType: "treemap", query: i });
            if (!(u(a, t) < 0)) {
                this.seriesModel = t, this.api = n, this.ecModel = e;
                var r = ["treemapZoomToNode", "treemapRootToNode"],
                    o = qf(i, r, t),
                    s = i && i.type,
                    l = t.layoutInfo,
                    h = !this._oldTree,
                    c = this._storage,
                    d = "treemapRootToNode" === s && o && c ? { rootNodeGroup: c.nodeGroup[o.node.getRawIndex()], direction: i.direction } : null,
                    f = this._giveContainerGroup(l),
                    g = this._doRender(f, t, d);
                h || s && "treemapZoomToNode" !== s && "treemapRootToNode" !== s ? g.renderFinally() : this._doAnimation(f, g, t, d), this._resetController(n), this._renderBreadcrumb(t, n, o)
            }
        },
        _giveContainerGroup: function(t) { var e = this._containerGroup; return e || (e = this._containerGroup = new CL, this._initEvents(e), this.group.add(e)), e.attr("position", [t.x, t.y]), e },
        _doRender: function(t, e, n) {
            function i(t, e, n, a, r) {
                function o(t) { return t.getId() }

                function s(o, s) {
                    var l = null != o ? t[o] : null,
                        u = null != s ? e[s] : null,
                        h = d(l, u, n, r);
                    h && i(l && l.viewChildren || [], u && u.viewChildren || [], h, a, r + 1)
                }
                a ? (e = t, PL(t, function(t, e) {!t.isRemoved() && s(e, e) })) : new Au(e, t, o, o).add(s).update(s).remove(x(s, null)).execute()
            }

            function a(t) {
                var e = rg();
                return t && PL(t, function(t, n) {
                    var i = e[n];
                    PL(t, function(t) { t && (i.push(t), t.__tmWillDelete = 1) })
                }), e
            }

            function r() { PL(f, function(t) { PL(t, function(t) { t.parent && t.parent.remove(t) }) }), PL(c, function(t) { t.invisible = !0, t.dirty() }) }
            var o = e.getData().tree,
                s = this._oldTree,
                l = rg(),
                u = rg(),
                h = this._storage,
                c = [],
                d = x(og, e, u, h, n, l, c);
            i(o.root ? [o.root] : [], s && s.root ? [s.root] : [], t, o === s || !s, 0);
            var f = a(h);
            return this._oldTree = o, this._storage = u, { lastsForAnimation: l, willDeleteEls: f, renderFinally: r }
        },
        _doAnimation: function(t, e, n, i) {
            if (n.get("animation")) {
                var a = n.get("animationDurationUpdate"),
                    r = n.get("animationEasing"),
                    s = ag();
                PL(e.willDeleteEls, function(t, e) {
                    PL(t, function(t) {
                        if (!t.invisible) {
                            var n, o = t.parent;
                            if (i && "drillDown" === i.direction) n = o === i.rootNodeGroup ? { shape: { x: 0, y: 0, width: o.__tmNodeWidth, height: o.__tmNodeHeight }, style: { opacity: 0 } } : { style: { opacity: 0 } };
                            else {
                                var l = 0,
                                    u = 0;
                                o.__tmWillDelete || (l = o.__tmNodeWidth / 2, u = o.__tmNodeHeight / 2), n = "nodeGroup" === e ? { position: [l, u], style: { opacity: 0 } } : { shape: { x: l, y: u, width: 0, height: 0 }, style: { opacity: 0 } }
                            }
                            n && s.add(t, n, a, r)
                        }
                    })
                }), PL(this._storage, function(t, n) {
                    PL(t, function(t, i) {
                        var l = e.lastsForAnimation[n][i],
                            u = {};
                        l && ("nodeGroup" === n ? l.old && (u.position = t.position.slice(), t.attr("position", l.old)) : (l.old && (u.shape = o({}, t.shape), t.setShape(l.old)), l.fadein ? (t.setStyle("opacity", 0), u.style = { opacity: 1 }) : 1 !== t.style.opacity && (u.style = { opacity: 1 })), s.add(t, u, a, r))
                    })
                }, this), this._state = "animating", s.done(AL(function() { this._state = "ready", e.renderFinally() }, this)).start()
            }
        },
        _resetController: function(t) {
            var e = this._controller;
            e || (e = this._controller = new Lf(t.getZr()), e.enable(this.seriesModel.get("roam")), e.on("pan", AL(this._onPan, this)), e.on("zoom", AL(this._onZoom, this)));
            var n = new bn(0, 0, t.getWidth(), t.getHeight());
            e.setPointerChecker(function(t, e, i) { return n.contain(e, i) })
        },
        _clearController: function() {
            var t = this._controller;
            t && (t.dispose(), t = null)
        },
        _onPan: function(t) {
            if ("animating" !== this._state && (Math.abs(t.dx) > kL || Math.abs(t.dy) > kL)) {
                var e = this.seriesModel.getData().tree.root;
                if (!e) return;
                var n = e.getLayout();
                if (!n) return;
                this.api.dispatchAction({ type: "treemapMove", from: this.uid, seriesId: this.seriesModel.id, rootRect: { x: n.x + t.dx, y: n.y + t.dy, width: n.width, height: n.height } })
            }
        },
        _onZoom: function(t) {
            var e = t.originX,
                n = t.originY;
            if ("animating" !== this._state) {
                var i = this.seriesModel.getData().tree.root;
                if (!i) return;
                var a = i.getLayout();
                if (!a) return;
                var r = new bn(a.x, a.y, a.width, a.height),
                    o = this.seriesModel.layoutInfo;
                e -= o.x, n -= o.y;
                var s = Ae();
                ke(s, s, [-e, -n]), Oe(s, s, [t.scale, t.scale]), ke(s, s, [e, n]), r.applyTransform(s), this.api.dispatchAction({ type: "treemapRender", from: this.uid, seriesId: this.seriesModel.id, rootRect: { x: r.x, y: r.y, width: r.width, height: r.height } })
            }
        },
        _initEvents: function(t) {
            t.on("click", function(t) {
                if ("ready" === this._state) {
                    var e = this.seriesModel.get("nodeClick", !0);
                    if (e) {
                        var n = this.findTarget(t.offsetX, t.offsetY);
                        if (n) {
                            var i = n.node;
                            if (i.getLayout().isLeafRoot) this._rootToNode(n);
                            else if ("zoomToNode" === e) this._zoomToNode(n);
                            else if ("link" === e) {
                                var a = i.hostTree.data.getItemModel(i.dataIndex),
                                    r = a.get("link", !0),
                                    o = a.get("target", !0) || "blank";
                                r && window.open(r, o)
                            }
                        }
                    }
                }
            }, this)
        },
        _renderBreadcrumb: function(t, e, n) {
            function i(e) { "animating" !== this._state && ($f(t.getViewRoot(), e) ? this._rootToNode({ node: e }) : this._zoomToNode({ node: e })) }
            n || (n = null != t.get("leafDepth", !0) ? { node: t.getViewRoot() } : this.findTarget(e.getWidth() / 2, e.getHeight() / 2), n || (n = { node: t.getData().tree.root })), (this._breadcrumb || (this._breadcrumb = new eg(this.group))).render(t, e, n.node, AL(i, this))
        },
        remove: function() { this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = rg(), this._state = "ready", this._breadcrumb && this._breadcrumb.remove() },
        dispose: function() { this._clearController() },
        _zoomToNode: function(t) { this.api.dispatchAction({ type: "treemapZoomToNode", from: this.uid, seriesId: this.seriesModel.id, targetNode: t.node }) },
        _rootToNode: function(t) { this.api.dispatchAction({ type: "treemapRootToNode", from: this.uid, seriesId: this.seriesModel.id, targetNode: t.node }) },
        findTarget: function(t, e) {
            var n, i = this.seriesModel.getViewRoot();
            return i.eachNode({ attr: "viewChildren", order: "preorder" }, function(i) {
                var a = this._storage.background[i.getRawIndex()];
                if (a) {
                    var r = a.transformCoordToLocal(t, e),
                        o = a.shape;
                    if (!(o.x <= r[0] && r[0] <= o.x + o.width && o.y <= r[1] && r[1] <= o.y + o.height)) return !1;
                    n = { node: i, offsetX: r[0], offsetY: r[1] }
                }
            }, this), n
        }
    });
    for (var WL = function() {}, HL = ["treemapZoomToNode", "treemapRender", "treemapMove"], XL = 0; XL < HL.length; XL++) fu({ type: HL[XL], update: "updateView" }, WL);
    fu({ type: "treemapRootToNode", update: "updateView" }, function(t, e) {
        function n(e) {
            var n = ["treemapZoomToNode", "treemapRootToNode"],
                i = qf(t, n, e);
            if (i) {
                var a = e.getViewRoot();
                a && (t.direction = $f(a, i.node) ? "rollUp" : "drillDown"), e.resetViewRoot(i.node)
            }
        }
        e.eachComponent({ mainType: "series", subType: "treemap", query: t }, n)
    });
    var YL = f,
        UL = S,
        jL = -1,
        ZL = function(t) {
            var e = t.mappingMethod,
                n = t.type,
                a = this.option = i(t);
            this.type = n, this.mappingMethod = e, this._normalizeData = KL[e];
            var r = qL[n];
            this.applyVisual = r.applyVisual, this.getColorMapper = r.getColorMapper, this._doMap = r._doMap[e], "piecewise" === e ? (hg(a), lg(a)) : "category" === e ? a.categories ? ug(a) : hg(a, !0) : (N("linear" !== e || a.dataExtent), hg(a))
        };
    ZL.prototype = { constructor: ZL, mapValueToVisual: function(t) { var e = this._normalizeData(t); return this._doMap(e, t) }, getNormalizer: function() { return y(this._normalizeData, this) } };
    var qL = ZL.visualHandlers = {
            color: { applyVisual: fg("color"), getColorMapper: function() { var t = this.option; return y("category" === t.mappingMethod ? function(t, e) { return !e && (t = this._normalizeData(t)), gg.call(this, t) } : function(e, n, i) { var a = !!i; return !n && (e = this._normalizeData(e)), i = tn(e, t.parsedVisual, i), a ? i : rn(i, "rgba") }, this) }, _doMap: { linear: function(t) { return rn(tn(t, this.option.parsedVisual), "rgba") }, category: gg, piecewise: function(t, e) { var n = vg.call(this, e); return null == n && (n = rn(tn(t, this.option.parsedVisual), "rgba")), n }, fixed: pg } },
            colorHue: cg(function(t, e) { return nn(t, e) }),
            colorSaturation: cg(function(t, e) { return nn(t, null, e) }),
            colorLightness: cg(function(t, e) { return nn(t, null, null, e) }),
            colorAlpha: cg(function(t, e) { return an(t, e) }),
            opacity: { applyVisual: fg("opacity"), _doMap: mg([0, 1]) },
            liftZ: { applyVisual: fg("liftZ"), _doMap: { linear: pg, category: pg, piecewise: pg, fixed: pg } },
            symbol: {
                applyVisual: function(t, e, n) {
                    var i = this.mapValueToVisual(t);
                    if (b(i)) n("symbol", i);
                    else if (UL(i))
                        for (var a in i) i.hasOwnProperty(a) && n(a, i[a])
                },
                _doMap: { linear: dg, category: gg, piecewise: function(t, e) { var n = vg.call(this, e); return null == n && (n = dg.call(this, t)), n }, fixed: pg }
            },
            symbolSize: { applyVisual: fg("symbolSize"), _doMap: mg([0, 1]) }
        },
        KL = {
            linear: function(t) { return so(t, this.option.dataExtent, [0, 1], !0) },
            piecewise: function(t) {
                var e = this.option.pieceList,
                    n = ZL.findPieceIndex(t, e, !0);
                return null != n ? so(n, [0, e.length - 1], [0, 1], !0) : void 0
            },
            category: function(t) { var e = this.option.categories ? this.option.categoryMap[t] : t; return null == e ? jL : e },
            fixed: G
        };
    ZL.listVisualTypes = function() { var t = []; return f(qL, function(e, n) { t.push(n) }), t }, ZL.addVisualHandler = function(t, e) { qL[t] = e }, ZL.isValidType = function(t) { return qL.hasOwnProperty(t) }, ZL.eachVisual = function(t, e, n) { S(t) ? f(t, e, n) : e.call(n, t) }, ZL.mapVisual = function(t, e, n) {
        var i, a = _(t) ? [] : S(t) ? {} : (i = !0, null);
        return ZL.eachVisual(t, function(t, r) {
            var o = e.call(n, t, r);
            i ? a = o : a[r] = o
        }), a
    }, ZL.retrieveVisuals = function(t) { var e, n = {}; return t && YL(qL, function(i, a) { t.hasOwnProperty(a) && (n[a] = t[a], e = !0) }), e ? n : null }, ZL.prepareVisualTypes = function(t) {
        if (UL(t)) {
            var e = [];
            YL(t, function(t, n) { e.push(n) }), t = e
        } else {
            if (!_(t)) return [];
            t = t.slice()
        }
        return t.sort(function(t, e) { return "color" === e && "color" !== t && 0 === t.indexOf("color") ? 1 : -1 }), t
    }, ZL.dependsOn = function(t, e) { return "color" === e ? !(!t || 0 !== t.indexOf(e)) : t === e }, ZL.findPieceIndex = function(t, e, n) {
        function i(e, n) {
            var i = Math.abs(e - t);
            r > i && (r = i, a = n)
        }
        for (var a, r = 1 / 0, o = 0, s = e.length; s > o; o++) {
            var l = e[o].value;
            if (null != l) {
                if (l === t || "string" == typeof l && l === t + "") return o;
                n && i(l, o)
            }
        }
        for (var o = 0, s = e.length; s > o; o++) {
            var u = e[o],
                h = u.interval,
                c = u.close;
            if (h) {
                if (h[0] === -1 / 0) { if (xg(c[1], t, h[1])) return o } else if (1 / 0 === h[1]) { if (xg(c[0], h[0], t)) return o } else if (xg(c[0], h[0], t) && xg(c[1], t, h[1])) return o;
                n && i(h[0], o), n && i(h[1], o)
            }
        }
        return n ? 1 / 0 === t ? e.length - 1 : t === -1 / 0 ? 0 : a : void 0
    };
    var $L = _,
        JL = "itemStyle",
        QL = {
            seriesType: "treemap",
            reset: function(t) {
                var e = t.getData().tree,
                    n = e.root,
                    i = t.getModel(JL);
                if (!n.isRemoved()) {
                    var a = g(e.levelModels, function(t) { return t ? t.get(JL) : null });
                    _g(n, {}, a, i, t.getViewRoot().getAncestors(), t)
                }
            }
        },
        tP = Math.max,
        eP = Math.min,
        nP = A,
        iP = f,
        aP = ["itemStyle", "borderWidth"],
        rP = ["itemStyle", "gapWidth"],
        oP = ["upperLabel", "show"],
        sP = ["upperLabel", "height"],
        lP = {
            seriesType: "treemap",
            reset: function(t, e, n, i) {
                var a = n.getWidth(),
                    r = n.getHeight(),
                    s = t.option,
                    l = Bo(t.getBoxLayoutParams(), { width: n.getWidth(), height: n.getHeight() }),
                    u = s.size || [],
                    h = lo(nP(l.width, u[0]), a),
                    c = lo(nP(l.height, u[1]), r),
                    d = i && i.type,
                    f = ["treemapZoomToNode", "treemapRootToNode"],
                    g = qf(i, f, t),
                    p = "treemapRender" === d || "treemapMove" === d ? i.rootRect : null,
                    m = t.getViewRoot(),
                    v = Kf(m);
                if ("treemapMove" !== d) {
                    var y = "treemapZoomToNode" === d ? Eg(t, g, m, h, c) : p ? [p.width, p.height] : [h, c],
                        x = s.sort;
                    x && "asc" !== x && "desc" !== x && (x = "desc");
                    var _ = { squareRatio: s.squareRatio, sort: x, leafDepth: s.leafDepth };
                    m.hostTree.clearLayouts();
                    var w = { x: 0, y: 0, width: y[0], height: y[1], area: y[0] * y[1] };
                    m.setLayout(w), Ag(m, _, !1, 0);
                    var w = m.getLayout();
                    iP(v, function(t, e) {
                        var n = (v[e + 1] || m).getValue();
                        t.setLayout(o({ dataExtent: [n, n], borderWidth: 0, upperHeight: 0 }, w))
                    })
                }
                var b = t.getData().tree.root;
                b.setLayout(zg(l, p, g), !0), t.setLayoutInfo(l), Rg(b, new bn(-l.x, -l.y, a, r), v, m, 0)
            }
        };
    vu(QL), mu(lP), ZM.extend({
        type: "series.sunburst",
        _viewRoot: null,
        getInitialData: function(t) {
            var e = { name: t.name, children: t.data };
            Vg(e);
            var n = t.levels || [],
                i = {};
            return i.levels = n, of.createTree(e, this, i).data
        },
        optionUpdated: function() { this.resetViewRoot() },
        getDataParams: function(t) {
            var e = ZM.prototype.getDataParams.apply(this, arguments),
                n = this.getData().tree.getNodeByDataIndex(t);
            return e.treePathInfo = Jf(n, this), e
        },
        defaultOption: { zlevel: 0, z: 2, center: ["50%", "50%"], radius: [0, "75%"], clockwise: !0, startAngle: 90, minAngle: 0, percentPrecision: 2, stillShowZeroSum: !0, highlightPolicy: "descendant", nodeClick: "rootToNode", renderLabelForZeroData: !1, label: { rotate: "radial", show: !0, opacity: 1, align: "center", position: "inside", distance: 5, silent: !0, emphasis: {} }, itemStyle: { borderWidth: 1, borderColor: "white", borderType: "solid", shadowBlur: 0, shadowColor: "rgba(0, 0, 0, 0.2)", shadowOffsetX: 0, shadowOffsetY: 0, opacity: 1, emphasis: {}, highlight: { opacity: 1 }, downplay: { opacity: .9 } }, animationType: "expansion", animationDuration: 1e3, animationDurationUpdate: 500, animationEasing: "cubicOut", data: [], levels: [], sort: "desc" },
        getViewRoot: function() { return this._viewRoot },
        resetViewRoot: function(t) {
            t ? this._viewRoot = t : t = this._viewRoot;
            var e = this.getRawData().tree.root;
            (!t || t !== e && !e.contains(t)) && (this._viewRoot = e)
        }
    });
    var uP = { NONE: "none", DESCENDANT: "descendant", ANCESTOR: "ancestor", SELF: "self" },
        hP = 2,
        cP = 4,
        dP = Gg.prototype;
    dP.updateData = function(t, e, n, i, r) {
        this.node = e, e.piece = this, i = i || this._seriesModel, r = r || this._ecModel;
        var l = this.childAt(0);
        l.dataIndex = e.dataIndex;
        var u = e.getModel(),
            h = e.getLayout(),
            c = o({}, h);
        c.label = null;
        var d = Fg(e, i, r);
        Xg(e, i, d);
        var f, g = u.getModel("itemStyle").getItemStyle();
        if ("normal" === n) f = g;
        else {
            var p = u.getModel(n + ".itemStyle").getItemStyle();
            f = a(p, g)
        }
        f = s({ lineJoin: "bevel", fill: f.fill || d }, f), t ? (l.setShape(c), l.shape.r = h.r0, Fr(l, { shape: { r: h.r } }, i, e.dataIndex), l.useStyle(f)) : "object" == typeof f.fill && f.fill.type || "object" == typeof l.style.fill && l.style.fill.type ? (Fr(l, { shape: c }, i), l.useStyle(f)) : Fr(l, { shape: c, style: f }, i), this._updateLabel(i, d, n);
        var m = u.getShallow("cursor");
        if (m && l.attr("cursor", m), t) {
            var v = i.getShallow("highlightPolicy");
            this._initEvents(l, e, i, v)
        }
        this._seriesModel = i || this._seriesModel, this._ecModel = r || this._ecModel
    }, dP.onEmphasis = function(t) {
        var e = this;
        this.node.hostTree.root.eachNode(function(n) { n.piece && (e.node === n ? n.piece.updateData(!1, n, "emphasis") : Hg(n, e.node, t) ? n.piece.childAt(0).trigger("highlight") : t !== uP.NONE && n.piece.childAt(0).trigger("downplay")) })
    }, dP.onNormal = function() { this.node.hostTree.root.eachNode(function(t) { t.piece && t.piece.updateData(!1, t, "normal") }) }, dP.onHighlight = function() { this.updateData(!1, this.node, "highlight") }, dP.onDownplay = function() { this.updateData(!1, this.node, "downplay") }, dP._updateLabel = function(t, e, n) {
        function i(t) { var e = o.get(t); return null == e ? r.get(t) : e }
        var a = this.node.getModel(),
            r = a.getModel("label"),
            o = "normal" === n || "emphasis" === n ? r : a.getModel(n + ".label"),
            s = a.getModel("emphasis.label"),
            l = A(t.getFormattedLabel(this.node.dataIndex, n, null, null, "label"), this.node.name);
        i("show") === !1 && (l = "");
        var u = this.node.getLayout(),
            h = o.get("minAngle");
        null == h && (h = r.get("minAngle")), h = h / 180 * Math.PI;
        var c = u.endAngle - u.startAngle;
        null != h && Math.abs(c) < h && (l = "");
        var d = this.childAt(1);
        Cr(d.style, d.hoverStyle || {}, r, s, { defaultText: o.getShallow("show") ? l : null, autoColor: e, useInsideStyle: !0 });
        var f, g = (u.startAngle + u.endAngle) / 2,
            p = Math.cos(g),
            m = Math.sin(g),
            v = i("position"),
            y = i("distance") || 0,
            x = i("align");
        "outside" === v ? (f = u.r + y, x = g > Math.PI / 2 ? "right" : "left") : x && "center" !== x ? "left" === x ? (f = u.r0 + y, g > Math.PI / 2 && (x = "right")) : "right" === x && (f = u.r - y, g > Math.PI / 2 && (x = "left")) : (f = (u.r + u.r0) / 2, x = "center"), d.attr("style", { text: l, textAlign: x, textVerticalAlign: i("verticalAlign") || "middle", opacity: i("opacity") });
        var _ = f * p + u.cx,
            w = f * m + u.cy;
        d.attr("position", [_, w]);
        var b = i("rotate"),
            S = 0;
        "radial" === b ? (S = -g, S < -Math.PI / 2 && (S += Math.PI)) : "tangential" === b ? (S = Math.PI / 2 - g, S > Math.PI / 2 ? S -= Math.PI : S < -Math.PI / 2 && (S += Math.PI)) : "number" == typeof b && (S = b * Math.PI / 180), d.attr("rotation", S)
    }, dP._initEvents = function(t, e, n, i) {
        t.off("mouseover").off("mouseout").off("emphasis").off("normal");
        var a = this,
            r = function() { a.onEmphasis(i) },
            o = function() { a.onNormal() },
            s = function() { a.onDownplay() },
            l = function() { a.onHighlight() };
        n.isAnimationEnabled() && t.on("mouseover", r).on("mouseout", o).on("emphasis", r).on("normal", o).on("downplay", s).on("highlight", l)
    }, h(Gg, Vw);
    var fP = "sunburstRootToNode",
        gP = (el.extend({
            type: "sunburst",
            init: function() {},
            render: function(t, e, n, i) {
                function a(t, e) {
                    function n(t) { return t.getId() }

                    function i(n, i) {
                        var a = null == n ? null : t[n],
                            o = null == i ? null : e[i];
                        r(a, o)
                    }(0 !== t.length || 0 !== e.length) && new Au(e, t, n, n).add(i).update(i).remove(x(i, null)).execute()
                }

                function r(n, i) {
                    if (f || !n || n.getValue() || (n = null), n !== h && i !== h)
                        if (i && i.piece) n ? (i.piece.updateData(!1, n, "normal", t, e), u.setItemGraphicEl(n.dataIndex, i.piece)) : o(i);
                        else if (n) {
                        var a = new Gg(n, t, e);
                        d.add(a), u.setItemGraphicEl(n.dataIndex, a)
                    }
                }

                function o(t) { t && t.piece && (d.remove(t.piece), t.piece = null) }

                function s(n, i) {
                    if (i.depth > 0) {
                        l.virtualPiece ? l.virtualPiece.updateData(!1, n, "normal", t, e) : (l.virtualPiece = new Gg(n, t, e), d.add(l.virtualPiece)), i.piece._onclickEvent && i.piece.off("click", i.piece._onclickEvent);
                        var a = function() { l._rootToNode(i.parentNode) };
                        i.piece._onclickEvent = a, l.virtualPiece.on("click", a)
                    } else l.virtualPiece && (d.remove(l.virtualPiece), l.virtualPiece = null)
                }
                var l = this;
                this.seriesModel = t, this.api = n, this.ecModel = e;
                var u = t.getData(),
                    h = u.tree.root,
                    c = t.getViewRoot(),
                    d = this.group,
                    f = t.get("renderLabelForZeroData"),
                    g = [];
                c.eachNode(function(t) { g.push(t) });
                var p = this._oldChildren || [];
                if (a(g, p), s(h, c), i && i.highlight && i.highlight.piece) {
                    var m = t.getShallow("highlightPolicy");
                    i.highlight.piece.onEmphasis(m)
                } else if (i && i.unhighlight) { var v = this.virtualPiece;!v && h.children.length && (v = h.children[0].piece), v && v.onNormal() }
                this._initEvents(), this._oldChildren = g
            },
            dispose: function() {},
            _initEvents: function() {
                var t = this,
                    e = function(e) {
                        var n = !1,
                            i = t.seriesModel.getViewRoot();
                        i.eachNode(function(i) {
                            if (!n && i.piece && i.piece.childAt(0) === e.target) {
                                var a = i.getModel().get("nodeClick");
                                if ("rootToNode" === a) t._rootToNode(i);
                                else if ("link" === a) {
                                    var r = i.getModel(),
                                        o = r.get("link");
                                    if (o) {
                                        var s = r.get("target", !0) || "_blank";
                                        window.open(o, s)
                                    }
                                }
                                n = !0
                            }
                        })
                    };
                this.group._onclickEvent && this.group.off("click", this.group._onclickEvent), this.group.on("click", e), this.group._onclickEvent = e
            },
            _rootToNode: function(t) { t !== this.seriesModel.getViewRoot() && this.api.dispatchAction({ type: fP, from: this.uid, seriesId: this.seriesModel.id, targetNode: t }) },
            containPoint: function(t, e) {
                var n = e.getData(),
                    i = n.getItemLayout(0);
                if (i) {
                    var a = t[0] - i.cx,
                        r = t[1] - i.cy,
                        o = Math.sqrt(a * a + r * r);
                    return o <= i.r && o >= i.r0
                }
            }
        }), "sunburstRootToNode");
    fu({ type: gP, update: "updateView" }, function(t, e) {
        function n(e) {
            var n = qf(t, [gP], e);
            if (n) {
                var i = e.getViewRoot();
                i && (t.direction = $f(i, n.node) ? "rollUp" : "drillDown"), e.resetViewRoot(n.node)
            }
        }
        e.eachComponent({ mainType: "series", subType: "sunburst", query: t }, n)
    });
    var pP = "sunburstHighlight";
    fu({ type: pP, update: "updateView" }, function(t, e) {
        function n(e) {
            var n = qf(t, [pP], e);
            n && (t.highlight = n.node)
        }
        e.eachComponent({ mainType: "series", subType: "sunburst", query: t }, n)
    });
    var mP = "sunburstUnhighlight";
    fu({ type: mP, update: "updateView" }, function(t, e) {
        function n() { t.unhighlight = !0 }
        e.eachComponent({ mainType: "series", subType: "sunburst", query: t }, n)
    });
    var vP = Math.PI / 180,
        yP = function(t, e, n) {
            e.eachSeriesByType(t, function(t) {
                var e = t.get("center"),
                    i = t.get("radius");
                _(i) || (i = [0, i]), _(e) || (e = [e, e]);
                var a = n.getWidth(),
                    r = n.getHeight(),
                    o = Math.min(a, r),
                    s = lo(e[0], a),
                    l = lo(e[1], r),
                    u = lo(i[0], o / 2),
                    h = lo(i[1], o / 2),
                    c = -t.get("startAngle") * vP,
                    d = t.get("minAngle") * vP,
                    g = t.getData().tree.root,
                    p = t.getViewRoot(),
                    m = p.depth,
                    v = t.get("sort");
                null != v && Yg(p, v);
                var y = 0;
                f(p.children, function(t) {!isNaN(t.getValue()) && y++ });
                var x = p.getValue(),
                    w = Math.PI / (x || y) * 2,
                    b = p.depth > 0,
                    S = p.height - (b ? -1 : 1),
                    I = (h - u) / (S || 1),
                    M = t.get("clockwise"),
                    D = t.get("stillShowZeroSum"),
                    T = M ? 1 : -1,
                    A = function(t, e) {
                        if (t) {
                            var n = e;
                            if (t !== g) {
                                var i = t.getValue(),
                                    a = 0 === x && D ? w : i * w;
                                d > a && (a = d), n = e + T * a;
                                var r = t.depth - m - (b ? -1 : 1),
                                    h = u + I * r,
                                    c = u + I * (r + 1),
                                    p = t.getModel();
                                null != p.get("r0") && (h = lo(p.get("r0"), o / 2)), null != p.get("r") && (c = lo(p.get("r"), o / 2)), t.setLayout({ angle: a, startAngle: e, endAngle: n, clockwise: M, cx: s, cy: l, r0: h, r: c })
                            }
                            if (t.children && t.children.length) {
                                var v = 0;
                                f(t.children, function(t) { v += A(t, e + v) })
                            }
                            return n - e
                        }
                    };
                if (b) {
                    var C = u,
                        L = u + I,
                        P = 2 * Math.PI;
                    g.setLayout({ angle: P, startAngle: c, endAngle: c + P, clockwise: M, cx: s, cy: l, r0: C, r: L })
                }
                A(p, c)
            })
        };
    vu(x(BC, "sunburst")), mu(x(yP, "sunburst")), cu(x(XC, "sunburst"));
    for (var xP = [126, 25], _P = [
            [
                [0, 3.5],
                [7, 11.2],
                [15, 11.9],
                [30, 7],
                [42, .7],
                [52, .7],
                [56, 7.7],
                [59, .7],
                [64, .7],
                [64, 0],
                [5, 0],
                [0, 3.5]
            ],
            [
                [13, 16.1],
                [19, 14.7],
                [16, 21.7],
                [11, 23.1],
                [13, 16.1]
            ],
            [
                [12, 32.2],
                [14, 38.5],
                [15, 38.5],
                [13, 32.2],
                [12, 32.2]
            ],
            [
                [16, 47.6],
                [12, 53.2],
                [13, 53.2],
                [18, 47.6],
                [16, 47.6]
            ],
            [
                [6, 64.4],
                [8, 70],
                [9, 70],
                [8, 64.4],
                [6, 64.4]
            ],
            [
                [23, 82.6],
                [29, 79.8],
                [30, 79.8],
                [25, 82.6],
                [23, 82.6]
            ],
            [
                [37, 70.7],
                [43, 62.3],
                [44, 62.3],
                [39, 70.7],
                [37, 70.7]
            ],
            [
                [48, 51.1],
                [51, 45.5],
                [53, 45.5],
                [50, 51.1],
                [48, 51.1]
            ],
            [
                [51, 35],
                [51, 28.7],
                [53, 28.7],
                [53, 35],
                [51, 35]
            ],
            [
                [52, 22.4],
                [55, 17.5],
                [56, 17.5],
                [53, 22.4],
                [52, 22.4]
            ],
            [
                [58, 12.6],
                [62, 7],
                [63, 7],
                [60, 12.6],
                [58, 12.6]
            ],
            [
                [0, 3.5],
                [0, 93.1],
                [64, 93.1],
                [64, 0],
                [63, 0],
                [63, 92.4],
                [1, 92.4],
                [1, 3.5],
                [0, 3.5]
            ]
        ], wP = 0; wP < _P.length; wP++)
        for (var bP = 0; bP < _P[wP].length; bP++) _P[wP][bP][0] /= 10.5, _P[wP][bP][1] /= -14, _P[wP][bP][0] += xP[0], _P[wP][bP][1] += xP[1];
    var SP = function(t, e) { "china" === t && e.push(new Wh("南海诸岛", g(_P, function(t) { return { type: "polygon", exterior: t } }), xP)) },
        IP = { "南海诸岛": [32, 80], "广东": [0, -10], "香港": [10, 5], "澳门": [-10, 10], "天津": [5, 5] },
        MP = function(t, e) {
            if ("china" === t) {
                var n = IP[e.name];
                if (n) {
                    var i = e.center;
                    i[0] += n[0] / 10.5, i[1] += -n[1] / 14
                }
            }
        },
        DP = { Russia: [100, 60], "United States": [-99, 38], "United States of America": [-99, 38] },
        TP = function(t, e) {
            if ("world" === t) {
                var n = DP[e.name];
                if (n) {
                    var i = e.center;
                    i[0] = n[0], i[1] = n[1]
                }
            }
        },
        AP = [
            [
                [123.45165252685547, 25.73527164402261],
                [123.49731445312499, 25.73527164402261],
                [123.49731445312499, 25.750734064600884],
                [123.45165252685547, 25.750734064600884],
                [123.45165252685547, 25.73527164402261]
            ]
        ],
        CP = function(t, e) { "china" === t && "台湾" === e.name && e.geometries.push({ type: "polygon", exterior: AP[0] }) },
        LP = qi(),
        PP = {
            load: function(t, e) {
                var n = LP(e).parsed;
                if (n) return n;
                var i, a = e.specialAreas || {},
                    r = e.geoJSON;
                try { i = r ? bA(r) : [] } catch (o) { throw new Error("Invalid geoJson format\n" + o.message) }
                return SP(t, i), f(i, function(e) {
                    var n = e.name;
                    MP(t, e), TP(t, e), CP(t, e);
                    var i = a[n];
                    i && e.transformTo(i.left, i.top, i.width, i.height)
                }), LP(e).parsed = { regions: i, boundingRect: jg(i) }
            }
        },
        kP = qi(),
        NP = {
            load: function(t, e) { var n = kP(e).originRoot; if (n) return { root: n, boundingRect: kP(e).boundingRect }; var i = Zg(e); return kP(e).originRoot = i.root, kP(e).boundingRect = i.boundingRect, i },
            makeGraphic: function(t, e, n) {
                var i = kP(e),
                    a = i.rootMap || (i.rootMap = B()),
                    r = a.get(n);
                if (r) return r;
                var o = i.originRoot,
                    s = i.boundingRect;
                return i.originRootHostKey ? r = Zg(e, s).root : (i.originRootHostKey = n, r = o), a.set(n, r)
            },
            removeGraphic: function(t, e, n) {
                var i = kP(e),
                    a = i.rootMap;
                a && a.removeKey(n), n === i.originRootHostKey && (i.originRootHostKey = null)
            }
        },
        OP = { geoJSON: PP, svg: NP },
        EP = {
            load: function(t, e) {
                var n, i = [],
                    a = B(),
                    r = B(),
                    o = Kg(t);
                return f(o, function(o) {
                    var s = OP[o.type].load(t, o);
                    f(s.regions, function(t) {
                        var n = t.name;
                        e && e.hasOwnProperty(n) && (t = t.cloneShallow(n = e[n])), i.push(t), a.set(n, t), r.set(n, t.center)
                    });
                    var l = s.boundingRect;
                    l && (n ? n.union(l) : n = l.clone())
                }), { regions: i, regionsMap: a, nameCoordMap: r, boundingRect: n || new bn(0, 0, 0, 0) }
            },
            makeGraphic: qg("makeGraphic"),
            removeGraphic: qg("removeGraphic")
        },
        zP = ZM.extend({
            type: "series.map",
            dependencies: ["geo"],
            layoutMode: "box",
            needsDrawMap: !1,
            seriesGroup: [],
            getInitialData: function() {
                for (var t = NC(this, ["value"]), e = t.mapDimension("value"), n = B(), i = [], a = [], r = 0, o = t.count(); o > r; r++) {
                    var s = t.getName(r);
                    n.set(s, !0), i.push({ name: s, value: t.get(e, r), selected: Ws(t, r, "selected") })
                }
                var l = EP.load(this.getMapType(), this.option.nameMap);
                return f(l.regions, function(t) {
                    var e = t.name;
                    n.get(e) || (i.push({ name: e }), a.push(e))
                }), this.updateSelectedMap(i), t.appendValues([], a), t
            },
            getHostGeoModel: function() { var t = this.option.geoIndex; return null != t ? this.dependentModels.geo[t] : null },
            getMapType: function() { return (this.getHostGeoModel() || this).option.map },
            getRawValue: function(t) { var e = this.getData(); return e.get(e.mapDimension("value"), t) },
            getRegionModel: function(t) { var e = this.getData(); return e.getItemModel(e.indexOfName(t)) },
            formatTooltip: function(t) {
                for (var e = this.getData(), n = Mo(this.getRawValue(t)), i = e.getName(t), a = this.seriesGroup, r = [], o = 0; o < a.length; o++) {
                    var s = a[o].originalData.indexOfName(i),
                        l = e.mapDimension("value");
                    isNaN(a[o].originalData.get(l, s)) || r.push(To(a[o].name))
                }
                return r.join(", ") + "<br />" + To(i + " : " + n)
            },
            getTooltipPosition: function(t) {
                if (null != t) {
                    var e = this.getData().getName(t),
                        n = this.coordinateSystem,
                        i = n.getRegion(e);
                    return i && n.dataToPoint(i.center)
                }
            },
            setZoom: function(t) { this.option.zoom = t },
            setCenter: function(t) { this.option.center = t },
            defaultOption: { zlevel: 0, z: 2, coordinateSystem: "geo", map: "", left: "center", top: "center", aspectScale: .75, showLegendSymbol: !0, dataRangeHoverLink: !0, boundingCoords: null, center: null, zoom: 1, scaleLimit: null, label: { show: !1, color: "#000" }, itemStyle: { borderWidth: .5, borderColor: "#444", areaColor: "#eee" }, emphasis: { label: { show: !0, color: "rgb(100,0,0)" }, itemStyle: { areaColor: "rgba(255,215,0,0.8)" } } }
        });
    c(zP, OC), tp.prototype = {
        constructor: tp,
        draw: function(t, e, n, i) {
            var a = "geo" === t.mainType,
                r = t.getData && t.getData();
            a && e.eachComponent({ mainType: "series", subType: "map" }, function(e) { r || e.getHostGeoModel() !== t || (r = e.getData()) });
            var o = t.coordinateSystem;
            this._updateBackground(o);
            var s = this._regionsGroup,
                l = this.group;
            o._roamTransformable.transform && (l.transform = o._roamTransformable.transform.slice(), l.decomposeTransform());
            var u = o._rawTransformable.scale,
                h = o._rawTransformable.position;
            s.removeAll();
            var c = ["itemStyle"],
                d = ["emphasis", "itemStyle"],
                g = ["label"],
                p = ["emphasis", "label"],
                m = B();
            f(o.regions, function(e) {
                var n = m.get(e.name) || m.set(e.name, new Vw),
                    i = new vI({ segmentIgnoreThreshold: 1, shape: { paths: [] } });
                n.add(i);
                var o, v = t.getRegionModel(e.name) || t,
                    y = v.getModel(c),
                    x = v.getModel(d),
                    _ = $g(y),
                    w = $g(x),
                    b = v.getModel(g),
                    S = v.getModel(p);
                if (r) {
                    o = r.indexOfName(e.name);
                    var I = r.getItemVisual(o, "color", !0);
                    I && (_.fill = I)
                }
                var M = function(t) { return [t[0] * u[0] + h[0], t[1] * u[1] + h[1]] };
                f(e.geometries, function(t) {
                    if ("polygon" === t.type) {
                        for (var e = [], n = 0; n < t.exterior.length; ++n) e.push(M(t.exterior[n]));
                        i.shape.paths.push(new sI({ segmentIgnoreThreshold: 1, shape: { points: e } }));
                        for (var n = 0; n < (t.interiors ? t.interiors.length : 0); ++n) {
                            for (var a = t.interiors[n], e = [], r = 0; r < a.length; ++r) e.push(M(a[r]));
                            i.shape.paths.push(new sI({ segmentIgnoreThreshold: 1, shape: { points: e } }))
                        }
                    }
                }), i.setStyle(_), i.style.strokeNoScale = !0, i.culling = !0;
                var D = b.get("show"),
                    T = S.get("show"),
                    A = r && isNaN(r.get(r.mapDimension("value"), o)),
                    C = r && r.getItemLayout(o);
                if (a || A && (D || T) || C && C.showLabel) {
                    var L, P = a ? e.name : o;
                    (!r || o >= 0) && (L = t);
                    var k = new QS({ position: M(e.center.slice()), scale: [1 / l.scale[0], 1 / l.scale[1]], z2: 10, silent: !0 });
                    Cr(k.style, k.hoverStyle = {}, b, S, { labelFetcher: L, labelDataIndex: P, defaultText: e.name, useInsideStyle: !1 }, { textAlign: "center", textVerticalAlign: "middle" }), n.add(k)
                }
                if (r) r.setItemGraphicEl(o, n);
                else {
                    var v = t.getRegionModel(e.name);
                    i.eventData = { componentType: "geo", componentIndex: t.componentIndex, geoIndex: t.componentIndex, name: e.name, region: v && v.option || {} }
                }
                var N = n.__regions || (n.__regions = []);
                N.push(e), n.highDownSilentOnTouch = !!t.get("selectedMode"), Mr(n, w), s.add(n)
            }), this._updateController(t, e, n), Jg(this, t, s, n, i), Qg(t, s)
        },
        remove: function() { this._regionsGroup.removeAll(), this._backgroundGroup.removeAll(), this._controller.dispose(), this._mapName && EP.removeGraphic(this._mapName, this.uid), this._mapName = null, this._controllerHost = {} },
        _updateBackground: function(t) {
            var e = t.map;
            this._mapName !== e && f(EP.makeGraphic(e, this.uid), function(t) { this._backgroundGroup.add(t) }, this), this._mapName = e
        },
        _updateController: function(t, e, n) {
            function i() { var e = { type: "geoRoam", componentType: l }; return e[l + "Id"] = t.id, e }
            var a = t.coordinateSystem,
                r = this._controller,
                s = this._controllerHost;
            s.zoomLimit = t.get("scaleLimit"), s.zoom = a.getZoom(), r.enable(t.get("roam") || !1);
            var l = t.mainType;
            r.off("pan").on("pan", function(t) { this._mouseDownFlag = !1, If(s, t.dx, t.dy), n.dispatchAction(o(i(), { dx: t.dx, dy: t.dy })) }, this), r.off("zoom").on("zoom", function(t) {
                if (this._mouseDownFlag = !1, Mf(s, t.scale, t.originX, t.originY), n.dispatchAction(o(i(), { zoom: t.scale, originX: t.originX, originY: t.originY })), this._updateGroup) {
                    var e = this.group.scale;
                    this._regionsGroup.traverse(function(t) { "text" === t.type && t.attr("scale", [1 / e[0], 1 / e[1]]) })
                }
            }, this), r.setPointerChecker(function(e, i, r) { return a.getViewRectAfterRoam().contain(i, r) && !Vf(e, n, t) })
        }
    };
    var RP = "__seriesMapHighDown",
        BP = "__seriesMapCallKey";
    Su({
        type: "map",
        render: function(t, e, n, i) {
            if (!i || "mapToggleSelect" !== i.type || i.from !== this.uid) {
                var a = this.group;
                if (a.removeAll(), !t.getHostGeoModel()) {
                    if (i && "geoRoam" === i.type && "series" === i.componentType && i.seriesId === t.id) {
                        var r = this._mapDraw;
                        r && a.add(r.group)
                    } else if (t.needsDrawMap) {
                        var r = this._mapDraw || new tp(n, !0);
                        a.add(r.group), r.draw(t, e, n, this, i), this._mapDraw = r
                    } else this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
                    t.get("showLegendSymbol") && e.getComponent("legend") && this._renderSymbols(t, e, n)
                }
            }
        },
        remove: function() { this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll() },
        dispose: function() { this._mapDraw && this._mapDraw.remove(), this._mapDraw = null },
        _renderSymbols: function(t) {
            var e = t.originalData,
                n = this.group;
            e.each(e.mapDimension("value"), function(i, a) {
                if (!isNaN(i)) {
                    var r = e.getItemLayout(a);
                    if (r && r.point) {
                        var s = r.point,
                            l = r.offset,
                            u = new tI({ style: { fill: t.getData().getVisual("color") }, shape: { cx: s[0] + 9 * l, cy: s[1], r: 3 }, silent: !0, z2: 8 + (l ? 0 : MI + 1) });
                        if (!l) {
                            var h = t.mainSeries.getData(),
                                c = e.getName(a),
                                d = h.indexOfName(c),
                                f = e.getItemModel(a),
                                g = f.getModel("label"),
                                p = f.getModel("emphasis.label"),
                                m = h.getItemGraphicEl(d),
                                v = C(t.getFormattedLabel(d, "normal"), c),
                                y = C(t.getFormattedLabel(d, "emphasis"), v),
                                _ = m[RP],
                                w = Math.random();
                            if (!_) {
                                _ = m[RP] = {};
                                var b = x(ep, !0),
                                    S = x(ep, !1);
                                m.on("mouseover", b).on("mouseout", S).on("emphasis", b).on("normal", S)
                            }
                            m[BP] = w, o(_, { recordVersion: w, circle: u, labelModel: g, hoverLabelModel: p, emphasisText: y, normalText: v }), np(_, !1)
                        }
                        n.add(u)
                    }
                }
            })
        }
    }), fu({ type: "geoRoam", event: "geoRoam", update: "updateTransform" }, function(t, e) {
        var n = t.componentType || "series";
        e.eachComponent({ mainType: n, query: t }, function(e) {
            var i = e.coordinateSystem;
            if ("geo" === i.type) {
                var a = Yf(i, t, e.get("scaleLimit"));
                e.setCenter && e.setCenter(a.center), e.setZoom && e.setZoom(a.zoom), "series" === n && f(e.seriesGroup, function(t) { t.setCenter(a.center), t.setZoom(a.zoom) })
            }
        })
    }), ip.prototype = {
        constructor: ip,
        type: "geo",
        dimensions: ["lng", "lat"],
        containCoord: function(t) {
            for (var e = this.regions, n = 0; n < e.length; n++)
                if (e[n].contain(t)) return !0;
            return !1
        },
        transformTo: function(t, e, n, i) {
            var a = this.getBoundingRect(),
                r = this._invertLongitute;
            a = a.clone(), r && (a.y = -a.y - a.height);
            var o = this._rawTransformable;
            if (o.transform = a.calculateTransform(new bn(t, e, n, i)), o.decomposeTransform(), r) {
                var s = o.scale;
                s[1] = -s[1]
            }
            o.updateTransform(), this._updateTransform()
        },
        getRegion: function(t) { return this._regionsMap.get(t) },
        getRegionByCoord: function(t) {
            for (var e = this.regions, n = 0; n < e.length; n++)
                if (e[n].contain(t)) return e[n]
        },
        addGeoCoord: function(t, e) { this._nameCoordMap.set(t, e) },
        getGeoCoord: function(t) { return this._nameCoordMap.get(t) },
        getBoundingRect: function() { return this._rect },
        dataToPoint: function(t, e, n) { return "string" == typeof t && (t = this.getGeoCoord(t)), t ? bf.prototype.dataToPoint.call(this, t, e, n) : void 0 },
        convertToPixel: x(ap, "dataToPoint"),
        convertFromPixel: x(ap, "pointToData")
    }, c(ip, bf);
    var VP = {
        dimensions: ip.prototype.dimensions,
        create: function(t, e) {
            var n = [];
            t.eachComponent("geo", function(t, i) {
                var a = t.get("map"),
                    r = t.get("aspectScale"),
                    o = !0,
                    s = PD.retrieveMap(a);
                s && s[0] && "svg" === s[0].type ? (null == r && (r = 1), o = !1) : null == r && (r = .75);
                var l = new ip(a + i, a, t.get("nameMap"), o);
                l.aspectScale = r, l.zoomLimit = t.get("scaleLimit"), n.push(l), op(l, t), t.coordinateSystem = l, l.model = t, l.resize = rp, l.resize(t, e)
            }), t.eachSeries(function(t) {
                var e = t.get("coordinateSystem");
                if ("geo" === e) {
                    var i = t.get("geoIndex") || 0;
                    t.coordinateSystem = n[i]
                }
            });
            var i = {};
            return t.eachSeriesByType("map", function(t) {
                if (!t.getHostGeoModel()) {
                    var e = t.getMapType();
                    i[e] = i[e] || [], i[e].push(t)
                }
            }), f(i, function(t, i) {
                var a = g(t, function(t) { return t.get("nameMap") }),
                    o = new ip(i, i, r(a));
                o.zoomLimit = A.apply(null, g(t, function(t) { return t.get("scaleLimit") })), n.push(o), o.resize = rp, o.aspectScale = t[0].get("aspectScale"), o.resize(t[0], e), f(t, function(t) { t.coordinateSystem = o, op(o, t) })
            }), n
        },
        getFilledRegions: function(t, e, n) { for (var i = (t || []).slice(), a = B(), r = 0; r < i.length; r++) a.set(i[r].name, i[r]); var o = EP.load(e, n); return f(o.regions, function(t) { var e = t.name;!a.get(e) && i.push({ name: e }) }), i }
    };
    gu("geo", VP);
    var GP = function(t) {
            var e = {};
            t.eachSeriesByType("map", function(n) {
                var i = n.getMapType();
                if (!n.getHostGeoModel() && !e[i]) {
                    var a = {};
                    f(n.seriesGroup, function(e) {
                        var n = e.coordinateSystem,
                            i = e.originalData;
                        e.get("showLegendSymbol") && t.getComponent("legend") && i.each(i.mapDimension("value"), function(t, e) {
                            var r = i.getName(e),
                                o = n.getRegion(r);
                            if (o && !isNaN(t)) {
                                var s = a[r] || 0,
                                    l = n.dataToPoint(o.center);
                                a[r] = s + 1, i.setItemLayout(e, { point: l, offset: s })
                            }
                        })
                    });
                    var r = n.getData();
                    r.each(function(t) {
                        var e = r.getName(t),
                            n = r.getItemLayout(t) || {};
                        n.showLabel = !a[e], r.setItemLayout(t, n)
                    }), e[i] = !0
                }
            })
        },
        FP = function(t) {
            t.eachSeriesByType("map", function(t) {
                var e = t.get("color"),
                    n = t.getModel("itemStyle"),
                    i = n.get("areaColor"),
                    a = n.get("color") || e[t.seriesIndex % e.length];
                t.getData().setVisual({ areaColor: i, color: a })
            })
        },
        WP = function(t) {
            var e = {};
            t.eachSeriesByType("map", function(t) {
                var n = t.getHostGeoModel(),
                    i = n ? "o" + n.id : "i" + t.getMapType();
                (e[i] = e[i] || []).push(t)
            }), f(e, function(t) { for (var e = sp(g(t, function(t) { return t.getData() }), t[0].get("mapValueCalculation")), n = 0; n < t.length; n++) t[n].originalData = t[n].getData(); for (var n = 0; n < t.length; n++) t[n].seriesGroup = t, t[n].needsDrawMap = 0 === n && !t[n].getHostGeoModel(), t[n].setData(e.cloneShallow()), t[n].mainSeries = t[0] })
        },
        HP = function(t) {
            var e = [];
            f(t.series, function(t) { t && "map" === t.type && (e.push(t), t.map = t.map || t.mapType, s(t, t.mapLocation)) })
        };
    mu(GP), vu(FP), cu(JD.PROCESSOR.STATISTIC, WP), hu(HP), RC("map", [{ type: "mapToggleSelect", event: "mapselectchanged", method: "toggleSelected" }, { type: "mapSelect", event: "mapselected", method: "select" }, { type: "mapUnSelect", event: "mapunselected", method: "unSelect" }]);
    var XP = "undefined" == typeof Uint32Array ? Array : Uint32Array,
        YP = "undefined" == typeof Float64Array ? Array : Float64Array,
        UP = ZM.extend({
            type: "series.lines",
            dependencies: ["grid", "polar"],
            visualColorAccessPath: "lineStyle.color",
            init: function(t) {
                t.data = t.data || [], lp(t);
                var e = this._processFlatCoordsArray(t.data);
                this._flatCoords = e.flatCoords, this._flatCoordsOffset = e.flatCoordsOffset, e.flatCoords && (t.data = new Float32Array(e.count)), UP.superApply(this, "init", arguments)
            },
            mergeOption: function(t) {
                if (t.data = t.data || [], lp(t), t.data) {
                    var e = this._processFlatCoordsArray(t.data);
                    this._flatCoords = e.flatCoords, this._flatCoordsOffset = e.flatCoordsOffset, e.flatCoords && (t.data = new Float32Array(e.count))
                }
                UP.superApply(this, "mergeOption", arguments)
            },
            appendData: function(t) {
                var e = this._processFlatCoordsArray(t.data);
                e.flatCoords && (this._flatCoords ? (this._flatCoords = V(this._flatCoords, e.flatCoords), this._flatCoordsOffset = V(this._flatCoordsOffset, e.flatCoordsOffset)) : (this._flatCoords = e.flatCoords, this._flatCoordsOffset = e.flatCoordsOffset), t.data = new Float32Array(e.count)), this.getRawData().appendData(t.data)
            },
            _getCoordsFromItemModel: function(t) {
                var e = this.getData().getItemModel(t),
                    n = e.option instanceof Array ? e.option : e.getShallow("coords");
                return n
            },
            getLineCoordsCount: function(t) { return this._flatCoordsOffset ? this._flatCoordsOffset[2 * t + 1] : this._getCoordsFromItemModel(t).length },
            getLineCoords: function(t, e) { if (this._flatCoordsOffset) { for (var n = this._flatCoordsOffset[2 * t], i = this._flatCoordsOffset[2 * t + 1], a = 0; i > a; a++) e[a] = e[a] || [], e[a][0] = this._flatCoords[n + 2 * a], e[a][1] = this._flatCoords[n + 2 * a + 1]; return i } for (var r = this._getCoordsFromItemModel(t), a = 0; a < r.length; a++) e[a] = e[a] || [], e[a][0] = r[a][0], e[a][1] = r[a][1]; return r.length },
            _processFlatCoordsArray: function(t) {
                var e = 0;
                if (this._flatCoords && (e = this._flatCoords.length), "number" == typeof t[0]) {
                    for (var n = t.length, i = new XP(n), a = new YP(n), r = 0, o = 0, s = 0, l = 0; n > l;) {
                        s++;
                        var u = t[l++];
                        i[o++] = r + e, i[o++] = u;
                        for (var h = 0; u > h; h++) {
                            var c = t[l++],
                                d = t[l++];
                            a[r++] = c, a[r++] = d
                        }
                    }
                    return { flatCoordsOffset: new Uint32Array(i.buffer, 0, o), flatCoords: a, count: s }
                }
                return { flatCoordsOffset: null, flatCoords: null, count: t.length }
            },
            getInitialData: function(t) {
                var e = new PT(["value"], this);
                return e.hasItemOption = !1, e.initData(t.data, [], function(t, n, i, a) {
                    if (t instanceof Array) return 0 / 0;
                    e.hasItemOption = !0;
                    var r = t.value;
                    return null != r ? r instanceof Array ? r[a] : r : void 0
                }), e
            },
            formatTooltip: function(t) {
                var e = this.getData(),
                    n = e.getItemModel(t),
                    i = n.get("name");
                if (i) return i;
                var a = n.get("fromName"),
                    r = n.get("toName"),
                    o = [];
                return null != a && o.push(a), null != r && o.push(r), To(o.join(" > "))
            },
            preventIncremental: function() { return !!this.get("effect.show") },
            getProgressive: function() { var t = this.option.progressive; return null == t ? this.option.large ? 1e4 : this.get("progressive") : t },
            getProgressiveThreshold: function() { var t = this.option.progressiveThreshold; return null == t ? this.option.large ? 2e4 : this.get("progressiveThreshold") : t },
            defaultOption: { coordinateSystem: "geo", zlevel: 0, z: 2, legendHoverLink: !0, hoverAnimation: !0, xAxisIndex: 0, yAxisIndex: 0, symbol: ["none", "none"], symbolSize: [10, 10], geoIndex: 0, effect: { show: !1, period: 4, constantSpeed: 0, symbol: "circle", symbolSize: 3, loop: !0, trailLength: .2 }, large: !1, largeThreshold: 2e3, polyline: !1, clip: !0, label: { show: !1, position: "end" }, lineStyle: { opacity: .5 } }
        }),
        jP = fI.prototype,
        ZP = pI.prototype,
        qP = nr({
            type: "ec-line",
            style: { stroke: "#000", fill: null },
            shape: { x1: 0, y1: 0, x2: 0, y2: 0, percent: 1, cpx1: null, cpy1: null },
            buildPath: function(t, e) { this[up(e) ? "_buildPathLine" : "_buildPathCurve"](t, e) },
            _buildPathLine: jP.buildPath,
            _buildPathCurve: ZP.buildPath,
            pointAt: function(t) { return this[up(this.shape) ? "_pointAtLine" : "_pointAtCurve"](t) },
            _pointAtLine: jP.pointAt,
            _pointAtCurve: ZP.pointAt,
            tangentAt: function(t) {
                var e = this.shape,
                    n = up(e) ? [e.x2 - e.x1, e.y2 - e.y1] : this._tangentAtCurve(t);
                return te(n, n)
            },
            _tangentAtCurve: ZP.tangentAt
        }),
        KP = ["fromSymbol", "toSymbol"],
        $P = pp.prototype;
    $P.beforeUpdate = gp, $P._createLine = function(t, e, n) {
        var i = t.hostModel,
            a = t.getItemLayout(e),
            r = dp(a);
        r.shape.percent = 0, Wr(r, { shape: { percent: 1 } }, i, e), this.add(r);
        var o = new QS({ name: "label", lineLabelOriginalOpacity: 1 });
        this.add(o), f(KP, function(n) {
            var i = cp(n, t, e);
            this.add(i), this[hp(n)] = t.getItemVisual(e, n)
        }, this), this._updateCommonStl(t, e, n)
    }, $P.updateData = function(t, e, n) {
        var i = t.hostModel,
            a = this.childOfName("line"),
            r = t.getItemLayout(e),
            o = { shape: {} };
        fp(o.shape, r), Fr(a, o, i, e), f(KP, function(n) {
            var i = t.getItemVisual(e, n),
                a = hp(n);
            if (this[a] !== i) {
                this.remove(this.childOfName(n));
                var r = cp(n, t, e);
                this.add(r)
            }
            this[a] = i
        }, this), this._updateCommonStl(t, e, n)
    }, $P._updateCommonStl = function(t, e, n) {
        var i = t.hostModel,
            a = this.childOfName("line"),
            r = n && n.lineStyle,
            o = n && n.hoverLineStyle,
            l = n && n.labelModel,
            u = n && n.hoverLabelModel;
        if (!n || t.hasItemOption) {
            var h = t.getItemModel(e);
            r = h.getModel("lineStyle").getLineStyle(), o = h.getModel("emphasis.lineStyle").getLineStyle(), l = h.getModel("label"), u = h.getModel("emphasis.label")
        }
        var c = t.getItemVisual(e, "color"),
            d = L(t.getItemVisual(e, "opacity"), r.opacity, 1);
        a.useStyle(s({ strokeNoScale: !0, fill: "none", stroke: c, opacity: d }, r)), a.hoverStyle = o, f(KP, function(t) {
            var e = this.childOfName(t);
            e && (e.setColor(c), e.setStyle({ opacity: d }))
        }, this);
        var g, p, m = l.getShallow("show"),
            v = u.getShallow("show"),
            y = this.childOfName("label");
        if ((m || v) && (g = c || "#000", p = i.getFormattedLabel(e, "normal", t.dataType), null == p)) {
            var x = i.getRawValue(e);
            p = null == x ? t.getName(e) : isFinite(x) ? uo(x) : x
        }
        var _ = m ? p : null,
            w = v ? C(i.getFormattedLabel(e, "emphasis", t.dataType), p) : null,
            b = y.style;
        (null != _ || null != w) && (Pr(y.style, l, { text: _ }, { autoColor: g }), y.__textAlign = b.textAlign, y.__verticalAlign = b.textVerticalAlign, y.__position = l.get("position") || "middle"), y.hoverStyle = null != w ? { text: w, textFill: u.getTextColor(!0), fontStyle: u.getShallow("fontStyle"), fontWeight: u.getShallow("fontWeight"), fontSize: u.getShallow("fontSize"), fontFamily: u.getShallow("fontFamily") } : { text: null }, y.ignore = !m && !v, Mr(this)
    }, $P.highlight = function() { this.trigger("emphasis") }, $P.downplay = function() { this.trigger("normal") }, $P.updateLayout = function(t, e) { this.setLinePoints(t.getItemLayout(e)) }, $P.setLinePoints = function(t) {
        var e = this.childOfName("line");
        fp(e.shape, t), e.dirty()
    }, h(pp, Vw);
    var JP = mp.prototype;
    JP.isPersistent = function() { return !0 }, JP.updateData = function(t) {
        var e = this,
            n = e.group,
            i = e._lineData;
        e._lineData = t, i || n.removeAll();
        var a = xp(t);
        t.diff(i).add(function(n) { vp(e, t, n, a) }).update(function(n, r) { yp(e, i, t, r, n, a) }).remove(function(t) { n.remove(i.getItemGraphicEl(t)) }).execute()
    }, JP.updateLayout = function() {
        var t = this._lineData;
        t && t.eachItemGraphicEl(function(e, n) { e.updateLayout(t, n) }, this)
    }, JP.incrementalPrepareUpdate = function(t) { this._seriesScope = xp(t), this._lineData = null, this.group.removeAll() }, JP.incrementalUpdate = function(t, e) {
        function n(t) { t.isGroup || (t.incremental = t.useHoverLayer = !0) }
        for (var i = t.start; i < t.end; i++) {
            var a = e.getItemLayout(i);
            if (wp(a)) {
                var r = new this._ctor(e, i, this._seriesScope);
                r.traverse(n), this.group.add(r), e.setItemGraphicEl(i, r)
            }
        }
    }, JP.remove = function() { this._clearIncremental(), this._incremental = null, this.group.removeAll() }, JP._clearIncremental = function() {
        var t = this._incremental;
        t && t.clearDisplaybles()
    };
    var QP = bp.prototype;
    QP.createLine = function(t, e, n) { return new pp(t, e, n) }, QP._updateEffectSymbol = function(t, e) {
        var n = t.getItemModel(e),
            i = n.getModel("effect"),
            a = i.get("symbolSize"),
            r = i.get("symbol");
        _(a) || (a = [a, a]);
        var o = i.get("color") || t.getItemVisual(e, "color"),
            s = this.childAt(1);
        this._symbolType !== r && (this.remove(s), s = zh(r, -.5, -.5, 1, 1, o), s.z2 = 100, s.culling = !0, this.add(s)), s && (s.setStyle("shadowColor", o), s.setStyle(i.getItemStyle(["color"])), s.attr("scale", a), s.setColor(o), s.attr("scale", a), this._symbolType = r, this._updateEffectAnimation(t, i, e))
    }, QP._updateEffectAnimation = function(t, e, n) {
        var i = this.childAt(1);
        if (i) {
            var a = this,
                r = t.getItemLayout(n),
                o = 1e3 * e.get("period"),
                s = e.get("loop"),
                l = e.get("constantSpeed"),
                u = A(e.get("delay"), function(e) { return e / t.count() * o / 3 }),
                h = "function" == typeof u;
            if (i.ignore = !0, this.updateAnimationPoints(i, r), l > 0 && (o = this.getLineLength(i) / l * 1e3), o !== this._period || s !== this._loop) {
                i.stopAnimation();
                var c = u;
                h && (c = u(n)), i.__t > 0 && (c = -o * i.__t), i.__t = 0;
                var d = i.animate("", s).when(o, { __t: 1 }).delay(c).during(function() { a.updateSymbolPosition(i) });
                s || d.done(function() { a.remove(i) }), d.start()
            }
            this._period = o, this._loop = s
        }
    }, QP.getLineLength = function(t) { return X_(t.__p1, t.__cp1) + X_(t.__cp1, t.__p2) }, QP.updateAnimationPoints = function(t, e) { t.__p1 = e[0], t.__p2 = e[1], t.__cp1 = e[2] || [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2] }, QP.updateData = function(t, e, n) { this.childAt(0).updateData(t, e, n), this._updateEffectSymbol(t, e) }, QP.updateSymbolPosition = function(t) {
        var e = t.__p1,
            n = t.__p2,
            i = t.__cp1,
            a = t.__t,
            r = t.position,
            o = va,
            s = ya;
        r[0] = o(e[0], i[0], n[0], a), r[1] = o(e[1], i[1], n[1], a);
        var l = s(e[0], i[0], n[0], a),
            u = s(e[1], i[1], n[1], a);
        t.rotation = -Math.atan2(u, l) - Math.PI / 2, t.ignore = !1
    }, QP.updateLayout = function(t, e) {
        this.childAt(0).updateLayout(t, e);
        var n = t.getItemModel(e).getModel("effect");
        this._updateEffectAnimation(t, n, e)
    }, h(bp, Vw);
    var tk = Sp.prototype;
    tk._createPolyline = function(t, e, n) {
        var i = t.getItemLayout(e),
            a = new lI({ shape: { points: i } });
        this.add(a), this._updateCommonStl(t, e, n)
    }, tk.updateData = function(t, e, n) {
        var i = t.hostModel,
            a = this.childAt(0),
            r = { shape: { points: t.getItemLayout(e) } };
        Fr(a, r, i, e), this._updateCommonStl(t, e, n)
    }, tk._updateCommonStl = function(t, e, n) {
        var i = this.childAt(0),
            a = t.getItemModel(e),
            r = t.getItemVisual(e, "color"),
            o = n && n.lineStyle,
            l = n && n.hoverLineStyle;
        (!n || t.hasItemOption) && (o = a.getModel("lineStyle").getLineStyle(), l = a.getModel("emphasis.lineStyle").getLineStyle()), i.useStyle(s({ strokeNoScale: !0, fill: "none", stroke: r }, o)), i.hoverStyle = l, Mr(this)
    }, tk.updateLayout = function(t, e) {
        var n = this.childAt(0);
        n.setShape("points", t.getItemLayout(e))
    }, h(Sp, Vw);
    var ek = Ip.prototype;
    ek.createLine = function(t, e, n) { return new Sp(t, e, n) }, ek.updateAnimationPoints = function(t, e) {
        this._points = e;
        for (var n = [0], i = 0, a = 1; a < e.length; a++) {
            var r = e[a - 1],
                o = e[a];
            i += X_(r, o), n.push(i)
        }
        if (0 !== i) {
            for (var a = 0; a < n.length; a++) n[a] /= i;
            this._offsets = n, this._length = i
        }
    }, ek.getLineLength = function() { return this._length }, ek.updateSymbolPosition = function(t) {
        var e = t.__t,
            n = this._points,
            i = this._offsets,
            a = n.length;
        if (i) {
            var r, o = this._lastFrame;
            if (e < this._lastFramePercent) {
                var s = Math.min(o + 1, a - 1);
                for (r = s; r >= 0 && !(i[r] <= e); r--);
                r = Math.min(r, a - 2)
            } else {
                for (var r = o; a > r && !(i[r] > e); r++);
                r = Math.min(r - 1, a - 2)
            }
            ae(t.position, n[r], n[r + 1], (e - i[r]) / (i[r + 1] - i[r]));
            var l = n[r + 1][0] - n[r][0],
                u = n[r + 1][1] - n[r][1];
            t.rotation = -Math.atan2(u, l) - Math.PI / 2, this._lastFrame = r, this._lastFramePercent = e, t.ignore = !1
        }
    }, h(Ip, bp);
    var nk = nr({
            shape: { polyline: !1, curveness: 0, segs: [] },
            buildPath: function(t, e) {
                var n = e.segs,
                    i = e.curveness;
                if (e.polyline)
                    for (var a = 0; a < n.length;) { var r = n[a++]; if (r > 0) { t.moveTo(n[a++], n[a++]); for (var o = 1; r > o; o++) t.lineTo(n[a++], n[a++]) } } else
                        for (var a = 0; a < n.length;) {
                            var s = n[a++],
                                l = n[a++],
                                u = n[a++],
                                h = n[a++];
                            if (t.moveTo(s, l), i > 0) {
                                var c = (s + u) / 2 - (l - h) * i,
                                    d = (l + h) / 2 - (u - s) * i;
                                t.quadraticCurveTo(c, d, u, h)
                            } else t.lineTo(u, h)
                        }
            },
            findDataIndex: function() {
                var t = this.shape,
                    e = t.segs,
                    n = t.curveness;
                if (t.polyline)
                    for (var i = 0, a = 0; a < e.length;) {
                        var r = e[a++];
                        if (r > 0)
                            for (var o = e[a++], s = e[a++], l = 1; r > l; l++) {
                                var u = e[a++],
                                    h = e[a++];
                                if (Aa(o, s, u, h)) return i
                            }
                        i++
                    } else
                        for (var i = 0, a = 0; a < e.length;) {
                            var o = e[a++],
                                s = e[a++],
                                u = e[a++],
                                h = e[a++];
                            if (n > 0) {
                                var c = (o + u) / 2 - (s - h) * n,
                                    d = (s + h) / 2 - (u - o) * n;
                                if (La(o, s, c, d, u, h)) return i
                            } else if (Aa(o, s, u, h)) return i;
                            i++
                        }
                return -1
            }
        }),
        ik = Mp.prototype;
    ik.isPersistent = function() { return !this._incremental }, ik.updateData = function(t) {
        this.group.removeAll();
        var e = new nk({ rectHover: !0, cursor: "default" });
        e.setShape({ segs: t.getLayout("linesPoints") }), this._setCommon(e, t), this.group.add(e), this._incremental = null
    }, ik.incrementalPrepareUpdate = function(t) { this.group.removeAll(), this._clearIncremental(), t.count() > 5e5 ? (this._incremental || (this._incremental = new er({ silent: !0 })), this.group.add(this._incremental)) : this._incremental = null }, ik.incrementalUpdate = function(t, e) {
        var n = new nk;
        n.setShape({ segs: e.getLayout("linesPoints") }), this._setCommon(n, e, !!this._incremental), this._incremental ? this._incremental.addDisplayable(n, !0) : (n.rectHover = !0, n.cursor = "default", n.__startIndex = t.start, this.group.add(n))
    }, ik.remove = function() { this._clearIncremental(), this._incremental = null, this.group.removeAll() }, ik._setCommon = function(t, e, n) {
        var i = e.hostModel;
        t.setShape({ polyline: i.get("polyline"), curveness: i.get("lineStyle.curveness") }), t.useStyle(i.getModel("lineStyle").getLineStyle()), t.style.strokeNoScale = !0;
        var a = e.getVisual("color");
        a && t.setStyle("stroke", a), t.setStyle("fill"), n || (t.seriesIndex = i.seriesIndex, t.on("mousemove", function(e) {
            t.dataIndex = null;
            var n = t.findDataIndex(e.offsetX, e.offsetY);
            n > 0 && (t.dataIndex = n + t.__startIndex)
        }))
    }, ik._clearIncremental = function() {
        var t = this._incremental;
        t && t.clearDisplaybles()
    };
    var ak = {
        seriesType: "lines",
        plan: $M(),
        reset: function(t) {
            function e(e, r) {
                var o = [];
                if (a) {
                    var s, l = e.end - e.start;
                    if (i) {
                        for (var u = 0, h = e.start; h < e.end; h++) u += t.getLineCoordsCount(h);
                        s = new Float32Array(l + 2 * u)
                    } else s = new Float32Array(4 * l);
                    for (var c = 0, d = [], h = e.start; h < e.end; h++) {
                        var f = t.getLineCoords(h, o);
                        i && (s[c++] = f);
                        for (var g = 0; f > g; g++) d = n.dataToPoint(o[g], !1, d), s[c++] = d[0], s[c++] = d[1]
                    }
                    r.setLayout("linesPoints", s)
                } else
                    for (var h = e.start; h < e.end; h++) {
                        var p = r.getItemModel(h),
                            f = t.getLineCoords(h, o),
                            m = [];
                        if (i)
                            for (var v = 0; f > v; v++) m.push(n.dataToPoint(o[v]));
                        else { m[0] = n.dataToPoint(o[0]), m[1] = n.dataToPoint(o[1]); var y = p.get("lineStyle.curveness"); + y && (m[2] = [(m[0][0] + m[1][0]) / 2 - (m[0][1] - m[1][1]) * y, (m[0][1] + m[1][1]) / 2 - (m[1][0] - m[0][0]) * y]) }
                        r.setItemLayout(h, m)
                    }
            }
            var n = t.coordinateSystem,
                i = t.get("polyline"),
                a = t.pipelineContext.large;
            return { progress: e }
        }
    };
    Su({
        type: "lines",
        init: function() {},
        render: function(t, e, n) {
            var i = t.getData(),
                a = this._updateLineDraw(i, t),
                r = t.get("zlevel"),
                o = t.get("effect.trailLength"),
                s = n.getZr(),
                l = "svg" === s.painter.getType();
            l || s.painter.getLayer(r).clear(!0), null == this._lastZlevel || l || s.configLayer(this._lastZlevel, { motionBlur: !1 }), this._showEffect(t) && o && (l || s.configLayer(r, { motionBlur: !0, lastFrameAlpha: Math.max(Math.min(o / 10 + .9, 1), 0) })), a.updateData(i);
            var u = t.get("clip", !0) && bc(t.coordinateSystem, !1, t);
            u ? this.group.setClipPath(u) : this.group.removeClipPath(), this._lastZlevel = r, this._finished = !0
        },
        incrementalPrepareRender: function(t, e, n) {
            var i = t.getData(),
                a = this._updateLineDraw(i, t);
            a.incrementalPrepareUpdate(i), this._clearLayer(n), this._finished = !1
        },
        incrementalRender: function(t, e) { this._lineDraw.incrementalUpdate(t, e.getData()), this._finished = t.end === e.getData().count() },
        updateTransform: function(t, e, n) {
            var i = t.getData(),
                a = t.pipelineContext;
            if (!this._finished || a.large || a.progressiveRender) return { update: !0 };
            var r = ak.reset(t);
            r.progress && r.progress({ start: 0, end: i.count() }, i), this._lineDraw.updateLayout(), this._clearLayer(n)
        },
        _updateLineDraw: function(t, e) {
            var n = this._lineDraw,
                i = this._showEffect(e),
                a = !!e.get("polyline"),
                r = e.pipelineContext,
                o = r.large;
            return n && i === this._hasEffet && a === this._isPolyline && o === this._isLargeDraw || (n && n.remove(), n = this._lineDraw = o ? new Mp : new mp(a ? i ? Ip : Sp : i ? bp : pp), this._hasEffet = i, this._isPolyline = a, this._isLargeDraw = o, this.group.removeAll()), this.group.add(n.group), n
        },
        _showEffect: function(t) { return !!t.get("effect.show") },
        _clearLayer: function(t) {
            var e = t.getZr(),
                n = "svg" === e.painter.getType();
            n || null == this._lastZlevel || e.painter.getLayer(this._lastZlevel).clear(!0)
        },
        remove: function(t, e) { this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(e) },
        dispose: function() {}
    });
    var rk = "lineStyle.opacity".split("."),
        ok = {
            seriesType: "lines",
            reset: function(t) {
                function e(t, e) {
                    var n = t.getItemModel(e),
                        i = Dp(n.getShallow("symbol", !0)),
                        a = Dp(n.getShallow("symbolSize", !0)),
                        r = n.get(rk);
                    i[0] && t.setItemVisual(e, "fromSymbol", i[0]), i[1] && t.setItemVisual(e, "toSymbol", i[1]), a[0] && t.setItemVisual(e, "fromSymbolSize", a[0]), a[1] && t.setItemVisual(e, "toSymbolSize", a[1]), t.setItemVisual(e, "opacity", r)
                }
                var n = Dp(t.get("symbol")),
                    i = Dp(t.get("symbolSize")),
                    a = t.getData();
                return a.setVisual("fromSymbol", n && n[0]), a.setVisual("toSymbol", n && n[1]), a.setVisual("fromSymbolSize", i && i[0]), a.setVisual("toSymbolSize", i && i[1]), a.setVisual("opacity", t.get(rk)), { dataEach: a.hasItemOption ? e : null }
            }
        };
    mu(ak), vu(ok);
    var sk = function(t) { this._directed = t || !1, this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this.data, this.edgeData },
        lk = sk.prototype;
    lk.type = "graph", lk.isDirected = function() { return this._directed }, lk.addNode = function(t, e) { t = null == t ? "" + e : "" + t; var n = this._nodesMap; if (!n[Tp(t)]) { var i = new Ap(t, e); return i.hostGraph = this, this.nodes.push(i), n[Tp(t)] = i, i } }, lk.getNodeByIndex = function(t) { var e = this.data.getRawIndex(t); return this.nodes[e] }, lk.getNodeById = function(t) { return this._nodesMap[Tp(t)] }, lk.addEdge = function(t, e, n) {
        var i = this._nodesMap,
            a = this._edgesMap;
        if ("number" == typeof t && (t = this.nodes[t]), "number" == typeof e && (e = this.nodes[e]), Ap.isInstance(t) || (t = i[Tp(t)]), Ap.isInstance(e) || (e = i[Tp(e)]), t && e) { var r = t.id + "-" + e.id; if (!a[r]) { var o = new Cp(t, e, n); return o.hostGraph = this, this._directed && (t.outEdges.push(o), e.inEdges.push(o)), t.edges.push(o), t !== e && e.edges.push(o), this.edges.push(o), a[r] = o, o } }
    }, lk.getEdgeByIndex = function(t) { var e = this.edgeData.getRawIndex(t); return this.edges[e] }, lk.getEdge = function(t, e) {
        Ap.isInstance(t) && (t = t.id), Ap.isInstance(e) && (e = e.id);
        var n = this._edgesMap;
        return this._directed ? n[t + "-" + e] : n[t + "-" + e] || n[e + "-" + t]
    }, lk.eachNode = function(t, e) { for (var n = this.nodes, i = n.length, a = 0; i > a; a++) n[a].dataIndex >= 0 && t.call(e, n[a], a) }, lk.eachEdge = function(t, e) { for (var n = this.edges, i = n.length, a = 0; i > a; a++) n[a].dataIndex >= 0 && n[a].node1.dataIndex >= 0 && n[a].node2.dataIndex >= 0 && t.call(e, n[a], a) }, lk.breadthFirstTraverse = function(t, e, n, i) {
        if (Ap.isInstance(e) || (e = this._nodesMap[Tp(e)]), e) {
            for (var a = "out" === n ? "outEdges" : "in" === n ? "inEdges" : "edges", r = 0; r < this.nodes.length; r++) this.nodes[r].__visited = !1;
            if (!t.call(i, e, null))
                for (var o = [e]; o.length;)
                    for (var s = o.shift(), l = s[a], r = 0; r < l.length; r++) {
                        var u = l[r],
                            h = u.node1 === s ? u.node2 : u.node1;
                        if (!h.__visited) {
                            if (t.call(i, h, s)) return;
                            o.push(h), h.__visited = !0
                        }
                    }
        }
    }, lk.update = function() {
        for (var t = this.data, e = this.edgeData, n = this.nodes, i = this.edges, a = 0, r = n.length; r > a; a++) n[a].dataIndex = -1;
        for (var a = 0, r = t.count(); r > a; a++) n[t.getRawIndex(a)].dataIndex = a;
        e.filterSelf(function(t) { var n = i[e.getRawIndex(t)]; return n.node1.dataIndex >= 0 && n.node2.dataIndex >= 0 });
        for (var a = 0, r = i.length; r > a; a++) i[a].dataIndex = -1;
        for (var a = 0, r = e.count(); r > a; a++) i[e.getRawIndex(a)].dataIndex = a
    }, lk.clone = function() {
        for (var t = new sk(this._directed), e = this.nodes, n = this.edges, i = 0; i < e.length; i++) t.addNode(e[i].id, e[i].dataIndex);
        for (var i = 0; i < n.length; i++) {
            var a = n[i];
            t.addEdge(a.node1.id, a.node2.id, a.dataIndex)
        }
        return t
    }, Ap.prototype = {
        constructor: Ap,
        degree: function() { return this.edges.length },
        inDegree: function() { return this.inEdges.length },
        outDegree: function() { return this.outEdges.length },
        getModel: function(t) {
            if (!(this.dataIndex < 0)) {
                var e = this.hostGraph,
                    n = e.data.getItemModel(this.dataIndex);
                return n.getModel(t)
            }
        }
    }, Cp.prototype.getModel = function(t) {
        if (!(this.dataIndex < 0)) {
            var e = this.hostGraph,
                n = e.edgeData.getItemModel(this.dataIndex);
            return n.getModel(t)
        }
    };
    var uk = function(t, e) { return { getValue: function(n) { var i = this[t][e]; return i.get(i.getDimension(n || "value"), this.dataIndex) }, setVisual: function(n, i) { this.dataIndex >= 0 && this[t][e].setItemVisual(this.dataIndex, n, i) }, getVisual: function(n, i) { return this[t][e].getItemVisual(this.dataIndex, n, i) }, setLayout: function(n, i) { this.dataIndex >= 0 && this[t][e].setItemLayout(this.dataIndex, n, i) }, getLayout: function() { return this[t][e].getItemLayout(this.dataIndex) }, getGraphicEl: function() { return this[t][e].getItemGraphicEl(this.dataIndex) }, getRawIndex: function() { return this[t][e].getRawIndex(this.dataIndex) } } };
    c(Ap, uk("hostGraph", "data")), c(Cp, uk("hostGraph", "edgeData")), sk.Node = Ap, sk.Edge = Cp, ra(Ap), ra(Cp);
    var hk = function(t, e, n, i, a) {
            for (var r = new sk(i), o = 0; o < t.length; o++) r.addNode(A(t[o].id, t[o].name, o), o);
            for (var s = [], l = [], h = 0, o = 0; o < e.length; o++) {
                var c = e[o],
                    d = c.source,
                    f = c.target;
                r.addEdge(d, f, h) && (l.push(c), s.push(A(c.id, d + " > " + f)), h++)
            }
            var g, p = n.get("coordinateSystem");
            if ("cartesian2d" === p || "polar" === p) g = Qu(t, n);
            else {
                var m = ps.get(p),
                    v = m && "view" !== m.type ? m.dimensions || [] : [];
                u(v, "value") < 0 && v.concat(["value"]);
                var y = OT(t, { coordDimensions: v });
                g = new PT(y, n), g.initData(t)
            }
            var x = new PT(["value"], n);
            return x.initData(l, s), a && a(g, x), $d({ mainData: g, struct: r, structAttr: "graph", datas: { node: g, edge: x }, datasAttr: { node: "data", edge: "edgeData" } }), r.update(), r
        },
        ck = bu({
            type: "series.graph",
            init: function(t) { ck.superApply(this, "init", arguments), this.legendDataProvider = function() { return this._categoriesData }, this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData() },
            mergeOption: function(t) { ck.superApply(this, "mergeOption", arguments), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData() },
            mergeDefaultAndTheme: function(t) { ck.superApply(this, "mergeDefaultAndTheme", arguments), Fi(t, ["edgeLabel"], ["show"]) },
            getInitialData: function(t, e) {
                function n(t, n) {
                    function i(t) { return t = this.parsePath(t), t && "label" === t[0] ? o : t && "emphasis" === t[0] && "label" === t[1] ? l : this.parentModel }
                    t.wrapMethod("getItemModel", function(t) {
                        var e = r._categoriesModels,
                            n = t.getShallow("category"),
                            i = e[n];
                        return i && (i.parentModel = t.parentModel, t.parentModel = i), t
                    });
                    var a = r.getModel("edgeLabel"),
                        o = new to({ label: a.option }, a.parentModel, e),
                        s = r.getModel("emphasis.edgeLabel"),
                        l = new to({ emphasis: { label: s.option } }, s.parentModel, e);
                    n.wrapMethod("getItemModel", function(t) { return t.customizeGetParent(i), t })
                }
                var i = t.edges || t.links || [],
                    a = t.data || t.nodes || [],
                    r = this;
                return a && i ? hk(a, i, this, !0, n).data : void 0
            },
            getGraph: function() { return this.getData().graph },
            getEdgeData: function() { return this.getGraph().edgeData },
            getCategoriesData: function() { return this._categoriesData },
            formatTooltip: function(t, e, n) {
                if ("edge" === n) {
                    var i = this.getData(),
                        a = this.getDataParams(t, n),
                        r = i.graph.getEdgeByIndex(t),
                        o = i.getName(r.node1.dataIndex),
                        s = i.getName(r.node2.dataIndex),
                        l = [];
                    return null != o && l.push(o), null != s && l.push(s), l = To(l.join(" > ")), a.value && (l += " : " + To(a.value)), l
                }
                return ck.superApply(this, "formatTooltip", arguments)
            },
            _updateCategoriesData: function() {
                var t = g(this.option.categories || [], function(t) { return null != t.value ? t : o({ value: 0 }, t) }),
                    e = new PT(["value"], this);
                e.initData(t), this._categoriesData = e, this._categoriesModels = e.mapArray(function(t) { return e.getItemModel(t, !0) })
            },
            setZoom: function(t) { this.option.zoom = t },
            setCenter: function(t) { this.option.center = t },
            isAnimationEnabled: function() { return ck.superCall(this, "isAnimationEnabled") && !("force" === this.get("layout") && this.get("force.layoutAnimation")) },
            defaultOption: { zlevel: 0, z: 2, coordinateSystem: "view", legendHoverLink: !0, hoverAnimation: !0, layout: null, focusNodeAdjacency: !1, circular: { rotateLabel: !1 }, force: { initLayout: null, repulsion: [0, 50], gravity: .1, friction: .6, edgeLength: 30, layoutAnimation: !0 }, left: "center", top: "center", symbol: "circle", symbolSize: 10, edgeSymbol: ["none", "none"], edgeSymbolSize: 10, edgeLabel: { position: "middle" }, draggable: !1, roam: !1, center: null, zoom: 1, nodeScaleRatio: .6, label: { show: !1, formatter: "{b}" }, itemStyle: {}, lineStyle: { color: "#aaa", width: 1, curveness: 0, opacity: .5 }, emphasis: { label: { show: !0 } } }
        }),
        dk = [],
        fk = [],
        gk = [],
        pk = va,
        mk = Y_,
        vk = Math.abs,
        yk = function(t, e) {
            var n = [],
                i = wa,
                a = [
                    [],
                    [],
                    []
                ],
                r = [
                    [],
                    []
                ],
                o = [];
            e /= 2, t.eachEdge(function(t) {
                var s = t.getLayout(),
                    l = t.getVisual("fromSymbol"),
                    u = t.getVisual("toSymbol");
                s.__original || (s.__original = [H(s[0]), H(s[1])], s[2] && s.__original.push(H(s[2])));
                var h = s.__original;
                if (null != s[2]) {
                    if (W(a[0], h[0]), W(a[1], h[2]), W(a[2], h[1]), l && "none" !== l) {
                        var c = Pp(t.node1),
                            d = kp(a, h[0], c * e);
                        i(a[0][0], a[1][0], a[2][0], d, n), a[0][0] = n[3], a[1][0] = n[4], i(a[0][1], a[1][1], a[2][1], d, n), a[0][1] = n[3], a[1][1] = n[4]
                    }
                    if (u && "none" !== u) {
                        var c = Pp(t.node2),
                            d = kp(a, h[1], c * e);
                        i(a[0][0], a[1][0], a[2][0], d, n), a[1][0] = n[1], a[2][0] = n[2], i(a[0][1], a[1][1], a[2][1], d, n), a[1][1] = n[1], a[2][1] = n[2]
                    }
                    W(s[0], a[0]), W(s[1], a[2]), W(s[2], a[1])
                } else {
                    if (W(r[0], h[0]), W(r[1], h[1]), j(o, r[1], r[0]), te(o, o), l && "none" !== l) {
                        var c = Pp(t.node1);
                        U(r[0], r[0], o, c * e)
                    }
                    if (u && "none" !== u) {
                        var c = Pp(t.node2);
                        U(r[1], r[1], o, -c * e)
                    }
                    W(s[0], r[0]), W(s[1], r[1])
                }
            })
        },
        xk = "__focusNodeAdjacency",
        _k = "__unfocusNodeAdjacency",
        wk = ["itemStyle", "opacity"],
        bk = ["lineStyle", "opacity"];
    Su({
        type: "graph",
        init: function(t, e) {
            var n = new nd,
                i = new mp,
                a = this.group;
            this._controller = new Lf(e.getZr()), this._controllerHost = { target: a }, a.add(n.group), a.add(i.group), this._symbolDraw = n, this._lineDraw = i, this._firstRender = !0
        },
        render: function(t, e, n) {
            var i = t.coordinateSystem;
            this._model = t;
            var a = this._symbolDraw,
                r = this._lineDraw,
                o = this.group;
            if ("view" === i.type) {
                var s = { position: i.position, scale: i.scale };
                this._firstRender ? o.attr(s) : Fr(o, s, t)
            }
            yk(t.getGraph(), Lp(t));
            var l = t.getData();
            a.updateData(l);
            var u = t.getEdgeData();
            r.updateData(u), this._updateNodeAndLinkScale(), this._updateController(t, e, n), clearTimeout(this._layoutTimeout);
            var h = t.forceLayout,
                c = t.get("force.layoutAnimation");
            h && this._startForceLayoutIteration(h, c), l.eachItemGraphicEl(function(e, i) {
                var a = l.getItemModel(i);
                e.off("drag").off("dragend");
                var r = a.get("draggable");
                r && e.on("drag", function() { h && (h.warmUp(), !this._layouting && this._startForceLayoutIteration(h, c), h.setFixed(i), l.setItemLayout(i, e.position)) }, this).on("dragend", function() { h && h.setUnfixed(i) }, this), e.setDraggable(r && h), e[xk] && e.off("mouseover", e[xk]), e[_k] && e.off("mouseout", e[_k]), a.get("focusNodeAdjacency") && (e.on("mouseover", e[xk] = function() { n.dispatchAction({ type: "focusNodeAdjacency", seriesId: t.id, dataIndex: e.dataIndex }) }), e.on("mouseout", e[_k] = function() { n.dispatchAction({ type: "unfocusNodeAdjacency", seriesId: t.id }) }))
            }, this), l.graph.eachEdge(function(e) {
                var i = e.getGraphicEl();
                i[xk] && i.off("mouseover", i[xk]), i[_k] && i.off("mouseout", i[_k]), e.getModel().get("focusNodeAdjacency") && (i.on("mouseover", i[xk] = function() { n.dispatchAction({ type: "focusNodeAdjacency", seriesId: t.id, edgeDataIndex: e.dataIndex }) }), i.on("mouseout", i[_k] = function() { n.dispatchAction({ type: "unfocusNodeAdjacency", seriesId: t.id }) }))
            });
            var d = "circular" === t.get("layout") && t.get("circular.rotateLabel"),
                f = l.getLayout("cx"),
                g = l.getLayout("cy");
            l.eachItemGraphicEl(function(t, e) {
                var n = l.getItemModel(e),
                    i = n.get("label.rotate") || 0,
                    a = t.getSymbolPath();
                if (d) {
                    var r = l.getItemLayout(e),
                        o = Math.atan2(r[1] - g, r[0] - f);
                    0 > o && (o = 2 * Math.PI + o);
                    var s = r[0] < f;
                    s && (o -= Math.PI);
                    var u = s ? "left" : "right";
                    Lr(a, { textRotation: -o, textPosition: u, textOrigin: "center" }, { textPosition: u })
                } else Lr(a, { textRotation: i *= Math.PI / 180 })
            }), this._firstRender = !1
        },
        dispose: function() { this._controller && this._controller.dispose(), this._controllerHost = {} },
        focusNodeAdjacency: function(t, e, n, i) {
            var a = this._model.getData(),
                r = a.graph,
                o = i.dataIndex,
                s = i.edgeDataIndex,
                l = r.getNodeByIndex(o),
                u = r.getEdgeByIndex(s);
            (l || u) && (r.eachNode(function(t) { Op(t, wk, .1) }), r.eachEdge(function(t) { Op(t, bk, .1) }), l && (Ep(l, wk), f(l.edges, function(t) { t.dataIndex < 0 || (Ep(t, bk), Ep(t.node1, wk), Ep(t.node2, wk)) })), u && (Ep(u, bk), Ep(u.node1, wk), Ep(u.node2, wk)))
        },
        unfocusNodeAdjacency: function() {
            var t = this._model.getData().graph;
            t.eachNode(function(t) { Op(t, wk) }), t.eachEdge(function(t) { Op(t, bk) })
        },
        _startForceLayoutIteration: function(t, e) { var n = this;! function i() { t.step(function(t) { n.updateLayout(n._model), (n._layouting = !t) && (e ? n._layoutTimeout = setTimeout(i, 16) : i()) }) }() },
        _updateController: function(t, e, n) {
            var i = this._controller,
                a = this._controllerHost,
                r = this.group;
            return i.setPointerChecker(function(e, i, a) { var o = r.getBoundingRect(); return o.applyTransform(r.transform), o.contain(i, a) && !Vf(e, n, t) }), "view" !== t.coordinateSystem.type ? void i.disable() : (i.enable(t.get("roam")), a.zoomLimit = t.get("scaleLimit"), a.zoom = t.coordinateSystem.getZoom(), void i.off("pan").off("zoom").on("pan", function(e) { If(a, e.dx, e.dy), n.dispatchAction({ seriesId: t.id, type: "graphRoam", dx: e.dx, dy: e.dy }) }).on("zoom", function(e) { Mf(a, e.scale, e.originX, e.originY), n.dispatchAction({ seriesId: t.id, type: "graphRoam", zoom: e.scale, originX: e.originX, originY: e.originY }), this._updateNodeAndLinkScale(), yk(t.getGraph(), Lp(t)), this._lineDraw.updateLayout() }, this))
        },
        _updateNodeAndLinkScale: function() {
            var t = this._model,
                e = t.getData(),
                n = Lp(t),
                i = [n, n];
            e.eachItemGraphicEl(function(t) { t.attr("scale", i) })
        },
        updateLayout: function(t) { yk(t.getGraph(), Lp(t)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout() },
        remove: function() { this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove() }
    }), fu({ type: "focusNodeAdjacency", event: "focusNodeAdjacency", update: "series:focusNodeAdjacency" }, function() {}), fu({ type: "unfocusNodeAdjacency", event: "unfocusNodeAdjacency", update: "series:unfocusNodeAdjacency" }, function() {});
    var Sk = { type: "graphRoam", event: "graphRoam", update: "none" };
    fu(Sk, function(t, e) {
        e.eachComponent({ mainType: "series", query: t }, function(e) {
            var n = e.coordinateSystem,
                i = Yf(n, t);
            e.setCenter && e.setCenter(i.center), e.setZoom && e.setZoom(i.zoom)
        })
    });
    var Ik = function(t) {
            var e = t.findComponents({ mainType: "legend" });
            e && e.length && t.eachSeriesByType("graph", function(t) {
                var n = t.getCategoriesData(),
                    i = t.getGraph(),
                    a = i.data,
                    r = n.mapArray(n.getName);
                a.filterSelf(function(t) {
                    var n = a.getItemModel(t),
                        i = n.getShallow("category");
                    if (null != i) {
                        "number" == typeof i && (i = r[i]);
                        for (var o = 0; o < e.length; o++)
                            if (!e[o].isSelected(i)) return !1
                    }
                    return !0
                })
            }, this)
        },
        Mk = function(t) {
            var e = {};
            t.eachSeriesByType("graph", function(t) {
                var n = t.getCategoriesData(),
                    i = t.getData(),
                    a = {};
                n.each(function(i) {
                    var r = n.getName(i);
                    a["ec-" + r] = i;
                    var o = n.getItemModel(i),
                        s = o.get("itemStyle.color") || t.getColorFromPalette(r, e);
                    n.setItemVisual(i, "color", s);
                    for (var l = ["opacity", "symbol", "symbolSize", "symbolKeepAspect"], u = 0; u < l.length; u++) {
                        var h = o.getShallow(l[u], !0);
                        null != h && n.setItemVisual(i, l[u], h)
                    }
                }), n.count() && i.each(function(t) {
                    var e = i.getItemModel(t),
                        r = e.getShallow("category");
                    if (null != r) { "string" == typeof r && (r = a["ec-" + r]); for (var o = ["color", "opacity", "symbol", "symbolSize", "symbolKeepAspect"], s = 0; s < o.length; s++) null == i.getItemVisual(t, o[s], !0) && i.setItemVisual(t, o[s], n.getItemVisual(r, o[s])) }
                })
            })
        },
        Dk = function(t) {
            t.eachSeriesByType("graph", function(t) {
                var e = t.getGraph(),
                    n = t.getEdgeData(),
                    i = zp(t.get("edgeSymbol")),
                    a = zp(t.get("edgeSymbolSize")),
                    r = "lineStyle.color".split("."),
                    o = "lineStyle.opacity".split(".");
                n.setVisual("fromSymbol", i && i[0]), n.setVisual("toSymbol", i && i[1]), n.setVisual("fromSymbolSize", a && a[0]), n.setVisual("toSymbolSize", a && a[1]), n.setVisual("color", t.get(r)), n.setVisual("opacity", t.get(o)), n.each(function(t) {
                    var i = n.getItemModel(t),
                        a = e.getEdgeByIndex(t),
                        s = zp(i.getShallow("symbol", !0)),
                        l = zp(i.getShallow("symbolSize", !0)),
                        u = i.get(r),
                        h = i.get(o);
                    switch (u) {
                        case "source":
                            u = a.node1.getVisual("color");
                            break;
                        case "target":
                            u = a.node2.getVisual("color")
                    }
                    s[0] && a.setVisual("fromSymbol", s[0]), s[1] && a.setVisual("toSymbol", s[1]), l[0] && a.setVisual("fromSymbolSize", l[0]), l[1] && a.setVisual("toSymbolSize", l[1]), a.setVisual("color", u), a.setVisual("opacity", h)
                })
            })
        },
        Tk = function(t) {
            t.eachSeriesByType("graph", function(t) {
                var e = t.get("layout"),
                    n = t.coordinateSystem;
                if (n && "view" !== n.type) {
                    var i = t.getData(),
                        a = [];
                    f(n.dimensions, function(t) { a = a.concat(i.mapDimension(t, !0)) });
                    for (var r = 0; r < i.count(); r++) {
                        for (var o = [], s = !1, l = 0; l < a.length; l++) {
                            var u = i.get(a[l], r);
                            isNaN(u) || (s = !0), o.push(u)
                        }
                        s ? i.setItemLayout(r, n.dataToPoint(o)) : i.setItemLayout(r, [0 / 0, 0 / 0])
                    }
                    Bp(i.graph)
                } else e && "none" !== e || Rp(t)
            })
        },
        Ak = Math.PI,
        Ck = [],
        Lk = {
            value: function(t, e, n, i, a, r, o, s) {
                var l = 0,
                    u = i.getSum("value"),
                    h = 2 * Math.PI / (u || s);
                n.eachNode(function(t) {
                    var e = t.getValue("value"),
                        n = h * (u ? e : 1) / 2;
                    l += n, t.setLayout([a * Math.cos(l) + r, a * Math.sin(l) + o]), l += n
                })
            },
            symbolSize: function(t, e, n, i, a, r, o, s) {
                var l = 0;
                Ck.length = s;
                var u = Lp(t);
                n.eachNode(function(t) {
                    var e = Pp(t);
                    isNaN(e) && (e = 2), 0 > e && (e = 0), e *= u;
                    var n = Math.asin(e / 2 / a);
                    isNaN(n) && (n = Ak / 2), Ck[t.dataIndex] = n, l += 2 * n
                });
                var h = (2 * Ak - l) / s / 2,
                    c = 0;
                n.eachNode(function(t) {
                    var e = h + Ck[t.dataIndex];
                    c += e, t.setLayout([a * Math.cos(c) + r, a * Math.sin(c) + o]), c += e
                })
            }
        },
        Pk = function(t) { t.eachSeriesByType("graph", function(t) { "circular" === t.get("layout") && Vp(t, "symbolSize") }) },
        kk = U,
        Nk = function(t) {
            t.eachSeriesByType("graph", function(t) {
                var e = t.coordinateSystem;
                if (!e || "view" === e.type)
                    if ("force" === t.get("layout")) {
                        var n = t.preservedPoints || {},
                            i = t.getGraph(),
                            a = i.data,
                            r = i.edgeData,
                            o = t.getModel("force"),
                            s = o.get("initLayout");
                        t.preservedPoints ? a.each(function(t) {
                            var e = a.getId(t);
                            a.setItemLayout(t, n[e] || [0 / 0, 0 / 0])
                        }) : s && "none" !== s ? "circular" === s && Vp(t, "value") : Rp(t);
                        var l = a.getDataExtent("value"),
                            u = r.getDataExtent("value"),
                            h = o.get("repulsion"),
                            c = o.get("edgeLength");
                        _(h) || (h = [h, h]), _(c) || (c = [c, c]), c = [c[1], c[0]];
                        var d = a.mapArray("value", function(t, e) {
                                var n = a.getItemLayout(e),
                                    i = so(t, l, h);
                                return isNaN(i) && (i = (h[0] + h[1]) / 2), { w: i, rep: i, fixed: a.getItemModel(e).get("fixed"), p: !n || isNaN(n[0]) || isNaN(n[1]) ? null : n }
                            }),
                            f = r.mapArray("value", function(t, e) {
                                var n = i.getEdgeByIndex(e),
                                    a = so(t, u, c);
                                isNaN(a) && (a = (c[0] + c[1]) / 2);
                                var r = n.getModel();
                                return { n1: d[n.node1.dataIndex], n2: d[n.node2.dataIndex], d: a, curveness: r.get("lineStyle.curveness") || 0, ignoreForceLayout: r.get("ignoreForceLayout") }
                            }),
                            e = t.coordinateSystem,
                            g = e.getBoundingRect(),
                            p = Gp(d, f, { rect: g, gravity: o.get("gravity"), friction: o.get("friction") }),
                            m = p.step;
                        p.step = function(t) {
                            for (var e = 0, r = d.length; r > e; e++) d[e].fixed && W(d[e].p, i.getNodeByIndex(e).getLayout());
                            m(function(e, r, o) {
                                for (var s = 0, l = e.length; l > s; s++) e[s].fixed || i.getNodeByIndex(s).setLayout(e[s].p), n[a.getId(s)] = e[s].p;
                                for (var s = 0, l = r.length; l > s; s++) {
                                    var u = r[s],
                                        h = i.getEdgeByIndex(s),
                                        c = u.n1.p,
                                        d = u.n2.p,
                                        f = h.getLayout();
                                    f = f ? f.slice() : [], f[0] = f[0] || [], f[1] = f[1] || [], W(f[0], c), W(f[1], d), +u.curveness && (f[2] = [(c[0] + d[0]) / 2 - (c[1] - d[1]) * u.curveness, (c[1] + d[1]) / 2 - (d[0] - c[0]) * u.curveness]), h.setLayout(f)
                                }
                                t && t(o)
                            })
                        }, t.forceLayout = p, t.preservedPoints = n, p.step()
                    } else t.forceLayout = null
            })
        },
        Ok = function(t, e) {
            var n = [];
            return t.eachSeriesByType("graph", function(t) {
                var i = t.get("coordinateSystem");
                if (!i || "view" === i) {
                    var a = t.getData(),
                        r = a.mapArray(function(t) { var e = a.getItemModel(t); return [+e.get("x"), +e.get("y")] }),
                        o = [],
                        s = [];
                    Sa(r, o, s), s[0] - o[0] === 0 && (s[0] += 1, o[0] -= 1), s[1] - o[1] === 0 && (s[1] += 1, o[1] -= 1);
                    var l = (s[0] - o[0]) / (s[1] - o[1]),
                        u = Fp(t, e, l);
                    isNaN(l) && (o = [u.x, u.y], s = [u.x + u.width, u.y + u.height]);
                    var h = s[0] - o[0],
                        c = s[1] - o[1],
                        d = u.width,
                        f = u.height,
                        g = t.coordinateSystem = new bf;
                    g.zoomLimit = t.get("scaleLimit"), g.setBoundingRect(o[0], o[1], h, c), g.setViewRect(u.x, u.y, d, f), g.setCenter(t.get("center")), g.setZoom(t.get("zoom")), n.push(g)
                }
            }), n
        };
    cu(Ik), vu(AC("graph", "circle", null)), vu(Mk), vu(Dk), mu(Tk), mu(JD.VISUAL.POST_CHART_LAYOUT, Pk), mu(Nk), gu("graphView", { create: Ok });
    var Ek = ZM.extend({ type: "series.boxplot", dependencies: ["xAxis", "yAxis", "grid"], defaultValueDimensions: [{ name: "min", defaultTooltip: !0 }, { name: "Q1", defaultTooltip: !0 }, { name: "median", defaultTooltip: !0 }, { name: "Q3", defaultTooltip: !0 }, { name: "max", defaultTooltip: !0 }], dimensions: null, defaultOption: { zlevel: 0, z: 2, coordinateSystem: "cartesian2d", legendHoverLink: !0, hoverAnimation: !0, layout: null, boxWidth: [7, 50], itemStyle: { color: "#fff", borderWidth: 1 }, emphasis: { itemStyle: { borderWidth: 2, shadowBlur: 5, shadowOffsetX: 2, shadowOffsetY: 2, shadowColor: "rgba(0,0,0,0.4)" } }, animationEasing: "elasticOut", animationDuration: 800 } });
    c(Ek, KC, !0);
    var zk = ["itemStyle"],
        Rk = ["emphasis", "itemStyle"],
        Bk = (el.extend({
            type: "boxplot",
            render: function(t) {
                var e = t.getData(),
                    n = this.group,
                    i = this._data;
                this._data || n.removeAll();
                var a = "horizontal" === t.get("layout") ? 1 : 0;
                e.diff(i).add(function(t) {
                    if (e.hasValue(t)) {
                        var i = e.getItemLayout(t),
                            r = Wp(i, e, t, a, !0);
                        e.setItemGraphicEl(t, r), n.add(r)
                    }
                }).update(function(t, r) {
                    var o = i.getItemGraphicEl(r);
                    if (!e.hasValue(t)) return void n.remove(o);
                    var s = e.getItemLayout(t);
                    o ? Hp(s, o, e, t) : o = Wp(s, e, t, a), n.add(o), e.setItemGraphicEl(t, o)
                }).remove(function(t) {
                    var e = i.getItemGraphicEl(t);
                    e && n.remove(e)
                }).execute(), this._data = e
            },
            remove: function() {
                var t = this.group,
                    e = this._data;
                this._data = null, e && e.eachItemGraphicEl(function(e) { e && t.remove(e) })
            },
            dispose: G
        }), Wa.extend({
            type: "boxplotBoxPath",
            shape: {},
            buildPath: function(t, e) {
                var n = e.points,
                    i = 0;
                for (t.moveTo(n[i][0], n[i][1]), i++; 4 > i; i++) t.lineTo(n[i][0], n[i][1]);
                for (t.closePath(); i < n.length; i++) t.moveTo(n[i][0], n[i][1]), i++, t.lineTo(n[i][0], n[i][1])
            }
        })),
        Vk = ["itemStyle", "borderColor"],
        Gk = function(t) {
            var e = t.get("color");
            t.eachRawSeriesByType("boxplot", function(n) {
                var i = e[n.seriesIndex % e.length],
                    a = n.getData();
                a.setVisual({ legendSymbol: "roundRect", color: n.get(Vk) || i }), t.isSeriesFiltered(n) || a.each(function(t) {
                    var e = a.getItemModel(t);
                    a.setItemVisual(t, { color: e.get(Vk, !0) })
                })
            })
        },
        Fk = f,
        Wk = function(t) {
            var e = Yp(t);
            Fk(e, function(t) {
                var e = t.seriesModels;
                e.length && (Up(t), Fk(e, function(e, n) { jp(e, t.boxOffsetList[n], t.boxWidthList[n]) }))
            })
        };
    vu(Gk), mu(Wk);
    var Hk = function(t) { Zp(t), qp(t) },
        Xk = function(t, e, n, i, a) { MA.call(this, t, e, n), this.type = i || "value", this.axisIndex = a };
    Xk.prototype = { constructor: Xk, model: null, isHorizontal: function() { return "horizontal" !== this.coordinateSystem.getModel().get("layout") } }, h(Xk, MA);
    var Yk = function(t, e, n, i, a, r) {
            t = t || 0;
            var o = n[1] - n[0];
            if (null != a && (a = $p(a, [0, o])), null != r && (r = Math.max(r, null != a ? a : 0)), "all" === i) {
                var s = Math.abs(e[1] - e[0]);
                s = $p(s, [0, o]), a = r = $p(s, [a, r]), i = 0
            }
            e[0] = $p(e[0], n), e[1] = $p(e[1], n);
            var l = Kp(e, i);
            e[i] += t;
            var u = a || 0,
                h = n.slice();
            l.sign < 0 ? h[0] += u : h[1] -= u, e[i] = $p(e[i], h);
            var c = Kp(e, i);
            null != a && (c.sign !== l.sign || c.span < a) && (e[1 - i] = e[i] + l.sign * a);
            var c = Kp(e, i);
            return null != r && c.span > r && (e[1 - i] = e[i] + c.sign * r), e
        },
        Uk = f,
        jk = Math.min,
        Zk = Math.max,
        qk = Math.floor,
        Kk = Math.ceil,
        $k = uo,
        Jk = Math.PI;
    Jp.prototype = {
        type: "parallel",
        constructor: Jp,
        _init: function(t, e) {
            var n = t.dimensions,
                i = t.parallelAxisIndex;
            Uk(n, function(t, n) {
                var a = i[n],
                    r = e.getComponent("parallelAxis", a),
                    o = this._axesMap.set(t, new Xk(t, Th(r), [0, 0], r.get("type"), a)),
                    s = "category" === o.type;
                o.onBand = s && r.get("boundaryGap"), o.inverse = r.get("inverse"), r.axis = o, o.model = r, o.coordinateSystem = r.coordinateSystem = this
            }, this)
        },
        update: function(t) { this._updateAxesFromSeries(this._model, t) },
        containPoint: function(t) {
            var e = this._makeLayoutInfo(),
                n = e.axisBase,
                i = e.layoutBase,
                a = e.pixelDimIndex,
                r = t[1 - a],
                o = t[a];
            return r >= n && r <= n + e.axisLength && o >= i && o <= i + e.layoutLength
        },
        getModel: function() { return this._model },
        _updateAxesFromSeries: function(t, e) {
            e.eachSeries(function(n) {
                if (t.contains(n, e)) {
                    var i = n.getData();
                    Uk(this.dimensions, function(t) {
                        var e = this._axesMap.get(t);
                        e.scale.unionExtentFromData(i, i.mapDimension(t)), Dh(e.scale, e.model)
                    }, this)
                }
            }, this)
        },
        resize: function(t, e) { this._rect = Bo(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() }), this._layoutAxes() },
        getRect: function() { return this._rect },
        _makeLayoutInfo: function() {
            var t, e = this._model,
                n = this._rect,
                i = ["x", "y"],
                a = ["width", "height"],
                r = e.get("layout"),
                o = "horizontal" === r ? 0 : 1,
                s = n[a[o]],
                l = [0, s],
                u = this.dimensions.length,
                h = Qp(e.get("axisExpandWidth"), l),
                c = Qp(e.get("axisExpandCount") || 0, [0, u]),
                d = e.get("axisExpandable") && u > 3 && u > c && c > 1 && h > 0 && s > 0,
                f = e.get("axisExpandWindow");
            if (f) t = Qp(f[1] - f[0], l), f[1] = f[0] + t;
            else {
                t = Qp(h * (c - 1), l);
                var g = e.get("axisExpandCenter") || qk(u / 2);
                f = [h * g - t / 2], f[1] = f[0] + t
            }
            var p = (s - t) / (u - c);
            3 > p && (p = 0);
            var m = [qk($k(f[0] / h, 1)) + 1, Kk($k(f[1] / h, 1)) - 1],
                v = p / h * f[0];
            return { layout: r, pixelDimIndex: o, layoutBase: n[i[o]], layoutLength: s, axisBase: n[i[1 - o]], axisLength: n[a[1 - o]], axisExpandable: d, axisExpandWidth: h, axisCollapseWidth: p, axisExpandWindow: f, axisCount: u, winInnerIndices: m, axisExpandWindow0Pos: v }
        },
        _layoutAxes: function() {
            var t = this._rect,
                e = this._axesMap,
                n = this.dimensions,
                i = this._makeLayoutInfo(),
                a = i.layout;
            e.each(function(t) {
                var e = [0, i.axisLength],
                    n = t.inverse ? 1 : 0;
                t.setExtent(e[n], e[1 - n])
            }), Uk(n, function(e, n) {
                var r = (i.axisExpandable ? em : tm)(n, i),
                    o = { horizontal: { x: r.position, y: i.axisLength }, vertical: { x: 0, y: r.position } },
                    s = { horizontal: Jk / 2, vertical: 0 },
                    l = [o[a].x + t.x, o[a].y + t.y],
                    u = s[a],
                    h = Ae();
                Ne(h, h, u), ke(h, h, l), this._axesLayout[e] = { position: l, rotation: u, transform: h, axisNameAvailableWidth: r.axisNameAvailableWidth, axisLabelShow: r.axisLabelShow, nameTruncateMaxWidth: r.nameTruncateMaxWidth, tickDirection: 1, labelDirection: 1 }
            }, this)
        },
        getAxis: function(t) { return this._axesMap.get(t) },
        dataToPoint: function(t, e) { return this.axisCoordToPoint(this._axesMap.get(e).dataToCoord(t), e) },
        eachActiveState: function(t, e, n, i) {
            null == n && (n = 0), null == i && (i = t.count());
            var a = this._axesMap,
                r = this.dimensions,
                o = [],
                s = [];
            f(r, function(e) { o.push(t.mapDimension(e)), s.push(a.get(e).model) });
            for (var l = this.hasAxisBrushed(), u = n; i > u; u++) {
                var h;
                if (l) { h = "active"; for (var c = t.getValues(o, u), d = 0, g = r.length; g > d; d++) { var p = s[d].getActiveState(c[d]); if ("inactive" === p) { h = "inactive"; break } } } else h = "normal";
                e(h, u)
            }
        },
        hasAxisBrushed: function() { for (var t = this.dimensions, e = this._axesMap, n = !1, i = 0, a = t.length; a > i; i++) "normal" !== e.get(t[i]).model.getActiveState() && (n = !0); return n },
        axisCoordToPoint: function(t, e) { var n = this._axesLayout[e]; return Xr([t, 0], n.transform) },
        getAxisLayout: function(t) { return i(this._axesLayout[t]) },
        getSlidedAxisExpandWindow: function(t) {
            var e = this._makeLayoutInfo(),
                n = e.pixelDimIndex,
                i = e.axisExpandWindow.slice(),
                a = i[1] - i[0],
                r = [0, e.axisExpandWidth * (e.axisCount - 1)];
            if (!this.containPoint(t)) return { behavior: "none", axisExpandWindow: i };
            var o, s = t[n] - e.layoutBase - e.axisExpandWindow0Pos,
                l = "slide",
                u = e.axisCollapseWidth,
                h = this._model.get("axisExpandSlideTriggerArea"),
                c = null != h[0];
            if (u) c && u && s < a * h[0] ? (l = "jump", o = s - a * h[2]) : c && u && s > a * (1 - h[0]) ? (l = "jump", o = s - a * (1 - h[2])) : (o = s - a * h[1]) >= 0 && (o = s - a * (1 - h[1])) <= 0 && (o = 0), o *= e.axisExpandWidth / u, o ? Yk(o, i, r, "all") : l = "none";
            else {
                var a = i[1] - i[0],
                    d = r[1] * s / a;
                i = [Zk(0, d - a / 2)], i[1] = jk(r[1], i[0] + a), i[0] = i[1] - a
            }
            return { axisExpandWindow: i, behavior: l }
        }
    }, ps.register("parallel", { create: nm });
    var Qk = sM.extend({
            type: "baseParallelAxis",
            axis: null,
            activeIntervals: [],
            getAreaSelectStyle: function() {
                return Ub([
                    ["fill", "color"],
                    ["lineWidth", "borderWidth"],
                    ["stroke", "borderColor"],
                    ["width", "width"],
                    ["opacity", "opacity"]
                ])(this.getModel("areaSelectStyle"))
            },
            setActiveIntervals: function(t) {
                var e = this.activeIntervals = i(t);
                if (e)
                    for (var n = e.length - 1; n >= 0; n--) ho(e[n])
            },
            getActiveState: function(t) {
                var e = this.activeIntervals;
                if (!e.length) return "normal";
                if (null == t || isNaN(t)) return "inactive";
                if (1 === e.length) { var n = e[0]; if (n[0] <= t && t <= n[1]) return "active" } else
                    for (var i = 0, a = e.length; a > i; i++)
                        if (e[i][0] <= t && t <= e[i][1]) return "active"; return "inactive"
            }
        }),
        tN = { type: "value", dim: null, areaSelectStyle: { width: 20, borderWidth: 1, borderColor: "rgba(160,197,232)", color: "rgba(160,197,232)", opacity: .3 }, realtime: !0, z: 10 };
    a(Qk.prototype, hA), OA("parallel", Qk, im, tN), sM.extend({
        type: "parallel",
        dependencies: ["parallelAxis"],
        coordinateSystem: null,
        dimensions: null,
        parallelAxisIndex: null,
        layoutMode: "box",
        defaultOption: { zlevel: 0, z: 0, left: 80, top: 60, right: 80, bottom: 60, layout: "horizontal", axisExpandable: !1, axisExpandCenter: null, axisExpandCount: 0, axisExpandWidth: 50, axisExpandRate: 17, axisExpandDebounce: 50, axisExpandSlideTriggerArea: [-.15, .05, .4], axisExpandTriggerOn: "click", parallelAxisDefault: null },
        init: function() { sM.prototype.init.apply(this, arguments), this.mergeOption({}) },
        mergeOption: function(t) {
            var e = this.option;
            t && a(e, t, !0), this._initDimensions()
        },
        contains: function(t, e) { var n = t.get("parallelIndex"); return null != n && e.getComponent("parallel", n) === this },
        setAxisExpand: function(t) { f(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(e) { t.hasOwnProperty(e) && (this.option[e] = t[e]) }, this) },
        _initDimensions: function() {
            var t = this.dimensions = [],
                e = this.parallelAxisIndex = [],
                n = m(this.dependentModels.parallelAxis, function(t) { return (t.get("parallelIndex") || 0) === this.componentIndex }, this);
            f(n, function(n) { t.push("dim" + n.get("dim")), e.push(n.componentIndex) })
        }
    });
    var eN = { type: "axisAreaSelect", event: "axisAreaSelected" };
    fu(eN, function(t, e) { e.eachComponent({ mainType: "parallelAxis", query: t }, function(e) { e.axis.model.setActiveIntervals(t.intervals) }) }), fu("parallelAxisExpand", function(t, e) { e.eachComponent({ mainType: "parallel", query: t }, function(e) { e.setAxisExpand(t) }) });
    var nN = x,
        iN = f,
        aN = g,
        rN = Math.min,
        oN = Math.max,
        sN = Math.pow,
        lN = 1e4,
        uN = 6,
        hN = 6,
        cN = "globalPan",
        dN = { w: [0, 0], e: [0, 1], n: [1, 0], s: [1, 1] },
        fN = { w: "ew", e: "ew", n: "ns", s: "ns", ne: "nesw", sw: "nesw", nw: "nwse", se: "nwse" },
        gN = { brushStyle: { lineWidth: 2, stroke: "rgba(0,0,0,0.3)", fill: "rgba(0,0,0,0.1)" }, transformable: !0, brushMode: "single", removeOnClick: !1 },
        pN = 0;
    am.prototype = {
        constructor: am,
        enableBrush: function(t) { return this._brushType && om(this), t.brushType && rm(this, t), this },
        setPanels: function(t) {
            if (t && t.length) {
                var e = this._panels = {};
                f(t, function(t) { e[t.panelId] = i(t) })
            } else this._panels = null;
            return this
        },
        mount: function(t) { t = t || {}, this._enableGlobalPan = t.enableGlobalPan; var e = this.group; return this._zr.add(e), e.attr({ position: t.position || [0, 0], rotation: t.rotation || 0, scale: t.scale || [1, 1] }), this._transform = e.getLocalTransform(), this },
        eachCover: function(t, e) { iN(this._covers, t, e) },
        updateCovers: function(t) {
            function e(t, e) { return (null != t.id ? t.id : s + e) + "-" + t.brushType }

            function n(t, n) { return e(t.__brushOption, n) }

            function r(e, n) {
                var i = t[e];
                if (null != n && l[n] === c) u[e] = l[n];
                else {
                    var a = u[e] = null != n ? (l[n].__brushOption = i, l[n]) : lm(h, sm(h, i));
                    cm(h, a)
                }
            }

            function o(t) { l[t] !== c && h.group.remove(l[t]) }
            t = g(t, function(t) { return a(i(gN), t, !0) });
            var s = "\x00-brush-index-",
                l = this._covers,
                u = this._covers = [],
                h = this,
                c = this._creatingCover;
            return new Au(l, t, n, e).add(r).update(r).remove(o).execute(), this
        },
        unmount: function() { return this.enableBrush(!1), pm(this), this._zr.remove(this.group), this },
        dispose: function() { this.unmount(), this.off() }
    }, c(am, Z_);
    var mN = {
            mousedown: function(t) {
                if (this._dragging) Rm(this, t);
                else if (!t.target || !t.target.draggable) {
                    Nm(t);
                    var e = this.group.transformCoordToLocal(t.offsetX, t.offsetY);
                    this._creatingCover = null;
                    var n = this._creatingPanel = fm(this, t, e);
                    n && (this._dragging = !0, this._track = [e.slice()])
                }
            },
            mousemove: function(t) {
                var e = this._lastMouseMovePoint;
                e.x = t.offsetX, e.y = t.offsetY;
                var n = this.group.transformCoordToLocal(e.x, e.y);
                if (km(this, t, n), this._dragging) {
                    Nm(t);
                    var i = Em(this, t, n, !1);
                    i && mm(this, i)
                }
            },
            mouseup: function(t) { Rm(this, t) },
            globalout: function(t) { Rm(this, t, !0) }
        },
        vN = { lineX: Bm(0), lineY: Bm(1), rect: { createCover: function(t, e) { return xm(nN(Tm, function(t) { return t }, function(t) { return t }), t, e, ["w", "e", "n", "s", "se", "sw", "ne", "nw"]) }, getCreatingRange: function(t) { var e = ym(t); return Im(e[1][0], e[1][1], e[0][0], e[0][1]) }, updateCoverShape: function(t, e, n, i) { _m(t, e, n, i) }, updateCommon: wm, contain: Om }, polygon: { createCover: function(t, e) { var n = new Vw; return n.add(new lI({ name: "main", style: Sm(e), silent: !0 })), n }, getCreatingRange: function(t) { return t }, endCreating: function(t, e) { e.remove(e.childAt(0)), e.add(new sI({ name: "main", draggable: !0, drift: nN(Am, t, e), ondragend: nN(mm, t, { isEnd: !0 }) })) }, updateCoverShape: function(t, e, n) { e.childAt(0).setShape({ points: Lm(t, e, n) }) }, updateCommon: wm, contain: Om } },
        yN = ["axisLine", "axisTickLabel", "axisName"],
        xN = wu({
            type: "parallelAxis",
            init: function(t, e) { xN.superApply(this, "init", arguments), (this._brushController = new am(e.getZr())).on("brush", y(this._onBrush, this)) },
            render: function(t, e, n, i) {
                if (!Hm(t, e, i)) {
                    this.axisModel = t, this.api = n, this.group.removeAll();
                    var a = this._axisGroup;
                    if (this._axisGroup = new Vw, this.group.add(this._axisGroup), t.get("show")) {
                        var r = Ym(t, e),
                            s = r.coordinateSystem,
                            l = t.getAreaSelectStyle(),
                            u = l.width,
                            h = t.axis.dim,
                            c = s.getAxisLayout(h),
                            d = o({ strokeContainThreshold: u }, c),
                            g = new QA(t, d);
                        f(yN, g.add, g), this._axisGroup.add(g.getGroup()), this._refreshBrushController(d, l, t, r, u, n);
                        var p = i && i.animation === !1 ? null : t;
                        Ur(a, this._axisGroup, p)
                    }
                }
            },
            _refreshBrushController: function(t, e, n, i, a, r) {
                var o = n.axis.getExtent(),
                    s = o[1] - o[0],
                    l = Math.min(30, .1 * Math.abs(s)),
                    u = bn.create({ x: o[0], y: -a / 2, width: s, height: a });
                u.x -= l, u.width += 2 * l, this._brushController.mount({ enableGlobalPan: !0, rotation: t.rotation, position: t.position }).setPanels([{ panelId: "pl", clipPath: Vm(u), isTargetByCursor: Fm(u, r, i), getLinearBrushOtherExtent: Gm(u, 0) }]).enableBrush({ brushType: "lineX", brushStyle: e, removeOnClick: !0 }).updateCovers(Xm(n))
            },
            _onBrush: function(t, e) {
                var n = this.axisModel,
                    i = n.axis,
                    a = g(t, function(t) { return [i.coordToData(t.range[0], !0), i.coordToData(t.range[1], !0)] });
                (!n.option.realtime === e.isEnd || e.removeOnClick) && this.api.dispatchAction({ type: "axisAreaSelect", parallelAxisId: n.id, intervals: a })
            },
            dispose: function() { this._brushController.dispose() }
        }),
        _N = 5;
    wu({ type: "parallel", render: function(t, e, n) { this._model = t, this._api = n, this._handlers || (this._handlers = {}, f(wN, function(t, e) { n.getZr().on(e, this._handlers[e] = y(t, this)) }, this)), sl(this, "_throttledDispatchExpand", t.get("axisExpandRate"), "fixRate") }, dispose: function(t, e) { f(this._handlers, function(t, n) { e.getZr().off(n, t) }), this._handlers = null }, _throttledDispatchExpand: function(t) { this._dispatchExpand(t) }, _dispatchExpand: function(t) { t && this._api.dispatchAction(o({ type: "parallelAxisExpand" }, t)) } });
    var wN = {
        mousedown: function(t) { Um(this, "click") && (this._mouseDownPoint = [t.offsetX, t.offsetY]) },
        mouseup: function(t) {
            var e = this._mouseDownPoint;
            if (Um(this, "click") && e) {
                var n = [t.offsetX, t.offsetY],
                    i = Math.pow(e[0] - n[0], 2) + Math.pow(e[1] - n[1], 2);
                if (i > _N) return;
                var a = this._model.coordinateSystem.getSlidedAxisExpandWindow([t.offsetX, t.offsetY]);
                "none" !== a.behavior && this._dispatchExpand({ axisExpandWindow: a.axisExpandWindow })
            }
            this._mouseDownPoint = null
        },
        mousemove: function(t) {
            if (!this._mouseDownPoint && Um(this, "mousemove")) {
                var e = this._model,
                    n = e.coordinateSystem.getSlidedAxisExpandWindow([t.offsetX, t.offsetY]),
                    i = n.behavior;
                "jump" === i && this._throttledDispatchExpand.debounceNextCall(e.get("axisExpandDebounce")), this._throttledDispatchExpand("none" === i ? null : { axisExpandWindow: n.axisExpandWindow, animation: "jump" === i ? null : !1 })
            }
        }
    };
    hu(Hk), ZM.extend({
        type: "series.parallel",
        dependencies: ["parallel"],
        visualColorAccessPath: "lineStyle.color",
        getInitialData: function() { var t = this.getSource(); return jm(t, this), Qu(t, this) },
        getRawIndicesByActiveState: function(t) {
            var e = this.coordinateSystem,
                n = this.getData(),
                i = [];
            return e.eachActiveState(n, function(e, a) {
                t === e && i.push(n.getRawIndex(a))
            }), i
        },
        defaultOption: { zlevel: 0, z: 2, coordinateSystem: "parallel", parallelIndex: 0, label: { show: !1 }, inactiveOpacity: .05, activeOpacity: 1, lineStyle: { width: 1, opacity: .45, type: "solid" }, emphasis: { label: { show: !1 } }, progressive: 500, smooth: !1, animationEasing: "linear" }
    });
    var bN = .3,
        SN = (el.extend({
            type: "parallel",
            init: function() { this._dataGroup = new Vw, this.group.add(this._dataGroup), this._data, this._initialized },
            render: function(t, e, n, i) {
                function a(t) {
                    var e = $m(l, s, t, c, h);
                    Qm(e, l, t, d)
                }

                function r(e, n) {
                    var a = u.getItemGraphicEl(n),
                        r = Km(l, e, c, h);
                    l.setItemGraphicEl(e, a);
                    var o = i && i.animation === !1 ? null : t;
                    Fr(a, { shape: { points: r } }, o, e), Qm(a, l, e, d)
                }

                function o(t) {
                    var e = u.getItemGraphicEl(t);
                    s.remove(e)
                }
                var s = this._dataGroup,
                    l = t.getData(),
                    u = this._data,
                    h = t.coordinateSystem,
                    c = h.dimensions,
                    d = Jm(t);
                if (l.diff(u).add(a).update(r).remove(o).execute(), !this._initialized) {
                    this._initialized = !0;
                    var f = qm(h, t, function() { setTimeout(function() { s.removeClipPath() }) });
                    s.setClipPath(f)
                }
                this._data = l
            },
            incrementalPrepareRender: function() { this._initialized = !0, this._data = null, this._dataGroup.removeAll() },
            incrementalRender: function(t, e) {
                for (var n = e.getData(), i = e.coordinateSystem, a = i.dimensions, r = Jm(e), o = t.start; o < t.end; o++) {
                    var s = $m(n, this._dataGroup, o, a, i);
                    s.incremental = !0, Qm(s, n, o, r)
                }
            },
            dispose: function() {},
            remove: function() { this._dataGroup && this._dataGroup.removeAll(), this._data = null }
        }), ["lineStyle", "normal", "opacity"]),
        IN = {
            seriesType: "parallel",
            reset: function(t, e) {
                function n(t, e) {
                    h.eachActiveState(e, function(t, n) {
                        var i = d[t];
                        if ("normal" === t && e.hasItemOption) {
                            var a = e.getItemModel(n).get(SN, !0);
                            null != a && (i = a)
                        }
                        e.setItemVisual(n, "opacity", i)
                    }, t.start, t.end)
                }
                var i = t.getModel("itemStyle"),
                    a = t.getModel("lineStyle"),
                    r = e.get("color"),
                    o = a.get("color") || i.get("color") || r[t.seriesIndex % r.length],
                    s = t.get("inactiveOpacity"),
                    l = t.get("activeOpacity"),
                    u = t.getModel("lineStyle").getLineStyle(),
                    h = t.coordinateSystem,
                    c = t.getData(),
                    d = { normal: u.opacity, active: l, inactive: s };
                return c.setVisual("color", o), { progress: n }
            }
        };
    vu(IN);
    var MN = (ZM.extend({
            type: "series.gauge",
            getInitialData: function() { return NC(this, ["value"]) },
            defaultOption: {
                zlevel: 0,
                z: 2,
                center: ["50%", "50%"],
                legendHoverLink: !0,
                radius: "75%",
                startAngle: 225,
                endAngle: -45,
                clockwise: !0,
                min: 0,
                max: 100,
                splitNumber: 10,
                axisLine: {
                    show: !0,
                    lineStyle: {
                        color: [
                            [.2, "#91c7ae"],
                            [.8, "#63869e"],
                            [1, "#c23531"]
                        ],
                        width: 30
                    }
                },
                splitLine: { show: !0, length: 30, lineStyle: { color: "#eee", width: 2, type: "solid" } },
                axisTick: { show: !0, splitNumber: 5, length: 8, lineStyle: { color: "#eee", width: 1, type: "solid" } },
                axisLabel: { show: !0, distance: 5, color: "auto" },
                pointer: { show: !0, length: "80%", width: 8 },
                itemStyle: { color: "auto" },
                title: { show: !0, offsetCenter: [0, "-40%"], color: "#333", fontSize: 15 },
                detail: { show: !0, backgroundColor: "rgba(0,0,0,0)", borderWidth: 0, borderColor: "#ccc", width: 100, height: null, padding: [5, 10], offsetCenter: [0, "40%"], color: "auto", fontSize: 30 }
            }
        }), Wa.extend({
            type: "echartsGaugePointer",
            shape: { angle: 0, width: 10, r: 10, x: 0, y: 0 },
            buildPath: function(t, e) {
                var n = Math.cos,
                    i = Math.sin,
                    a = e.r,
                    r = e.width,
                    o = e.angle,
                    s = e.x - n(o) * r * (r >= a / 3 ? 1 : 2),
                    l = e.y - i(o) * r * (r >= a / 3 ? 1 : 2);
                o = e.angle - Math.PI / 2, t.moveTo(s, l), t.lineTo(e.x + n(o) * r, e.y + i(o) * r), t.lineTo(e.x + n(e.angle) * a, e.y + i(e.angle) * a), t.lineTo(e.x - n(o) * r, e.y - i(o) * r), t.lineTo(s, l)
            }
        })),
        DN = 2 * Math.PI,
        TN = (el.extend({
            type: "gauge",
            render: function(t, e, n) {
                this.group.removeAll();
                var i = t.get("axisLine.lineStyle.color"),
                    a = ev(t, n);
                this._renderMain(t, e, n, i, a)
            },
            dispose: function() {},
            _renderMain: function(t, e, n, i, a) {
                for (var r = this.group, o = t.getModel("axisLine"), s = o.getModel("lineStyle"), l = t.get("clockwise"), u = -t.get("startAngle") / 180 * Math.PI, h = -t.get("endAngle") / 180 * Math.PI, c = (h - u) % DN, d = u, f = s.get("width"), g = o.get("show"), p = 0; g && p < i.length; p++) {
                    var m = Math.min(Math.max(i[p][0], 0), 1),
                        h = u + c * m,
                        v = new iI({ shape: { startAngle: d, endAngle: h, cx: a.cx, cy: a.cy, clockwise: l, r0: a.r - f, r: a.r }, silent: !0 });
                    v.setStyle({ fill: i[p][1] }), v.setStyle(s.getLineStyle(["color", "borderWidth", "borderColor"])), r.add(v), d = h
                }
                var y = function(t) {
                    if (0 >= t) return i[0][1];
                    for (var e = 0; e < i.length; e++)
                        if (i[e][0] >= t && (0 === e ? 0 : i[e - 1][0]) < t) return i[e][1];
                    return i[e - 1][1]
                };
                if (!l) {
                    var x = u;
                    u = h, h = x
                }
                this._renderTicks(t, e, n, y, a, u, h, l), this._renderPointer(t, e, n, y, a, u, h, l), this._renderTitle(t, e, n, y, a), this._renderDetail(t, e, n, y, a)
            },
            _renderTicks: function(t, e, n, i, a, r, o) {
                for (var s = this.group, l = a.cx, u = a.cy, h = a.r, c = +t.get("min"), d = +t.get("max"), f = t.getModel("splitLine"), g = t.getModel("axisTick"), p = t.getModel("axisLabel"), m = t.get("splitNumber"), v = g.get("splitNumber"), y = lo(f.get("length"), h), x = lo(g.get("length"), h), _ = r, w = (o - r) / m, b = w / v, S = f.getModel("lineStyle").getLineStyle(), I = g.getModel("lineStyle").getLineStyle(), M = 0; m >= M; M++) {
                    var D = Math.cos(_),
                        T = Math.sin(_);
                    if (f.get("show")) { var A = new fI({ shape: { x1: D * h + l, y1: T * h + u, x2: D * (h - y) + l, y2: T * (h - y) + u }, style: S, silent: !0 }); "auto" === S.stroke && A.setStyle({ stroke: i(M / m) }), s.add(A) }
                    if (p.get("show")) {
                        var C = nv(uo(M / m * (d - c) + c), p.get("formatter")),
                            L = p.get("distance"),
                            P = i(M / m);
                        s.add(new QS({ style: Pr({}, p, { text: C, x: D * (h - y - L) + l, y: T * (h - y - L) + u, textVerticalAlign: -.4 > T ? "top" : T > .4 ? "bottom" : "middle", textAlign: -.4 > D ? "left" : D > .4 ? "right" : "center" }, { autoColor: P }), silent: !0 }))
                    }
                    if (g.get("show") && M !== m) {
                        for (var k = 0; v >= k; k++) {
                            var D = Math.cos(_),
                                T = Math.sin(_),
                                N = new fI({ shape: { x1: D * h + l, y1: T * h + u, x2: D * (h - x) + l, y2: T * (h - x) + u }, silent: !0, style: I });
                            "auto" === I.stroke && N.setStyle({ stroke: i((M + k / v) / m) }), s.add(N), _ += b
                        }
                        _ -= b
                    } else _ += w
                }
            },
            _renderPointer: function(t, e, n, i, a, r, o) {
                var s = this.group,
                    l = this._data;
                if (!t.get("pointer.show")) return void(l && l.eachItemGraphicEl(function(t) { s.remove(t) }));
                var u = [+t.get("min"), +t.get("max")],
                    h = [r, o],
                    c = t.getData(),
                    d = c.mapDimension("value");
                c.diff(l).add(function(e) {
                    var n = new MN({ shape: { angle: r } });
                    Wr(n, { shape: { angle: so(c.get(d, e), u, h, !0) } }, t), s.add(n), c.setItemGraphicEl(e, n)
                }).update(function(e, n) {
                    var i = l.getItemGraphicEl(n);
                    Fr(i, { shape: { angle: so(c.get(d, e), u, h, !0) } }, t), s.add(i), c.setItemGraphicEl(e, i)
                }).remove(function(t) {
                    var e = l.getItemGraphicEl(t);
                    s.remove(e)
                }).execute(), c.eachItemGraphicEl(function(t, e) {
                    var n = c.getItemModel(e),
                        r = n.getModel("pointer");
                    t.setShape({ x: a.cx, y: a.cy, width: lo(r.get("width"), a.r), r: lo(r.get("length"), a.r) }), t.useStyle(n.getModel("itemStyle").getItemStyle()), "auto" === t.style.fill && t.setStyle("fill", i(so(c.get(d, e), u, [0, 1], !0))), Mr(t, n.getModel("emphasis.itemStyle").getItemStyle())
                }), this._data = c
            },
            _renderTitle: function(t, e, n, i, a) {
                var r = t.getData(),
                    o = r.mapDimension("value"),
                    s = t.getModel("title");
                if (s.get("show")) {
                    var l = s.get("offsetCenter"),
                        u = a.cx + lo(l[0], a.r),
                        h = a.cy + lo(l[1], a.r),
                        c = +t.get("min"),
                        d = +t.get("max"),
                        f = t.getData().get(o, 0),
                        g = i(so(f, [c, d], [0, 1], !0));
                    this.group.add(new QS({ silent: !0, style: Pr({}, s, { x: u, y: h, text: r.getName(0), textAlign: "center", textVerticalAlign: "middle" }, { autoColor: g, forceRich: !0 }) }))
                }
            },
            _renderDetail: function(t, e, n, i, a) {
                var r = t.getModel("detail"),
                    o = +t.get("min"),
                    s = +t.get("max");
                if (r.get("show")) {
                    var l = r.get("offsetCenter"),
                        u = a.cx + lo(l[0], a.r),
                        h = a.cy + lo(l[1], a.r),
                        c = lo(r.get("width"), a.r),
                        d = lo(r.get("height"), a.r),
                        f = t.getData(),
                        g = f.get(f.mapDimension("value"), 0),
                        p = i(so(g, [o, s], [0, 1], !0));
                    this.group.add(new QS({ silent: !0, style: Pr({}, r, { x: u, y: h, text: nv(g, r.get("formatter")), textWidth: isNaN(c) ? null : c, textHeight: isNaN(d) ? null : d, textAlign: "center", textVerticalAlign: "middle" }, { autoColor: p, forceRich: !0 }) }))
                }
            }
        }), bu({
            type: "series.funnel",
            init: function(t) { TN.superApply(this, "init", arguments), this.legendDataProvider = function() { return this.getRawData() }, this._defaultLabelLine(t) },
            getInitialData: function() { return NC(this, ["value"]) },
            _defaultLabelLine: function(t) {
                Fi(t, "labelLine", ["show"]);
                var e = t.labelLine,
                    n = t.emphasis.labelLine;
                e.show = e.show && t.label.show, n.show = n.show && t.emphasis.label.show
            },
            getDataParams: function(t) {
                var e = this.getData(),
                    n = TN.superCall(this, "getDataParams", t),
                    i = e.mapDimension("value"),
                    a = e.getSum(i);
                return n.percent = a ? +(e.get(i, t) / a * 100).toFixed(2) : 0, n.$vars.push("percent"), n
            },
            defaultOption: { zlevel: 0, z: 2, legendHoverLink: !0, left: 80, top: 60, right: 80, bottom: 60, minSize: "0%", maxSize: "100%", sort: "descending", gap: 0, funnelAlign: "center", label: { show: !0, position: "outer" }, labelLine: { show: !0, length: 20, lineStyle: { width: 1, type: "solid" } }, itemStyle: { borderColor: "#fff", borderWidth: 1 }, emphasis: { label: { show: !0 } } }
        })),
        AN = iv.prototype,
        CN = ["itemStyle", "opacity"];
    AN.updateData = function(t, e, n) {
        var i = this.childAt(0),
            a = t.hostModel,
            r = t.getItemModel(e),
            o = t.getItemLayout(e),
            l = t.getItemModel(e).get(CN);
        l = null == l ? 1 : l, i.useStyle({}), n ? (i.setShape({ points: o.points }), i.setStyle({ opacity: 0 }), Wr(i, { style: { opacity: l } }, a, e)) : Fr(i, { style: { opacity: l }, shape: { points: o.points } }, a, e);
        var u = r.getModel("itemStyle"),
            h = t.getItemVisual(e, "color");
        i.setStyle(s({ lineJoin: "round", fill: h }, u.getItemStyle(["opacity"]))), i.hoverStyle = u.getModel("emphasis").getItemStyle(), this._updateLabel(t, e), Mr(this)
    }, AN._updateLabel = function(t, e) {
        var n = this.childAt(1),
            i = this.childAt(2),
            a = t.hostModel,
            r = t.getItemModel(e),
            o = t.getItemLayout(e),
            s = o.label,
            l = t.getItemVisual(e, "color");
        Fr(n, { shape: { points: s.linePoints || s.linePoints } }, a, e), Fr(i, { style: { x: s.x, y: s.y } }, a, e), i.attr({ rotation: s.rotation, origin: [s.x, s.y], z2: 10 });
        var u = r.getModel("label"),
            h = r.getModel("emphasis.label"),
            c = r.getModel("labelLine"),
            d = r.getModel("emphasis.labelLine"),
            l = t.getItemVisual(e, "color");
        Cr(i.style, i.hoverStyle = {}, u, h, { labelFetcher: t.hostModel, labelDataIndex: e, defaultText: t.getName(e), autoColor: l, useInsideStyle: !!s.inside }, { textAlign: s.textAlign, textVerticalAlign: s.verticalAlign }), i.ignore = i.normalIgnore = !u.get("show"), i.hoverIgnore = !h.get("show"), n.ignore = n.normalIgnore = !c.get("show"), n.hoverIgnore = !d.get("show"), n.setStyle({ stroke: l }), n.setStyle(c.getModel("lineStyle").getLineStyle()), n.hoverStyle = d.getModel("lineStyle").getLineStyle()
    }, h(iv, Vw);
    var LN = (el.extend({
        type: "funnel",
        render: function(t) {
            var e = t.getData(),
                n = this._data,
                i = this.group;
            e.diff(n).add(function(t) {
                var n = new iv(e, t);
                e.setItemGraphicEl(t, n), i.add(n)
            }).update(function(t, a) {
                var r = n.getItemGraphicEl(a);
                r.updateData(e, t), i.add(r), e.setItemGraphicEl(t, r)
            }).remove(function(t) {
                var e = n.getItemGraphicEl(t);
                i.remove(e)
            }).execute(), this._data = e
        },
        remove: function() { this.group.removeAll(), this._data = null },
        dispose: function() {}
    }), function(t, e) {
        t.eachSeriesByType("funnel", function(t) {
            var n = t.getData(),
                i = n.mapDimension("value"),
                a = t.get("sort"),
                r = av(t, e),
                o = rv(n, a),
                s = [lo(t.get("minSize"), r.width), lo(t.get("maxSize"), r.width)],
                l = n.getDataExtent(i),
                u = t.get("min"),
                h = t.get("max");
            null == u && (u = Math.min(l[0], 0)), null == h && (h = l[1]);
            var c = t.get("funnelAlign"),
                d = t.get("gap"),
                f = (r.height - d * (n.count() - 1)) / n.count(),
                g = r.y,
                p = function(t, e) {
                    var a, o = n.get(i, t) || 0,
                        l = so(o, [u, h], s, !0);
                    switch (c) {
                        case "left":
                            a = r.x;
                            break;
                        case "center":
                            a = r.x + (r.width - l) / 2;
                            break;
                        case "right":
                            a = r.x + r.width - l
                    }
                    return [
                        [a, e],
                        [a + l, e]
                    ]
                };
            "ascending" === a && (f = -f, d = -d, g += r.height, o = o.reverse());
            for (var m = 0; m < o.length; m++) {
                var v = o[m],
                    y = o[m + 1],
                    x = n.getItemModel(v),
                    _ = x.get("itemStyle.height");
                null == _ ? _ = f : (_ = lo(_, r.height), "ascending" === a && (_ = -_));
                var w = p(v, g),
                    b = p(y, g + _);
                g += _ + d, n.setItemLayout(v, { points: w.concat(b.slice().reverse()) })
            }
            ov(n)
        })
    });
    vu(BC("funnel")), mu(LN), cu(XC("funnel"));
    var PN = ZM.extend({
            type: "series.sankey",
            layoutInfo: null,
            levelModels: null,
            getInitialData: function(t, e) {
                function n(t, e) {
                    t.wrapMethod("getItemModel", function(t, e) {
                        return t.customizeGetParent(function() {
                            var t = this.parentModel,
                                n = t.getData().getItemLayout(e).depth,
                                i = t.levelModels[n];
                            return i || this.parentModel
                        }), t
                    }), e.wrapMethod("getItemModel", function(t, e) {
                        return t.customizeGetParent(function() {
                            var t = this.parentModel,
                                n = t.getGraph().getEdgeByIndex(e),
                                i = n.node1.getLayout().depth,
                                a = t.levelModels[i];
                            return a || this.parentModel
                        }), t
                    })
                }
                for (var i = t.edges || t.links, a = t.data || t.nodes, r = t.levels, o = this.levelModels = {}, s = 0; s < r.length; s++) null != r[s].depth && r[s].depth >= 0 && (o[r[s].depth] = new to(r[s], this, e));
                if (a && i) { var l = hk(a, i, this, !0, n); return l.data }
            },
            setNodePosition: function(t, e) {
                var n = this.option.data[t];
                n.localX = e[0], n.localY = e[1]
            },
            getGraph: function() { return this.getData().graph },
            getEdgeData: function() { return this.getGraph().edgeData },
            formatTooltip: function(t, e, n) {
                if ("edge" === n) {
                    var i = this.getDataParams(t, n),
                        a = i.data,
                        r = a.source + " -- " + a.target;
                    return i.value && (r += " : " + i.value), To(r)
                }
                if ("node" === n) {
                    var o = this.getGraph().getNodeByIndex(t),
                        s = o.getLayout().value,
                        l = this.getDataParams(t, n).data.name;
                    if (s) var r = l + " : " + s;
                    return To(r)
                }
                return PN.superCall(this, "formatTooltip", t, e)
            },
            optionUpdated: function() {
                var t = this.option;
                t.focusNodeAdjacency === !0 && (t.focusNodeAdjacency = "allEdges")
            },
            defaultOption: { zlevel: 0, z: 2, coordinateSystem: "view", layout: null, left: "5%", top: "5%", right: "20%", bottom: "5%", orient: "horizontal", nodeWidth: 20, nodeGap: 8, draggable: !0, focusNodeAdjacency: !1, layoutIterations: 32, label: { show: !0, position: "right", color: "#000", fontSize: 12 }, levels: [], nodeAlign: "justify", itemStyle: { borderWidth: 1, borderColor: "#333" }, lineStyle: { color: "#314656", opacity: .2, curveness: .5 }, emphasis: { label: { show: !0 }, lineStyle: { opacity: .6 } }, animationEasing: "linear", animationDuration: 1e3 }
        }),
        kN = ["itemStyle", "opacity"],
        NN = ["lineStyle", "opacity"],
        ON = nr({
            shape: { x1: 0, y1: 0, x2: 0, y2: 0, cpx1: 0, cpy1: 0, cpx2: 0, cpy2: 0, extent: 0, orient: "" },
            buildPath: function(t, e) {
                var n = e.extent;
                t.moveTo(e.x1, e.y1), t.bezierCurveTo(e.cpx1, e.cpy1, e.cpx2, e.cpy2, e.x2, e.y2), "vertical" === e.orient ? (t.lineTo(e.x2 + n, e.y2), t.bezierCurveTo(e.cpx2 + n, e.cpy2, e.cpx1 + n, e.cpy1, e.x1 + n, e.y1)) : (t.lineTo(e.x2, e.y2 + n), t.bezierCurveTo(e.cpx2, e.cpy2 + n, e.cpx1, e.cpy1 + n, e.x1, e.y1 + n)), t.closePath()
            }
        });
    Su({
        type: "sankey",
        _model: null,
        _focusAdjacencyDisabled: !1,
        render: function(t, e, n) {
            var i = this,
                a = t.getGraph(),
                r = this.group,
                o = t.layoutInfo,
                s = o.width,
                l = o.height,
                u = t.getData(),
                h = t.getData("edge"),
                c = t.get("orient");
            this._model = t, r.removeAll(), r.attr("position", [o.x, o.y]), a.eachEdge(function(e) {
                var n = new ON;
                n.dataIndex = e.dataIndex, n.seriesIndex = t.seriesIndex, n.dataType = "edge";
                var i, a, o, u, d, f, g, p, m = e.getModel("lineStyle"),
                    v = m.get("curveness"),
                    y = e.node1.getLayout(),
                    x = e.node1.getModel(),
                    _ = x.get("localX"),
                    w = x.get("localY"),
                    b = e.node2.getLayout(),
                    S = e.node2.getModel(),
                    I = S.get("localX"),
                    M = S.get("localY"),
                    D = e.getLayout();
                switch (n.shape.extent = Math.max(1, D.dy), n.shape.orient = c, "vertical" === c ? (i = (null != _ ? _ * s : y.x) + D.sy, a = (null != w ? w * l : y.y) + y.dy, o = (null != I ? I * s : b.x) + D.ty, u = null != M ? M * l : b.y, d = i, f = a * (1 - v) + u * v, g = o, p = a * v + u * (1 - v)) : (i = (null != _ ? _ * s : y.x) + y.dx, a = (null != w ? w * l : y.y) + D.sy, o = null != I ? I * s : b.x, u = (null != M ? M * l : b.y) + D.ty, d = i * (1 - v) + o * v, f = a, g = i * v + o * (1 - v), p = u), n.setShape({ x1: i, y1: a, x2: o, y2: u, cpx1: d, cpy1: f, cpx2: g, cpy2: p }), n.setStyle(m.getItemStyle()), n.style.fill) {
                    case "source":
                        n.style.fill = e.node1.getVisual("color");
                        break;
                    case "target":
                        n.style.fill = e.node2.getVisual("color")
                }
                Mr(n, e.getModel("emphasis.lineStyle").getItemStyle()), r.add(n), h.setItemGraphicEl(e.dataIndex, n)
            }), a.eachNode(function(e) {
                var n = e.getLayout(),
                    i = e.getModel(),
                    a = i.get("localX"),
                    o = i.get("localY"),
                    h = i.getModel("label"),
                    c = i.getModel("emphasis.label"),
                    d = new cI({ shape: { x: null != a ? a * s : n.x, y: null != o ? o * l : n.y, width: n.dx, height: n.dy }, style: i.getModel("itemStyle").getItemStyle() }),
                    f = e.getModel("emphasis.itemStyle").getItemStyle();
                Cr(d.style, f, h, c, { labelFetcher: t, labelDataIndex: e.dataIndex, defaultText: e.id, isRectText: !0 }), d.setStyle("fill", e.getVisual("color")), Mr(d, f), r.add(d), u.setItemGraphicEl(e.dataIndex, d), d.dataType = "node"
            }), u.eachItemGraphicEl(function(e, a) {
                var r = u.getItemModel(a);
                r.get("draggable") && (e.drift = function(e, r) { i._focusAdjacencyDisabled = !0, this.shape.x += e, this.shape.y += r, this.dirty(), n.dispatchAction({ type: "dragNode", seriesId: t.id, dataIndex: u.getRawIndex(a), localX: this.shape.x / s, localY: this.shape.y / l }) }, e.ondragend = function() { i._focusAdjacencyDisabled = !1 }, e.draggable = !0, e.cursor = "move"), r.get("focusNodeAdjacency") && (e.off("mouseover").on("mouseover", function() { i._focusAdjacencyDisabled || n.dispatchAction({ type: "focusNodeAdjacency", seriesId: t.id, dataIndex: e.dataIndex }) }), e.off("mouseout").on("mouseout", function() { i._focusAdjacencyDisabled || n.dispatchAction({ type: "unfocusNodeAdjacency", seriesId: t.id }) }))
            }), h.eachItemGraphicEl(function(e, a) {
                var r = h.getItemModel(a);
                r.get("focusNodeAdjacency") && (e.off("mouseover").on("mouseover", function() { i._focusAdjacencyDisabled || n.dispatchAction({ type: "focusNodeAdjacency", seriesId: t.id, edgeDataIndex: e.dataIndex }) }), e.off("mouseout").on("mouseout", function() { i._focusAdjacencyDisabled || n.dispatchAction({ type: "unfocusNodeAdjacency", seriesId: t.id }) }))
            }), !this._data && t.get("animation") && r.setClipPath(hv(r.getBoundingRect(), t, function() { r.removeClipPath() })), this._data = t.getData()
        },
        dispose: function() {},
        focusNodeAdjacency: function(t, e, n, i) {
            var a = this._model.getData(),
                r = a.graph,
                o = i.dataIndex,
                s = a.getItemModel(o),
                l = i.edgeDataIndex;
            if (null != o || null != l) {
                var u = r.getNodeByIndex(o),
                    h = r.getEdgeByIndex(l);
                if (r.eachNode(function(t) { lv(t, kN, .1) }), r.eachEdge(function(t) { lv(t, NN, .1) }), u) { uv(u, kN); var c = s.get("focusNodeAdjacency"); "outEdges" === c ? f(u.outEdges, function(t) { t.dataIndex < 0 || (uv(t, NN), uv(t.node2, kN)) }) : "inEdges" === c ? f(u.inEdges, function(t) { t.dataIndex < 0 || (uv(t, NN), uv(t.node1, kN)) }) : "allEdges" === c && f(u.edges, function(t) { t.dataIndex < 0 || (uv(t, NN), uv(t.node1, kN), uv(t.node2, kN)) }) }
                h && (uv(h, NN), uv(h.node1, kN), uv(h.node2, kN))
            }
        },
        unfocusNodeAdjacency: function() {
            var t = this._model.getGraph();
            t.eachNode(function(t) { lv(t, kN) }), t.eachEdge(function(t) { lv(t, NN) })
        }
    }), fu({ type: "dragNode", event: "dragnode", update: "update" }, function(t, e) { e.eachComponent({ mainType: "series", subType: "sankey", query: t }, function(e) { e.setNodePosition(t.dataIndex, [t.localX, t.localY]) }) });
    var EN = function(t, e) {
            t.eachSeriesByType("sankey", function(t) {
                var n = t.get("nodeWidth"),
                    i = t.get("nodeGap"),
                    a = cv(t, e);
                t.layoutInfo = a;
                var r = a.width,
                    o = a.height,
                    s = t.getGraph(),
                    l = s.nodes,
                    u = s.edges;
                fv(l);
                var h = m(l, function(t) { return 0 === t.getLayout().value }),
                    c = 0 !== h.length ? 0 : t.get("layoutIterations"),
                    d = t.get("orient"),
                    f = t.get("nodeAlign");
                dv(l, u, n, i, r, o, c, d, f)
            })
        },
        zN = function(t) {
            t.eachSeriesByType("sankey", function(t) {
                var e = t.getGraph(),
                    n = e.nodes;
                if (n.length) {
                    var i = 1 / 0,
                        a = -1 / 0;
                    f(n, function(t) {
                        var e = t.getLayout().value;
                        i > e && (i = e), e > a && (a = e)
                    }), f(n, function(e) {
                        var n = new ZL({ type: "color", mappingMethod: "linear", dataExtent: [i, a], visual: t.get("color") }),
                            r = n.mapValueToVisual(e.getLayout().value),
                            o = e.getModel().get("itemStyle.color");
                        null != o ? e.setVisual("color", o) : e.setVisual("color", r)
                    })
                }
            })
        };
    mu(EN), vu(zN);
    var RN = function(t, e, n, i, a) { MA.call(this, t, e, n), this.type = i || "value", this.position = a || "bottom", this.orient = null };
    RN.prototype = { constructor: RN, model: null, isHorizontal: function() { var t = this.position; return "top" === t || "bottom" === t }, pointToData: function(t, e) { return this.coordinateSystem.pointToData(t, e)[0] }, toGlobalCoord: null, toLocalCoord: null }, h(RN, MA), Pv.prototype = {
        type: "singleAxis",
        axisPointerEnabled: !0,
        constructor: Pv,
        _init: function(t) {
            var e = this.dimension,
                n = new RN(e, Th(t), [0, 0], t.get("type"), t.get("position")),
                i = "category" === n.type;
            n.onBand = i && t.get("boundaryGap"), n.inverse = t.get("inverse"), n.orient = t.get("orient"), t.axis = n, n.model = t, n.coordinateSystem = this, this._axis = n
        },
        update: function(t) {
            t.eachSeries(function(t) {
                if (t.coordinateSystem === this) {
                    var e = t.getData();
                    f(e.mapDimension(this.dimension, !0), function(t) { this._axis.scale.unionExtentFromData(e, t) }, this), Dh(this._axis.scale, this._axis.model)
                }
            }, this)
        },
        resize: function(t, e) { this._rect = Bo({ left: t.get("left"), top: t.get("top"), right: t.get("right"), bottom: t.get("bottom"), width: t.get("width"), height: t.get("height") }, { width: e.getWidth(), height: e.getHeight() }), this._adjustAxis() },
        getRect: function() { return this._rect },
        _adjustAxis: function() {
            var t = this._rect,
                e = this._axis,
                n = e.isHorizontal(),
                i = n ? [0, t.width] : [0, t.height],
                a = e.reverse ? 1 : 0;
            e.setExtent(i[a], i[1 - a]), this._updateAxisTransform(e, n ? t.x : t.y)
        },
        _updateAxisTransform: function(t, e) {
            var n = t.getExtent(),
                i = n[0] + n[1],
                a = t.isHorizontal();
            t.toGlobalCoord = a ? function(t) { return t + e } : function(t) { return i - t + e }, t.toLocalCoord = a ? function(t) { return t - e } : function(t) { return i - t + e }
        },
        getAxis: function() { return this._axis },
        getBaseAxis: function() { return this._axis },
        getAxes: function() { return [this._axis] },
        getTooltipAxes: function() { return { baseAxes: [this.getAxis()] } },
        containPoint: function(t) {
            var e = this.getRect(),
                n = this.getAxis(),
                i = n.orient;
            return "horizontal" === i ? n.contain(n.toLocalCoord(t[0])) && t[1] >= e.y && t[1] <= e.y + e.height : n.contain(n.toLocalCoord(t[1])) && t[0] >= e.y && t[0] <= e.y + e.height
        },
        pointToData: function(t) { var e = this.getAxis(); return [e.coordToData(e.toLocalCoord(t["horizontal" === e.orient ? 0 : 1]))] },
        dataToPoint: function(t) {
            var e = this.getAxis(),
                n = this.getRect(),
                i = [],
                a = "horizontal" === e.orient ? 0 : 1;
            return t instanceof Array && (t = t[0]), i[a] = e.toGlobalCoord(e.dataToCoord(+t)), i[1 - a] = 0 === a ? n.y + n.height / 2 : n.x + n.width / 2, i
        }
    }, ps.register("single", { create: kv, dimensions: Pv.prototype.dimensions });
    var BN = ["axisLine", "axisTickLabel", "axisName"],
        VN = "splitLine",
        GN = oC.extend({
            type: "singleAxis",
            axisPointerClass: "SingleAxisPointer",
            render: function(t, e, n, i) {
                var a = this.group;
                a.removeAll();
                var r = Nv(t),
                    o = new QA(t, r);
                f(BN, o.add, o), a.add(o.getGroup()), t.get(VN + ".show") && this["_" + VN](t), GN.superCall(this, "render", t, e, n, i)
            },
            _splitLine: function(t) {
                var e = t.axis;
                if (!e.scale.isBlank()) {
                    var n = t.getModel("splitLine"),
                        i = n.getModel("lineStyle"),
                        a = i.get("width"),
                        r = i.get("color");
                    r = r instanceof Array ? r : [r];
                    for (var o = t.coordinateSystem.getRect(), s = e.isHorizontal(), l = [], u = 0, h = e.getTicksCoords({ tickModel: n }), c = [], d = [], f = 0; f < h.length; ++f) {
                        var g = e.toGlobalCoord(h[f].coord);
                        s ? (c[0] = g, c[1] = o.y, d[0] = g, d[1] = o.y + o.height) : (c[0] = o.x, c[1] = g, d[0] = o.x + o.width, d[1] = g);
                        var p = u++ % r.length;
                        l[p] = l[p] || [], l[p].push(new fI({ subPixelOptimize: !0, shape: { x1: c[0], y1: c[1], x2: d[0], y2: d[1] }, style: { lineWidth: a }, silent: !0 }))
                    }
                    for (var f = 0; f < l.length; ++f) this.group.add(kI(l[f], { style: { stroke: r[f % r.length], lineDash: i.getLineDash(a), lineWidth: a }, silent: !0 }))
                }
            }
        }),
        FN = sM.extend({ type: "singleAxis", layoutMode: "box", axis: null, coordinateSystem: null, getCoordSysModel: function() { return this } }),
        WN = { left: "5%", top: "5%", right: "5%", bottom: "5%", type: "value", position: "bottom", orient: "horizontal", axisLine: { show: !0, lineStyle: { width: 1, type: "solid" } }, tooltip: { show: !0 }, axisTick: { show: !0, length: 6, lineStyle: { width: 1 } }, axisLabel: { show: !0, interval: "auto" }, splitLine: { show: !0, lineStyle: { type: "dashed", opacity: .2 } } };
    a(FN.prototype, hA), OA("single", FN, Ov, WN);
    var HN = function(t, e) {
            var n, i = [],
                a = t.seriesIndex;
            if (null == a || !(n = e.getSeriesByIndex(a))) return { point: [] };
            var r = n.getData(),
                o = Zi(r, t);
            if (null == o || 0 > o || _(o)) return { point: [] };
            var s = r.getItemGraphicEl(o),
                l = n.coordinateSystem;
            if (n.getTooltipPosition) i = n.getTooltipPosition(o) || [];
            else if (l && l.dataToPoint) i = l.dataToPoint(r.getValues(g(l.dimensions, function(t) { return r.mapDimension(t) }), o, !0)) || [];
            else if (s) {
                var u = s.getBoundingRect().clone();
                u.applyTransform(s.transform), i = [u.x + u.width / 2, u.y + u.height / 2]
            }
            return { point: i, el: s }
        },
        XN = f,
        YN = x,
        UN = qi(),
        jN = function(t, e, n) {
            var i = t.currTrigger,
                a = [t.x, t.y],
                r = t,
                o = t.dispatchAction || y(n.dispatchAction, n),
                s = e.getComponent("axisPointer").coordSysAxesInfo;
            if (s) {
                Xv(a) && (a = HN({ seriesIndex: r.seriesIndex, dataIndex: r.dataIndex }, e).point);
                var l = Xv(a),
                    u = r.axesInfo,
                    h = s.axesInfo,
                    c = "leave" === i || Xv(a),
                    d = {},
                    f = {},
                    g = { list: [], map: {} },
                    p = { showPointer: YN(Rv, f), showTooltip: YN(Bv, g) };
                XN(s.coordSysMap, function(t, e) {
                    var n = l || t.containPoint(a);
                    XN(s.coordSysAxesInfo[e], function(t) {
                        var e = t.axis,
                            i = Wv(u, t);
                        if (!c && n && (!u || i)) {
                            var r = i && i.value;
                            null != r || l || (r = e.pointToData(a)), null != r && Ev(t, r, p, !1, d)
                        }
                    })
                });
                var m = {};
                return XN(h, function(t, e) {
                    var n = t.linkGroup;
                    n && !f[e] && XN(n.axesInfo, function(e, i) {
                        var a = f[i];
                        if (e !== t && a) {
                            var r = a.value;
                            n.mapper && (r = t.axis.scale.parse(n.mapper(r, Hv(e), Hv(t)))), m[t.key] = r
                        }
                    })
                }), XN(m, function(t, e) { Ev(h[e], t, p, !0, d) }), Vv(f, h, d), Gv(g, a, t, o), Fv(h, o, n), d
            }
        },
        ZN = (_u({ type: "axisPointer", coordSysAxesInfo: null, defaultOption: { show: "auto", triggerOn: null, zlevel: 0, z: 50, type: "line", snap: !1, triggerTooltip: !0, value: null, status: null, link: [], animation: null, animationDurationUpdate: 200, lineStyle: { color: "#aaa", width: 1, type: "solid" }, shadowStyle: { color: "rgba(150,150,150,0.3)" }, label: { show: !0, formatter: null, precision: "auto", margin: 3, color: "#fff", padding: [5, 7, 5, 7], backgroundColor: "auto", borderColor: null, borderWidth: 0, shadowBlur: 3, shadowColor: "#aaa" }, handle: { show: !1, icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z", size: 45, margin: 50, color: "#333", shadowBlur: 3, shadowColor: "#aaa", shadowOffsetX: 0, shadowOffsetY: 2, throttle: 40 } } }), qi()),
        qN = f,
        KN = wu({
            type: "axisPointer",
            render: function(t, e, n) {
                var i = e.getComponent("tooltip"),
                    a = t.get("triggerOn") || i && i.get("triggerOn") || "mousemove|click";
                Yv("axisPointer", n, function(t, e, n) { "none" !== a && ("leave" === t || a.indexOf(t) >= 0) && n({ type: "updateAxisPointer", currTrigger: t, x: e && e.offsetX, y: e && e.offsetY }) })
            },
            remove: function(t, e) { $v(e.getZr(), "axisPointer"), KN.superApply(this._model, "remove", arguments) },
            dispose: function(t, e) { $v("axisPointer", e), KN.superApply(this._model, "dispose", arguments) }
        }),
        $N = qi(),
        JN = i,
        QN = y;
    Jv.prototype = {
        _group: null,
        _lastGraphicKey: null,
        _handle: null,
        _dragging: !1,
        _lastValue: null,
        _lastStatus: null,
        _payloadInfo: null,
        animationThreshold: 15,
        render: function(t, e, n, i) {
            var a = e.get("value"),
                r = e.get("status");
            if (this._axisModel = t, this._axisPointerModel = e, this._api = n, i || this._lastValue !== a || this._lastStatus !== r) {
                this._lastValue = a, this._lastStatus = r;
                var o = this._group,
                    s = this._handle;
                if (!r || "hide" === r) return o && o.hide(), void(s && s.hide());
                o && o.show(), s && s.show();
                var l = {};
                this.makeElOption(l, a, t, e, n);
                var u = l.graphicKey;
                u !== this._lastGraphicKey && this.clear(n), this._lastGraphicKey = u;
                var h = this._moveAnimation = this.determineAnimation(t, e);
                if (o) {
                    var c = x(Qv, e, h);
                    this.updatePointerEl(o, l, c, e), this.updateLabelEl(o, l, c, e)
                } else o = this._group = new Vw, this.createPointerEl(o, l, t, e), this.createLabelEl(o, l, t, e), n.getZr().add(o);
                iy(o, e, !0), this._renderHandle(a)
            }
        },
        remove: function(t) { this.clear(t) },
        dispose: function(t) { this.clear(t) },
        determineAnimation: function(t, e) {
            var n = e.get("animation"),
                i = t.axis,
                a = "category" === i.type,
                r = e.get("snap");
            if (!r && !a) return !1;
            if ("auto" === n || null == n) {
                var o = this.animationThreshold;
                if (a && i.getBandWidth() > o) return !0;
                if (r) {
                    var s = Yc(t).seriesDataCount,
                        l = i.getExtent();
                    return Math.abs(l[0] - l[1]) / s > o
                }
                return !1
            }
            return n === !0
        },
        makeElOption: function() {},
        createPointerEl: function(t, e) {
            var n = e.pointer;
            if (n) {
                var i = $N(t).pointerEl = new zI[n.type](JN(e.pointer));
                t.add(i)
            }
        },
        createLabelEl: function(t, e, n, i) {
            if (e.label) {
                var a = $N(t).labelEl = new cI(JN(e.label));
                t.add(a), ey(a, i)
            }
        },
        updatePointerEl: function(t, e, n) {
            var i = $N(t).pointerEl;
            i && e.pointer && (i.setStyle(e.pointer.style), n(i, { shape: e.pointer.shape }))
        },
        updateLabelEl: function(t, e, n, i) {
            var a = $N(t).labelEl;
            a && (a.setStyle(e.label.style), n(a, { shape: e.label.shape, position: e.label.position }), ey(a, i))
        },
        _renderHandle: function(t) {
            if (!this._dragging && this.updateHandleTransform) {
                var e = this._axisPointerModel,
                    n = this._api.getZr(),
                    i = this._handle,
                    a = e.getModel("handle"),
                    r = e.get("status");
                if (!a.get("show") || !r || "hide" === r) return i && n.remove(i), void(this._handle = null);
                var o;
                this._handle || (o = !0, i = this._handle = qr(a.get("icon"), { cursor: "move", draggable: !0, onmousemove: function(t) { tw(t.event) }, onmousedown: QN(this._onHandleDragMove, this, 0, 0), drift: QN(this._onHandleDragMove, this), ondragend: QN(this._onHandleDragEnd, this) }), n.add(i)), iy(i, e, !1);
                var s = ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
                i.setStyle(a.getItemStyle(null, s));
                var l = a.get("size");
                _(l) || (l = [l, l]), i.attr("scale", [l[0] / 2, l[1] / 2]), sl(this, "_doDispatchAxisPointer", a.get("throttle") || 0, "fixRate"), this._moveHandleToValue(t, o)
            }
        },
        _moveHandleToValue: function(t, e) { Qv(this._axisPointerModel, !e && this._moveAnimation, this._handle, ny(this.getHandleTransform(t, this._axisModel, this._axisPointerModel))) },
        _onHandleDragMove: function(t, e) {
            var n = this._handle;
            if (n) {
                this._dragging = !0;
                var i = this.updateHandleTransform(ny(n), [t, e], this._axisModel, this._axisPointerModel);
                this._payloadInfo = i, n.stopAnimation(), n.attr(ny(i)), $N(n).lastProp = null, this._doDispatchAxisPointer()
            }
        },
        _doDispatchAxisPointer: function() {
            var t = this._handle;
            if (t) {
                var e = this._payloadInfo,
                    n = this._axisModel;
                this._api.dispatchAction({ type: "updateAxisPointer", x: e.cursorPoint[0], y: e.cursorPoint[1], tooltipOption: e.tooltipOption, axesInfo: [{ axisDim: n.axis.dim, axisIndex: n.componentIndex }] })
            }
        },
        _onHandleDragEnd: function() {
            this._dragging = !1;
            var t = this._handle;
            if (t) {
                var e = this._axisPointerModel.get("value");
                this._moveHandleToValue(e), this._api.dispatchAction({ type: "hideTip" })
            }
        },
        getHandleTransform: null,
        updateHandleTransform: null,
        clear: function(t) {
            this._lastValue = null, this._lastStatus = null;
            var e = t.getZr(),
                n = this._group,
                i = this._handle;
            e && n && (this._lastGraphicKey = null, n && e.remove(n), i && e.remove(i), this._group = null, this._handle = null, this._payloadInfo = null)
        },
        doClear: function() {},
        buildLabel: function(t, e, n) { return n = n || 0, { x: t[n], y: t[1 - n], width: e[n], height: e[1 - n] } }
    }, Jv.prototype.constructor = Jv, aa(Jv);
    var tO = Jv.extend({
            makeElOption: function(t, e, n, i, a) {
                var r = n.axis,
                    o = r.grid,
                    s = i.get("type"),
                    l = fy(o, r).getOtherAxis(r).getGlobalExtent(),
                    u = r.toGlobalCoord(r.dataToCoord(e, !0));
                if (s && "none" !== s) {
                    var h = ay(i),
                        c = eO[s](r, u, l);
                    c.style = h, t.graphicKey = c.type, t.pointer = c
                }
                var d = $c(o.model, n);
                uy(e, t, d, n, i, a)
            },
            getHandleTransform: function(t, e, n) { var i = $c(e.axis.grid.model, e, { labelInside: !1 }); return i.labelMargin = n.get("handle.margin"), { position: ly(e.axis, t, i), rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0) } },
            updateHandleTransform: function(t, e, n) {
                var i = n.axis,
                    a = i.grid,
                    r = i.getGlobalExtent(!0),
                    o = fy(a, i).getOtherAxis(i).getGlobalExtent(),
                    s = "x" === i.dim ? 0 : 1,
                    l = t.position;
                l[s] += e[s], l[s] = Math.min(r[1], l[s]), l[s] = Math.max(r[0], l[s]);
                var u = (o[1] + o[0]) / 2,
                    h = [u, u];
                h[s] = l[s];
                var c = [{ verticalAlign: "middle" }, { align: "center" }];
                return { position: l, rotation: t.rotation, cursorPoint: h, tooltipOption: c[s] }
            }
        }),
        eO = {
            line: function(t, e, n) { var i = hy([e, n[0]], [e, n[1]], gy(t)); return { type: "Line", subPixelOptimize: !0, shape: i } },
            shadow: function(t, e, n) {
                var i = Math.max(1, t.getBandWidth()),
                    a = n[1] - n[0];
                return { type: "Rect", shape: cy([e - i / 2, n[0]], [i, a], gy(t)) }
            }
        };
    oC.registerAxisPointerClass("CartesianAxisPointer", tO), hu(function(t) {
        if (t) {
            (!t.axisPointer || 0 === t.axisPointer.length) && (t.axisPointer = {});
            var e = t.axisPointer.link;
            e && !_(e) && (t.axisPointer.link = [e])
        }
    }), cu(JD.PROCESSOR.STATISTIC, function(t, e) { t.getComponent("axisPointer").coordSysAxesInfo = Bc(t, e) }), fu({ type: "updateAxisPointer", event: "updateAxisPointer", update: ":updateAxisPointer" }, jN);
    var nO = ["x", "y"],
        iO = ["width", "height"],
        aO = Jv.extend({
            makeElOption: function(t, e, n, i, a) {
                var r = n.axis,
                    o = r.coordinateSystem,
                    s = my(o, 1 - py(r)),
                    l = o.dataToPoint(e)[0],
                    u = i.get("type");
                if (u && "none" !== u) {
                    var h = ay(i),
                        c = rO[u](r, l, s);
                    c.style = h, t.graphicKey = c.type, t.pointer = c
                }
                var d = Nv(n);
                uy(e, t, d, n, i, a)
            },
            getHandleTransform: function(t, e, n) { var i = Nv(e, { labelInside: !1 }); return i.labelMargin = n.get("handle.margin"), { position: ly(e.axis, t, i), rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0) } },
            updateHandleTransform: function(t, e, n) {
                var i = n.axis,
                    a = i.coordinateSystem,
                    r = py(i),
                    o = my(a, r),
                    s = t.position;
                s[r] += e[r], s[r] = Math.min(o[1], s[r]), s[r] = Math.max(o[0], s[r]);
                var l = my(a, 1 - r),
                    u = (l[1] + l[0]) / 2,
                    h = [u, u];
                return h[r] = s[r], { position: s, rotation: t.rotation, cursorPoint: h, tooltipOption: { verticalAlign: "middle" } }
            }
        }),
        rO = {
            line: function(t, e, n) { var i = hy([e, n[0]], [e, n[1]], py(t)); return { type: "Line", subPixelOptimize: !0, shape: i } },
            shadow: function(t, e, n) {
                var i = t.getBandWidth(),
                    a = n[1] - n[0];
                return { type: "Rect", shape: cy([e - i / 2, n[0]], [i, a], py(t)) }
            }
        };
    oC.registerAxisPointerClass("SingleAxisPointer", aO), wu({ type: "single" });
    var oO = 2,
        sO = ZM.extend({
            type: "series.themeRiver",
            dependencies: ["singleAxis"],
            nameMap: null,
            init: function() { sO.superApply(this, "init", arguments), this.legendDataProvider = function() { return this.getRawData() } },
            fixData: function(t) {
                var e = t.length,
                    n = ea(t, function(t) { return t[2] }),
                    i = [];
                n.buckets.each(function(t, e) { i.push({ name: e, dataList: t }) });
                for (var a = i.length, r = -1, o = -1, s = 0; a > s; ++s) {
                    var l = i[s].dataList.length;
                    l > r && (r = l, o = s)
                }
                for (var u = 0; a > u; ++u)
                    if (u !== o)
                        for (var h = i[u].name, c = 0; r > c; ++c) { for (var d = i[o].dataList[c][0], f = i[u].dataList.length, g = -1, p = 0; f > p; ++p) { var m = i[u].dataList[p][0]; if (m === d) { g = p; break } } - 1 === g && (t[e] = [], t[e][0] = d, t[e][1] = 0, t[e][2] = h, e++) }
                return t
            },
            getInitialData: function(t, e) {
                for (var n = e.queryComponents({ mainType: "singleAxis", index: this.get("singleAxisIndex"), id: this.get("singleAxisId") })[0], i = n.get("type"), a = m(t.data, function(t) {
                        return void 0 !== t[2]
                    }), r = this.fixData(a || []), o = [], s = this.nameMap = B(), l = 0, u = 0; u < r.length; ++u) o.push(r[u][oO]), s.get(r[u][oO]) || (s.set(r[u][oO], l), l++);
                var h = OT(r, { coordDimensions: ["single"], dimensionsDefine: [{ name: "time", type: ku(i) }, { name: "value", type: "float" }, { name: "name", type: "ordinal" }], encodeDefine: { single: 0, value: 1, itemName: 2 } }),
                    c = new PT(h, this);
                return c.initData(r), c
            },
            getLayerSeries: function() {
                for (var t = this.getData(), e = t.count(), n = [], i = 0; e > i; ++i) n[i] = i;
                var a = t.mapDimension("single"),
                    r = ea(n, function(e) { return t.get("name", e) }),
                    o = [];
                return r.buckets.each(function(e, n) { e.sort(function(e, n) { return t.get(a, e) - t.get(a, n) }), o.push({ name: n, indices: e }) }), o
            },
            getAxisTooltipData: function(t, e) {
                _(t) || (t = t ? [t] : []);
                for (var n, i = this.getData(), a = this.getLayerSeries(), r = [], o = a.length, s = 0; o > s; ++s) {
                    for (var l = Number.MAX_VALUE, u = -1, h = a[s].indices.length, c = 0; h > c; ++c) {
                        var d = i.get(t[0], a[s].indices[c]),
                            f = Math.abs(d - e);
                        l >= f && (n = d, l = f, u = a[s].indices[c])
                    }
                    r.push(u)
                }
                return { dataIndices: r, nestestValue: n }
            },
            formatTooltip: function(t) {
                var e = this.getData(),
                    n = e.getName(t),
                    i = e.get(e.mapDimension("value"), t);
                return (isNaN(i) || null == i) && (i = "-"), To(n + " : " + i)
            },
            defaultOption: { zlevel: 0, z: 2, coordinateSystem: "singleAxis", boundaryGap: ["10%", "10%"], singleAxisIndex: 0, animationEasing: "linear", label: { margin: 4, show: !0, position: "left", color: "#000", fontSize: 11 }, emphasis: { label: { show: !0 } } }
        });
    Su({
        type: "themeRiver",
        init: function() { this._layers = [] },
        render: function(t) {
            function e(t) { return t.name }

            function n(e, n, s) {
                var l = this._layers;
                if ("remove" === e) return void a.remove(l[n]);
                for (var u, h = [], d = [], f = r[n].indices, g = 0; g < f.length; g++) {
                    var p = i.getItemLayout(f[g]),
                        m = p.x,
                        v = p.y0,
                        y = p.y;
                    h.push([m, v]), d.push([m, v + y]), u = i.getItemVisual(f[g], "color")
                }
                var x, _, w = i.getItemLayout(f[0]),
                    b = i.getItemModel(f[g - 1]),
                    S = b.getModel("label"),
                    I = S.get("margin");
                if ("add" === e) {
                    var M = c[n] = new Vw;
                    x = new TC({ shape: { points: h, stackedOnPoints: d, smooth: .4, stackedOnSmooth: .4, smoothConstraint: !1 }, z2: 0 }), _ = new QS({ style: { x: w.x - I, y: w.y0 + w.y / 2 } }), M.add(x), M.add(_), a.add(M), x.setClipPath(vy(x.getBoundingRect(), t, function() { x.removeClipPath() }))
                } else {
                    var M = l[s];
                    x = M.childAt(0), _ = M.childAt(1), a.add(M), c[n] = M, Fr(x, { shape: { points: h, stackedOnPoints: d } }, t), Fr(_, { style: { x: w.x - I, y: w.y0 + w.y / 2 } }, t)
                }
                var D = b.getModel("emphasis.itemStyle"),
                    T = b.getModel("itemStyle");
                Pr(_.style, S, { text: S.get("show") ? t.getFormattedLabel(f[g - 1], "normal") || i.getName(f[g - 1]) : null, textVerticalAlign: "middle" }), x.setStyle(o({ fill: u }, T.getItemStyle(["color"]))), Mr(x, D.getItemStyle())
            }
            var i = t.getData(),
                a = this.group,
                r = t.getLayerSeries(),
                s = i.getLayout("layoutInfo"),
                l = s.rect,
                u = s.boundaryGap;
            a.attr("position", [0, l.y + u[0]]);
            var h = new Au(this._layersSeries || [], r, e, e),
                c = {};
            h.add(y(n, this, "add")).update(y(n, this, "update")).remove(y(n, this, "remove")).execute(), this._layersSeries = r, this._layers = c
        },
        dispose: function() {}
    });
    var lO = function(t) {
            t.eachSeriesByType("themeRiver", function(t) {
                var e = t.getData(),
                    n = t.coordinateSystem,
                    i = {},
                    a = n.getRect();
                i.rect = a;
                var r = t.get("boundaryGap"),
                    o = n.getAxis();
                if (i.boundaryGap = r, "horizontal" === o.orient) {
                    r[0] = lo(r[0], a.height), r[1] = lo(r[1], a.height);
                    var s = a.height - r[0] - r[1];
                    yy(e, t, s)
                } else {
                    r[0] = lo(r[0], a.width), r[1] = lo(r[1], a.width);
                    var l = a.width - r[0] - r[1];
                    yy(e, t, l)
                }
                e.setLayout("layoutInfo", i)
            })
        },
        uO = function(t) {
            t.eachSeriesByType("themeRiver", function(t) {
                var e = t.getData(),
                    n = t.getRawData(),
                    i = t.get("color"),
                    a = B();
                e.each(function(t) { a.set(e.getRawIndex(t), t) }), n.each(function(r) {
                    var o = n.getName(r),
                        s = i[(t.nameMap.get(o) - 1) % i.length];
                    n.setItemVisual(r, "color", s);
                    var l = a.get(r);
                    null != l && e.setItemVisual(l, "color", s)
                })
            })
        };
    mu(lO), vu(uO), cu(XC("themeRiver")); {
        var hO = VA.extend({ type: "series.pictorialBar", dependencies: ["grid"], defaultOption: { symbol: "circle", symbolSize: null, symbolRotate: null, symbolPosition: null, symbolOffset: null, symbolMargin: null, symbolRepeat: !1, symbolRepeatDirection: "end", symbolClip: !1, symbolBoundingData: null, symbolPatternSize: 400, barGap: "-100%", progressive: 0, hoverAnimation: !1 }, getInitialData: function(t) { return t.stack = null, hO.superApply(this, "getInitialData", arguments) } }),
            cO = ["itemStyle", "borderWidth"],
            dO = [{ xy: "x", wh: "width", index: 0, posDesc: ["left", "right"] }, { xy: "y", wh: "height", index: 1, posDesc: ["top", "bottom"] }],
            fO = new tI;
        Su({
            type: "pictorialBar",
            render: function(t, e, n) {
                var i = this.group,
                    a = t.getData(),
                    r = this._data,
                    o = t.coordinateSystem,
                    s = o.getBaseAxis(),
                    l = !!s.isHorizontal(),
                    u = o.grid.getRect(),
                    h = {
                        ecSize: { width: n.getWidth(), height: n.getHeight() },
                        seriesModel: t,
                        coordSys: o,
                        coordSysExtent: [
                            [u.x, u.x + u.width],
                            [u.y, u.y + u.height]
                        ],
                        isHorizontal: l,
                        valueDim: dO[+l],
                        categoryDim: dO[1 - l]
                    };
                return a.diff(r).add(function(t) {
                    if (a.hasValue(t)) {
                        var e = Py(a, t),
                            n = _y(a, t, e, h),
                            r = Ey(a, h, n);
                        a.setItemGraphicEl(t, r), i.add(r), Fy(r, h, n)
                    }
                }).update(function(t, e) {
                    var n = r.getItemGraphicEl(e);
                    if (!a.hasValue(t)) return void i.remove(n);
                    var o = Py(a, t),
                        s = _y(a, t, o, h),
                        l = By(a, s);
                    n && l !== n.__pictorialShapeStr && (i.remove(n), a.setItemGraphicEl(t, null), n = null), n ? zy(n, h, s) : n = Ey(a, h, s, !0), a.setItemGraphicEl(t, n), n.__pictorialSymbolMeta = s, i.add(n), Fy(n, h, s)
                }).remove(function(t) {
                    var e = r.getItemGraphicEl(t);
                    e && Ry(r, t, e.__pictorialSymbolMeta.animationModel, e)
                }).execute(), this._data = a, this.group
            },
            dispose: G,
            remove: function(t) {
                var e = this.group,
                    n = this._data;
                t.get("animation") ? n && n.eachItemGraphicEl(function(e) { Ry(n, e.dataIndex, t, e) }) : e.removeAll()
            }
        })
    }
    mu(x(xh, "pictorialBar")), vu(AC("pictorialBar", "roundRect"));
    var gO = function(t) { var e = t.grid.getRect(); return { coordSys: { type: "cartesian2d", x: e.x, y: e.y, width: e.width, height: e.height }, api: { coord: function(e) { return t.dataToPoint(e) }, size: y(Hy, t) } } },
        pO = function(t) { var e = t.getBoundingRect(); return { coordSys: { type: "geo", x: e.x, y: e.y, width: e.width, height: e.height, zoom: t.getZoom() }, api: { coord: function(e) { return t.dataToPoint(e) }, size: y(Xy, t) } } },
        mO = function(t) { var e = t.getRect(); return { coordSys: { type: "singleAxis", x: e.x, y: e.y, width: e.width, height: e.height }, api: { coord: function(e) { return t.dataToPoint(e) }, size: y(Yy, t) } } },
        vO = function(t) {
            var e = t.getRadiusAxis(),
                n = t.getAngleAxis(),
                i = e.getExtent();
            return i[0] > i[1] && i.reverse(), {
                coordSys: { type: "polar", cx: t.cx, cy: t.cy, r: i[1], r0: i[0] },
                api: {
                    coord: y(function(i) {
                        var a = e.dataToRadius(i[0]),
                            r = n.dataToAngle(i[1]),
                            o = t.coordToPoint([a, r]);
                        return o.push(a, r * Math.PI / 180), o
                    }),
                    size: y(Uy, t)
                }
            }
        },
        yO = function(t) {
            var e = t.getRect(),
                n = t.getRangeInfo();
            return { coordSys: { type: "calendar", x: e.x, y: e.y, width: e.width, height: e.height, cellWidth: t.getCellWidth(), cellHeight: t.getCellHeight(), rangeInfo: { start: n.start, end: n.end, weeks: n.weeks, dayCount: n.allDay } }, api: { coord: function(e, n) { return t.dataToPoint(e, n) } } }
        },
        xO = DI,
        _O = ["itemStyle"],
        wO = ["emphasis", "itemStyle"],
        bO = ["label"],
        SO = ["emphasis", "label"],
        IO = "e\x00\x00",
        MO = { cartesian2d: gO, geo: pO, singleAxis: mO, polar: vO, calendar: yO };
    ZM.extend({ type: "series.custom", dependencies: ["grid", "polar", "geo", "singleAxis", "calendar"], defaultOption: { coordinateSystem: "cartesian2d", zlevel: 0, z: 2, legendHoverLink: !0, useTransform: !0, clip: !1 }, getInitialData: function() { return Qu(this.getSource(), this) }, getDataParams: function(t, e, n) { var i = ZM.prototype.getDataParams.apply(this, arguments); return n && (i.info = n.info), i } }), el.extend({
        type: "custom",
        _data: null,
        render: function(t, e, n, i) {
            var a = this._data,
                r = t.getData(),
                o = this.group,
                s = Ky(t, r, e, n);
            r.diff(a).add(function(e) { Jy(null, e, s(e, i), t, o, r) }).update(function(e, n) {
                var l = a.getItemGraphicEl(n);
                Jy(l, e, s(e, i), t, o, r)
            }).remove(function(t) {
                var e = a.getItemGraphicEl(t);
                e && o.remove(e)
            }).execute();
            var l = t.get("clip", !0) ? bc(t.coordinateSystem, !1, t) : null;
            l ? o.setClipPath(l) : o.removeClipPath(), this._data = r
        },
        incrementalPrepareRender: function() { this.group.removeAll(), this._data = null },
        incrementalRender: function(t, e, n, i, a) {
            function r(t) { t.isGroup || (t.incremental = !0, t.useHoverLayer = !0) }
            for (var o = e.getData(), s = Ky(e, o, n, i), l = t.start; l < t.end; l++) {
                var u = Jy(null, l, s(l, a), e, this.group, o);
                u.traverse(r)
            }
        },
        dispose: G,
        filterForExposedEvent: function(t, e, n) {
            var i = e.element;
            if (null == i || n.name === i) return !0;
            for (;
                (n = n.parent) && n !== this.group;)
                if (n.name === i) return !0;
            return !1
        }
    }), gx.prototype = { constructor: gx, pointToData: function(t, e) { return this.polar.pointToData(t, e)["radius" === this.dim ? 0 : 1] }, dataToRadius: MA.prototype.dataToCoord, radiusToData: MA.prototype.coordToData }, h(gx, MA);
    var DO = qi();
    px.prototype = {
        constructor: px,
        pointToData: function(t, e) { return this.polar.pointToData(t, e)["radius" === this.dim ? 0 : 1] },
        dataToAngle: MA.prototype.dataToCoord,
        angleToData: MA.prototype.coordToData,
        calculateCategoryInterval: function() {
            var t = this,
                e = t.getLabelModel(),
                n = t.scale,
                i = n.getExtent(),
                a = n.count();
            if (i[1] - i[0] < 1) return 0;
            var r = i[0],
                o = t.dataToCoord(r + 1) - t.dataToCoord(r),
                s = Math.abs(o),
                l = Fn(r, e.getFont(), "center", "top"),
                u = Math.max(l.height, 7),
                h = u / s;
            isNaN(h) && (h = 1 / 0);
            var c = Math.max(0, Math.floor(h)),
                d = DO(t.model),
                f = d.lastAutoInterval,
                g = d.lastTickCount;
            return null != f && null != g && Math.abs(f - c) <= 1 && Math.abs(g - a) <= 1 && f > c ? c = f : (d.lastTickCount = a, d.lastAutoInterval = c), c
        }
    }, h(px, MA);
    var TO = function(t) { this.name = t || "", this.cx = 0, this.cy = 0, this._radiusAxis = new gx, this._angleAxis = new px, this._radiusAxis.polar = this._angleAxis.polar = this };
    TO.prototype = {
        type: "polar",
        axisPointerEnabled: !0,
        constructor: TO,
        dimensions: ["radius", "angle"],
        model: null,
        containPoint: function(t) { var e = this.pointToCoord(t); return this._radiusAxis.contain(e[0]) && this._angleAxis.contain(e[1]) },
        containData: function(t) { return this._radiusAxis.containData(t[0]) && this._angleAxis.containData(t[1]) },
        getAxis: function(t) { return this["_" + t + "Axis"] },
        getAxes: function() { return [this._radiusAxis, this._angleAxis] },
        getAxesByScale: function(t) {
            var e = [],
                n = this._angleAxis,
                i = this._radiusAxis;
            return n.scale.type === t && e.push(n), i.scale.type === t && e.push(i), e
        },
        getAngleAxis: function() { return this._angleAxis },
        getRadiusAxis: function() { return this._radiusAxis },
        getOtherAxis: function(t) { var e = this._angleAxis; return t === e ? this._radiusAxis : e },
        getBaseAxis: function() { return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis() },
        getTooltipAxes: function(t) { var e = null != t && "auto" !== t ? this.getAxis(t) : this.getBaseAxis(); return { baseAxes: [e], otherAxes: [this.getOtherAxis(e)] } },
        dataToPoint: function(t, e) { return this.coordToPoint([this._radiusAxis.dataToRadius(t[0], e), this._angleAxis.dataToAngle(t[1], e)]) },
        pointToData: function(t, e) { var n = this.pointToCoord(t); return [this._radiusAxis.radiusToData(n[0], e), this._angleAxis.angleToData(n[1], e)] },
        pointToCoord: function(t) {
            var e = t[0] - this.cx,
                n = t[1] - this.cy,
                i = this.getAngleAxis(),
                a = i.getExtent(),
                r = Math.min(a[0], a[1]),
                o = Math.max(a[0], a[1]);
            i.inverse ? r = o - 360 : o = r + 360;
            var s = Math.sqrt(e * e + n * n);
            e /= s, n /= s;
            for (var l = Math.atan2(-n, e) / Math.PI * 180, u = r > l ? 1 : -1; r > l || l > o;) l += 360 * u;
            return [s, l]
        },
        coordToPoint: function(t) {
            var e = t[0],
                n = t[1] / 180 * Math.PI,
                i = Math.cos(n) * e + this.cx,
                a = -Math.sin(n) * e + this.cy;
            return [i, a]
        },
        getArea: function() {
            var t = this.getAngleAxis(),
                e = this.getRadiusAxis(),
                n = e.getExtent().slice();
            n[0] > n[1] && n.reverse();
            var i = t.getExtent(),
                a = Math.PI / 180;
            return {
                cx: this.cx,
                cy: this.cy,
                r0: n[0],
                r: n[1],
                startAngle: -i[0] * a,
                endAngle: -i[1] * a,
                clockwise: t.inverse,
                contain: function(t, e) {
                    var n = t - this.cx,
                        i = e - this.cy,
                        a = n * n + i * i,
                        r = this.r,
                        o = this.r0;
                    return r * r >= a && a >= o * o
                }
            }
        }
    };
    var AO = sM.extend({ type: "polarAxis", axis: null, getCoordSysModel: function() { return this.ecModel.queryComponents({ mainType: "polar", index: this.option.polarIndex, id: this.option.polarId })[0] } });
    a(AO.prototype, hA);
    var CO = { angle: { startAngle: 90, clockwise: !0, splitNumber: 12, axisLabel: { rotate: !1 } }, radius: { splitNumber: 5 } };
    OA("angle", AO, mx, CO.angle), OA("radius", AO, mx, CO.radius), _u({ type: "polar", dependencies: ["polarAxis", "angleAxis"], coordinateSystem: null, findAxisModel: function(t) { var e, n = this.ecModel; return n.eachComponent(t, function(t) { t.getCoordSysModel() === this && (e = t) }, this), e }, defaultOption: { zlevel: 0, z: 0, center: ["50%", "50%"], radius: "80%" } });
    var LO = {
        dimensions: TO.prototype.dimensions,
        create: function(t, e) {
            var n = [];
            return t.eachComponent("polar", function(t, i) {
                var a = new TO(i);
                a.update = yx;
                var r = a.getRadiusAxis(),
                    o = a.getAngleAxis(),
                    s = t.findAxisModel("radiusAxis"),
                    l = t.findAxisModel("angleAxis");
                xx(r, s), xx(o, l), vx(a, t, e), n.push(a), t.coordinateSystem = a, a.model = t
            }), t.eachSeries(function(e) {
                if ("polar" === e.get("coordinateSystem")) {
                    var n = t.queryComponents({ mainType: "polar", index: e.get("polarIndex"), id: e.get("polarId") })[0];
                    e.coordinateSystem = n.coordinateSystem
                }
            }), n
        }
    };
    ps.register("polar", LO);
    var PO = ["axisLine", "axisLabel", "axisTick", "splitLine", "splitArea"];
    oC.extend({
        type: "angleAxis",
        axisPointerClass: "PolarAxisPointer",
        render: function(t) {
            if (this.group.removeAll(), t.get("show")) {
                var e = t.axis,
                    n = e.polar,
                    a = n.getRadiusAxis().getExtent(),
                    r = e.getTicksCoords(),
                    o = g(e.getViewLabels(), function(t) { var t = i(t); return t.coord = e.dataToCoord(t.tickValue), t });
                Sx(o), Sx(r), f(PO, function(i) {!t.get(i + ".show") || e.scale.isBlank() && "axisLine" !== i || this["_" + i](t, n, r, a, o) }, this)
            }
        },
        _axisLine: function(t, e, n, i) {
            var a, r = t.getModel("axisLine.lineStyle"),
                o = bx(e),
                s = o ? 0 : 1;
            a = 0 === i[s] ? new tI({ shape: { cx: e.cx, cy: e.cy, r: i[o] }, style: r.getLineStyle(), z2: 1, silent: !0 }) : new aI({ shape: { cx: e.cx, cy: e.cy, r: i[o], r0: i[s] }, style: r.getLineStyle(), z2: 1, silent: !0 }), a.style.fill = null, this.group.add(a)
        },
        _axisTick: function(t, e, n, i) {
            var a = t.getModel("axisTick"),
                r = (a.get("inside") ? -1 : 1) * a.get("length"),
                o = i[bx(e)],
                l = g(n, function(t) { return new fI({ shape: _x(e, [o, o + r], t.coord) }) });
            this.group.add(kI(l, { style: s(a.getModel("lineStyle").getLineStyle(), { stroke: t.get("axisLine.lineStyle.color") }) }))
        },
        _axisLabel: function(t, e, n, i, a) {
            var r = t.getCategories(!0),
                o = t.getModel("axisLabel"),
                s = o.get("margin"),
                l = t.get("triggerEvent");
            f(a, function(n) {
                var a = o,
                    u = n.tickValue,
                    h = i[bx(e)],
                    c = e.coordToPoint([h + s, n.coord]),
                    d = e.cx,
                    f = e.cy,
                    g = Math.abs(c[0] - d) / h < .3 ? "center" : c[0] > d ? "left" : "right",
                    p = Math.abs(c[1] - f) / h < .3 ? "middle" : c[1] > f ? "top" : "bottom";
                r && r[u] && r[u].textStyle && (a = new to(r[u].textStyle, o, o.ecModel));
                var m = new QS({ silent: QA.isLabelSilent(t) });
                this.group.add(m), Pr(m.style, a, { x: c[0], y: c[1], textFill: a.getTextColor() || t.get("axisLine.lineStyle.color"), text: n.formattedLabel, textAlign: g, textVerticalAlign: p }), l && (m.eventData = QA.makeAxisEventDataBase(t), m.eventData.targetType = "axisLabel", m.eventData.value = n.rawLabel)
            }, this)
        },
        _splitLine: function(t, e, n, i) {
            var a = t.getModel("splitLine"),
                r = a.getModel("lineStyle"),
                o = r.get("color"),
                l = 0;
            o = o instanceof Array ? o : [o];
            for (var u = [], h = 0; h < n.length; h++) {
                var c = l++ % o.length;
                u[c] = u[c] || [], u[c].push(new fI({ shape: _x(e, i, n[h].coord) }))
            }
            for (var h = 0; h < u.length; h++) this.group.add(kI(u[h], { style: s({ stroke: o[h % o.length] }, r.getLineStyle()), silent: !0, z: t.get("z") }))
        },
        _splitArea: function(t, e, n, i) {
            if (n.length) {
                var a = t.getModel("splitArea"),
                    r = a.getModel("areaStyle"),
                    o = r.get("color"),
                    l = 0;
                o = o instanceof Array ? o : [o];
                for (var u = [], h = Math.PI / 180, c = -n[0].coord * h, d = Math.min(i[0], i[1]), f = Math.max(i[0], i[1]), g = t.get("clockwise"), p = 1; p < n.length; p++) {
                    var m = l++ % o.length;
                    u[m] = u[m] || [], u[m].push(new iI({ shape: { cx: e.cx, cy: e.cy, r0: d, r: f, startAngle: c, endAngle: -n[p].coord * h, clockwise: g }, silent: !0 })), c = -n[p].coord * h
                }
                for (var p = 0; p < u.length; p++) this.group.add(kI(u[p], { style: s({ fill: o[p % o.length] }, r.getAreaStyle()), silent: !0 }))
            }
        }
    });
    var kO = ["axisLine", "axisTickLabel", "axisName"],
        NO = ["splitLine", "splitArea"];
    oC.extend({
        type: "radiusAxis",
        axisPointerClass: "PolarAxisPointer",
        render: function(t) {
            if (this.group.removeAll(), t.get("show")) {
                var e = t.axis,
                    n = e.polar,
                    i = n.getAngleAxis(),
                    a = e.getTicksCoords(),
                    r = i.getExtent()[0],
                    o = e.getExtent(),
                    s = Ix(n, t, r),
                    l = new QA(t, s);
                f(kO, l.add, l), this.group.add(l.getGroup()), f(NO, function(i) { t.get(i + ".show") && !e.scale.isBlank() && this["_" + i](t, n, r, o, a) }, this)
            }
        },
        _splitLine: function(t, e, n, i, a) {
            var r = t.getModel("splitLine"),
                o = r.getModel("lineStyle"),
                l = o.get("color"),
                u = 0;
            l = l instanceof Array ? l : [l];
            for (var h = [], c = 0; c < a.length; c++) {
                var d = u++ % l.length;
                h[d] = h[d] || [], h[d].push(new tI({ shape: { cx: e.cx, cy: e.cy, r: a[c].coord }, silent: !0 }))
            }
            for (var c = 0; c < h.length; c++) this.group.add(kI(h[c], { style: s({ stroke: l[c % l.length], fill: null }, o.getLineStyle()), silent: !0 }))
        },
        _splitArea: function(t, e, n, i, a) {
            if (a.length) {
                var r = t.getModel("splitArea"),
                    o = r.getModel("areaStyle"),
                    l = o.get("color"),
                    u = 0;
                l = l instanceof Array ? l : [l];
                for (var h = [], c = a[0].coord, d = 1; d < a.length; d++) {
                    var f = u++ % l.length;
                    h[f] = h[f] || [], h[f].push(new iI({ shape: { cx: e.cx, cy: e.cy, r0: c, r: a[d].coord, startAngle: 0, endAngle: 2 * Math.PI }, silent: !0 })), c = a[d].coord
                }
                for (var d = 0; d < h.length; d++) this.group.add(kI(h[d], { style: s({ fill: l[d % l.length] }, o.getAreaStyle()), silent: !0 }))
            }
        }
    });
    var OO = Jv.extend({
            makeElOption: function(t, e, n, i, a) {
                var r = n.axis;
                "angle" === r.dim && (this.animationThreshold = Math.PI / 18);
                var o, s = r.polar,
                    l = s.getOtherAxis(r),
                    u = l.getExtent();
                o = r["dataTo" + No(r.dim)](e);
                var h = i.get("type");
                if (h && "none" !== h) {
                    var c = ay(i),
                        d = EO[h](r, s, o, u, c);
                    d.style = c, t.graphicKey = d.type, t.pointer = d
                }
                var f = i.get("label.margin"),
                    g = Mx(e, n, i, s, f);
                ry(t, n, i, a, g)
            }
        }),
        EO = {
            line: function(t, e, n, i) { return "angle" === t.dim ? { type: "Line", shape: hy(e.coordToPoint([i[0], n]), e.coordToPoint([i[1], n])) } : { type: "Circle", shape: { cx: e.cx, cy: e.cy, r: n } } },
            shadow: function(t, e, n, i) {
                var a = Math.max(1, t.getBandWidth()),
                    r = Math.PI / 180;
                return "angle" === t.dim ? { type: "Sector", shape: dy(e.cx, e.cy, i[0], i[1], (-n - a / 2) * r, (-n + a / 2) * r) } : { type: "Sector", shape: dy(e.cx, e.cy, n - a / 2, n + a / 2, 0, 2 * Math.PI) }
            }
        };
    oC.registerAxisPointerClass("PolarAxisPointer", OO), mu(x(dx, "bar")), wu({ type: "polar" });
    var zO = sM.extend({
        type: "geo",
        coordinateSystem: null,
        layoutMode: "box",
        init: function(t) { sM.prototype.init.apply(this, arguments), Fi(t, "label", ["show"]) },
        optionUpdated: function() {
            var t = this.option,
                e = this;
            t.regions = VP.getFilledRegions(t.regions, t.map, t.nameMap), this._optionModelMap = p(t.regions || [], function(t, n) { return n.name && t.set(n.name, new to(n, e)), t }, B()), this.updateSelectedMap(t.regions)
        },
        defaultOption: { zlevel: 0, z: 0, show: !0, left: "center", top: "center", aspectScale: null, silent: !1, map: "", boundingCoords: null, center: null, zoom: 1, scaleLimit: null, label: { show: !1, color: "#000" }, itemStyle: { borderWidth: .5, borderColor: "#444", color: "#eee" }, emphasis: { label: { show: !0, color: "rgb(100,0,0)" }, itemStyle: { color: "rgba(255,215,0,0.8)" } }, regions: [] },
        getRegionModel: function(t) { return this._optionModelMap.get(t) || new to(null, this, this.ecModel) },
        getFormattedLabel: function(t, e) {
            var n = this.getRegionModel(t),
                i = n.get("label" + ("normal" === e ? "." : e + ".") + "formatter"),
                a = { name: t };
            return "function" == typeof i ? (a.status = e, i(a)) : "string" == typeof i ? i.replace("{a}", null != t ? t : "") : void 0
        },
        setZoom: function(t) { this.option.zoom = t },
        setCenter: function(t) { this.option.center = t }
    });
    c(zO, OC), wu({
        type: "geo",
        init: function(t, e) {
            var n = new tp(e, !0);
            this._mapDraw = n, this.group.add(n.group)
        },
        render: function(t, e, n, i) {
            if (!i || "geoToggleSelect" !== i.type || i.from !== this.uid) {
                var a = this._mapDraw;
                t.get("show") ? a.draw(t, e, n, this, i) : this._mapDraw.group.removeAll(), this.group.silent = t.get("silent")
            }
        },
        dispose: function() { this._mapDraw && this._mapDraw.remove() }
    }), Dx("toggleSelected", { type: "geoToggleSelect", event: "geoselectchanged" }), Dx("select", { type: "geoSelect", event: "geoselected" }), Dx("unSelect", { type: "geoUnSelect", event: "geounselected" });
    var RO = 864e5;
    Tx.prototype = {
        constructor: Tx,
        type: "calendar",
        dimensions: ["time", "value"],
        getDimensionsInfo: function() { return [{ name: "time", type: "time" }, "value"] },
        getRangeInfo: function() { return this._rangeInfo },
        getModel: function() { return this._model },
        getRect: function() { return this._rect },
        getCellWidth: function() { return this._sw },
        getCellHeight: function() { return this._sh },
        getOrient: function() { return this._orient },
        getFirstDayOfWeek: function() { return this._firstDayOfWeek },
        getDateInfo: function(t) {
            t = yo(t);
            var e = t.getFullYear(),
                n = t.getMonth() + 1;
            n = 10 > n ? "0" + n : n;
            var i = t.getDate();
            i = 10 > i ? "0" + i : i;
            var a = t.getDay();
            return a = Math.abs((a + 7 - this.getFirstDayOfWeek()) % 7), { y: e, m: n, d: i, day: a, time: t.getTime(), formatedDate: e + "-" + n + "-" + i, date: t }
        },
        getNextNDay: function(t, e) { return e = e || 0, 0 === e ? this.getDateInfo(t) : (t = new Date(this.getDateInfo(t).time), t.setDate(t.getDate() + e), this.getDateInfo(t)) },
        update: function(t, e) {
            function n(t, e) { return null != t[e] && "auto" !== t[e] }
            this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
            var i = this._rangeInfo.weeks || 1,
                a = ["width", "height"],
                r = this._model.get("cellSize").slice(),
                o = this._model.getBoxLayoutParams(),
                s = "horizontal" === this._orient ? [i, 7] : [7, i];
            f([0, 1], function(t) { n(r, t) && (o[a[t]] = r[t] * s[t]) });
            var l = { width: e.getWidth(), height: e.getHeight() },
                u = this._rect = Bo(o, l);
            f([0, 1], function(t) { n(r, t) || (r[t] = u[a[t]] / s[t]) }), this._sw = r[0], this._sh = r[1]
        },
        dataToPoint: function(t, e) {
            _(t) && (t = t[0]), null == e && (e = !0);
            var n = this.getDateInfo(t),
                i = this._rangeInfo,
                a = n.formatedDate;
            if (e && !(n.time >= i.start.time && n.time < i.end.time + RO)) return [0 / 0, 0 / 0];
            var r = n.day,
                o = this._getRangeInfo([i.start.time, a]).nthWeek;
            return "vertical" === this._orient ? [this._rect.x + r * this._sw + this._sw / 2, this._rect.y + o * this._sh + this._sh / 2] : [this._rect.x + o * this._sw + this._sw / 2, this._rect.y + r * this._sh + this._sh / 2]
        },
        pointToData: function(t) { var e = this.pointToDate(t); return e && e.time },
        dataToRect: function(t, e) { var n = this.dataToPoint(t, e); return { contentShape: { x: n[0] - (this._sw - this._lineWidth) / 2, y: n[1] - (this._sh - this._lineWidth) / 2, width: this._sw - this._lineWidth, height: this._sh - this._lineWidth }, center: n, tl: [n[0] - this._sw / 2, n[1] - this._sh / 2], tr: [n[0] + this._sw / 2, n[1] - this._sh / 2], br: [n[0] + this._sw / 2, n[1] + this._sh / 2], bl: [n[0] - this._sw / 2, n[1] + this._sh / 2] } },
        pointToDate: function(t) {
            var e = Math.floor((t[0] - this._rect.x) / this._sw) + 1,
                n = Math.floor((t[1] - this._rect.y) / this._sh) + 1,
                i = this._rangeInfo.range;
            return "vertical" === this._orient ? this._getDateByWeeksAndDay(n, e - 1, i) : this._getDateByWeeksAndDay(e, n - 1, i)
        },
        convertToPixel: x(Ax, "dataToPoint"),
        convertFromPixel: x(Ax, "pointToData"),
        _initRangeOption: function() {
            var t = this._model.get("range"),
                e = t;
            if (_(e) && 1 === e.length && (e = e[0]), /^\d{4}$/.test(e) && (t = [e + "-01-01", e + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(e)) {
                var n = this.getDateInfo(e),
                    i = n.date;
                i.setMonth(i.getMonth() + 1);
                var a = this.getNextNDay(i, -1);
                t = [n.formatedDate, a.formatedDate]
            }
            /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(e) && (t = [e, e]);
            var r = this._getRangeInfo(t);
            return r.start.time > r.end.time && t.reverse(), t
        },
        _getRangeInfo: function(t) {
            t = [this.getDateInfo(t[0]), this.getDateInfo(t[1])];
            var e;
            t[0].time > t[1].time && (e = !0, t.reverse());
            var n = Math.floor(t[1].time / RO) - Math.floor(t[0].time / RO) + 1,
                i = new Date(t[0].time),
                a = i.getDate(),
                r = t[1].date.getDate();
            if (i.setDate(a + n - 1), i.getDate() !== r)
                for (var o = i.getTime() - t[1].time > 0 ? 1 : -1; i.getDate() !== r && (i.getTime() - t[1].time) * o > 0;) n -= o, i.setDate(a + n - 1);
            var s = Math.floor((n + t[0].day + 6) / 7),
                l = e ? -s + 1 : s - 1;
            return e && t.reverse(), { range: [t[0].formatedDate, t[1].formatedDate], start: t[0], end: t[1], allDay: n, weeks: s, nthWeek: l, fweek: t[0].day, lweek: t[1].day }
        },
        _getDateByWeeksAndDay: function(t, e, n) {
            var i = this._getRangeInfo(n);
            if (t > i.weeks || 0 === t && e < i.fweek || t === i.weeks && e > i.lweek) return !1;
            var a = 7 * (t - 1) - i.fweek + e,
                r = new Date(i.start.time);
            return r.setDate(i.start.d + a), this.getDateInfo(r)
        }
    }, Tx.dimensions = Tx.prototype.dimensions, Tx.getDimensionsInfo = Tx.prototype.getDimensionsInfo, Tx.create = function(t, e) {
        var n = [];
        return t.eachComponent("calendar", function(i) {
            var a = new Tx(i, t, e);
            n.push(a), i.coordinateSystem = a
        }), t.eachSeries(function(t) { "calendar" === t.get("coordinateSystem") && (t.coordinateSystem = n[t.get("calendarIndex") || 0]) }), n
    }, ps.register("calendar", Tx);
    var BO = sM.extend({
            type: "calendar",
            coordinateSystem: null,
            defaultOption: { zlevel: 0, z: 2, left: 80, top: 60, cellSize: 20, orient: "horizontal", splitLine: { show: !0, lineStyle: { color: "#000", width: 1, type: "solid" } }, itemStyle: { color: "#fff", borderWidth: 1, borderColor: "#ccc" }, dayLabel: { show: !0, firstDay: 0, position: "start", margin: "50%", nameMap: "en", color: "#000" }, monthLabel: { show: !0, position: "start", margin: 5, align: "center", nameMap: "en", formatter: null, color: "#000" }, yearLabel: { show: !0, position: null, margin: 30, formatter: null, color: "#ccc", fontFamily: "sans-serif", fontWeight: "bolder", fontSize: 20 } },
            init: function(t) {
                var e = Wo(t);
                BO.superApply(this, "init", arguments), Cx(t, e)
            },
            mergeOption: function(t) { BO.superApply(this, "mergeOption", arguments), Cx(this.option, t) }
        }),
        VO = { EN: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], CN: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"] },
        GO = { EN: ["S", "M", "T", "W", "T", "F", "S"], CN: ["日", "一", "二", "三", "四", "五", "六"] };
    wu({
        type: "calendar",
        _tlpoints: null,
        _blpoints: null,
        _firstDayOfMonth: null,
        _firstDayPoints: null,
        render: function(t) {
            var e = this.group;
            e.removeAll();
            var n = t.coordinateSystem,
                i = n.getRangeInfo(),
                a = n.getOrient();
            this._renderDayRect(t, i, e), this._renderLines(t, i, a, e), this._renderYearText(t, i, a, e), this._renderMonthText(t, a, e), this._renderWeekText(t, i, a, e)
        },
        _renderDayRect: function(t, e, n) {
            for (var i = t.coordinateSystem, a = t.getModel("itemStyle").getItemStyle(), r = i.getCellWidth(), o = i.getCellHeight(), s = e.start.time; s <= e.end.time; s = i.getNextNDay(s, 1).time) {
                var l = i.dataToRect([s], !1).tl,
                    u = new cI({ shape: { x: l[0], y: l[1], width: r, height: o }, cursor: "default", style: a });
                n.add(u)
            }
        },
        _renderLines: function(t, e, n, i) {
            function a(e) {
                r._firstDayOfMonth.push(o.getDateInfo(e)), r._firstDayPoints.push(o.dataToRect([e], !1).tl);
                var a = r._getLinePointsOfOneWeek(t, e, n);
                r._tlpoints.push(a[0]), r._blpoints.push(a[a.length - 1]), l && r._drawSplitline(a, s, i)
            }
            var r = this,
                o = t.coordinateSystem,
                s = t.getModel("splitLine.lineStyle").getLineStyle(),
                l = t.get("splitLine.show"),
                u = s.lineWidth;
            this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
            for (var h = e.start, c = 0; h.time <= e.end.time; c++) {
                a(h.formatedDate), 0 === c && (h = o.getDateInfo(e.start.y + "-" + e.start.m));
                var d = h.date;
                d.setMonth(d.getMonth() + 1), h = o.getDateInfo(d)
            }
            a(o.getNextNDay(e.end.time, 1).formatedDate), l && this._drawSplitline(r._getEdgesPoints(r._tlpoints, u, n), s, i), l && this._drawSplitline(r._getEdgesPoints(r._blpoints, u, n), s, i)
        },
        _getEdgesPoints: function(t, e, n) {
            var i = [t[0].slice(), t[t.length - 1].slice()],
                a = "horizontal" === n ? 0 : 1;
            return i[0][a] = i[0][a] - e / 2, i[1][a] = i[1][a] + e / 2, i
        },
        _drawSplitline: function(t, e, n) {
            var i = new lI({ z2: 20, shape: { points: t }, style: e });
            n.add(i)
        },
        _getLinePointsOfOneWeek: function(t, e, n) {
            var i = t.coordinateSystem;
            e = i.getDateInfo(e);
            for (var a = [], r = 0; 7 > r; r++) {
                var o = i.getNextNDay(e.time, r),
                    s = i.dataToRect([o.time], !1);
                a[2 * o.day] = s.tl, a[2 * o.day + 1] = s["horizontal" === n ? "bl" : "tr"]
            }
            return a
        },
        _formatterLabel: function(t, e) { return "string" == typeof t && t ? Co(t, e) : "function" == typeof t ? t(e) : e.nameMap },
        _yearTextPositionControl: function(t, e, n, i, a) { e = e.slice(); var r = ["center", "bottom"]; "bottom" === i ? (e[1] += a, r = ["center", "top"]) : "left" === i ? e[0] -= a : "right" === i ? (e[0] += a, r = ["center", "top"]) : e[1] -= a; var o = 0; return ("left" === i || "right" === i) && (o = Math.PI / 2), { rotation: o, position: e, style: { textAlign: r[0], textVerticalAlign: r[1] } } },
        _renderYearText: function(t, e, n, i) {
            var a = t.getModel("yearLabel");
            if (a.get("show")) {
                var r = a.get("margin"),
                    o = a.get("position");
                o || (o = "horizontal" !== n ? "top" : "left");
                var s = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]],
                    l = (s[0][0] + s[1][0]) / 2,
                    u = (s[0][1] + s[1][1]) / 2,
                    h = "horizontal" === n ? 0 : 1,
                    c = { top: [l, s[h][1]], bottom: [l, s[1 - h][1]], left: [s[1 - h][0], u], right: [s[h][0], u] },
                    d = e.start.y; + e.end.y > +e.start.y && (d = d + "-" + e.end.y);
                var f = a.get("formatter"),
                    g = { start: e.start.y, end: e.end.y, nameMap: d },
                    p = this._formatterLabel(f, g),
                    m = new QS({ z2: 30 });
                Pr(m.style, a, { text: p }), m.attr(this._yearTextPositionControl(m, c[o], n, o, r)), i.add(m)
            }
        },
        _monthTextPositionControl: function(t, e, n, i, a) {
            var r = "left",
                o = "top",
                s = t[0],
                l = t[1];
            return "horizontal" === n ? (l += a, e && (r = "center"), "start" === i && (o = "bottom")) : (s += a, e && (o = "middle"), "start" === i && (r = "right")), { x: s, y: l, textAlign: r, textVerticalAlign: o }
        },
        _renderMonthText: function(t, e, n) {
            var i = t.getModel("monthLabel");
            if (i.get("show")) {
                var a = i.get("nameMap"),
                    r = i.get("margin"),
                    s = i.get("position"),
                    l = i.get("align"),
                    u = [this._tlpoints, this._blpoints];
                b(a) && (a = VO[a.toUpperCase()] || []);
                var h = "start" === s ? 0 : 1,
                    c = "horizontal" === e ? 0 : 1;
                r = "start" === s ? -r : r;
                for (var d = "center" === l, f = 0; f < u[h].length - 1; f++) {
                    var g = u[h][f].slice(),
                        p = this._firstDayOfMonth[f];
                    if (d) {
                        var m = this._firstDayPoints[f];
                        g[c] = (m[c] + u[0][f + 1][c]) / 2
                    }
                    var v = i.get("formatter"),
                        y = a[+p.m - 1],
                        x = { yyyy: p.y, yy: (p.y + "").slice(2), MM: p.m, M: +p.m, nameMap: y },
                        _ = this._formatterLabel(v, x),
                        w = new QS({ z2: 30 });
                    o(Pr(w.style, i, { text: _ }), this._monthTextPositionControl(g, d, e, s, r)), n.add(w)
                }
            }
        },
        _weekTextPositionControl: function(t, e, n, i, a) {
            var r = "center",
                o = "middle",
                s = t[0],
                l = t[1],
                u = "start" === n;
            return "horizontal" === e ? (s = s + i + (u ? 1 : -1) * a[0] / 2, r = u ? "right" : "left") : (l = l + i + (u ? 1 : -1) * a[1] / 2, o = u ? "bottom" : "top"), { x: s, y: l, textAlign: r, textVerticalAlign: o }
        },
        _renderWeekText: function(t, e, n, i) {
            var a = t.getModel("dayLabel");
            if (a.get("show")) {
                var r = t.coordinateSystem,
                    s = a.get("position"),
                    l = a.get("nameMap"),
                    u = a.get("margin"),
                    h = r.getFirstDayOfWeek();
                b(l) && (l = GO[l.toUpperCase()] || []);
                var c = r.getNextNDay(e.end.time, 7 - e.lweek).time,
                    d = [r.getCellWidth(), r.getCellHeight()];
                u = lo(u, d["horizontal" === n ? 0 : 1]), "start" === s && (c = r.getNextNDay(e.start.time, -(7 + e.fweek)).time, u = -u);
                for (var f = 0; 7 > f; f++) {
                    var g = r.getNextNDay(c, f),
                        p = r.dataToRect([g.time], !1).center,
                        m = f;
                    m = Math.abs((f + h) % 7);
                    var v = new QS({ z2: 30 });
                    o(Pr(v.style, a, { text: l[m] }), this._weekTextPositionControl(p, n, s, u, d)), i.add(v)
                }
            }
        }
    }), _u({ type: "title", layoutMode: { type: "box", ignoreSize: !0 }, defaultOption: { zlevel: 0, z: 6, show: !0, text: "", target: "blank", subtext: "", subtarget: "blank", left: 0, top: 0, backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", borderWidth: 0, padding: 5, itemGap: 10, textStyle: { fontSize: 18, fontWeight: "bolder", color: "#333" }, subtextStyle: { color: "#aaa" } } }), wu({
        type: "title",
        render: function(t, e, n) {
            if (this.group.removeAll(), t.get("show")) {
                var i = this.group,
                    a = t.getModel("textStyle"),
                    r = t.getModel("subtextStyle"),
                    o = t.get("textAlign"),
                    s = C(t.get("textBaseline"), t.get("textVerticalAlign")),
                    l = new QS({ style: Pr({}, a, { text: t.get("text"), textFill: a.getTextColor() }, { disableBox: !0 }), z2: 10 }),
                    u = l.getBoundingRect(),
                    h = t.get("subtext"),
                    c = new QS({ style: Pr({}, r, { text: h, textFill: r.getTextColor(), y: u.height + t.get("itemGap"), textVerticalAlign: "top" }, { disableBox: !0 }), z2: 10 }),
                    d = t.get("link"),
                    f = t.get("sublink"),
                    g = t.get("triggerEvent", !0);
                l.silent = !d && !g, c.silent = !f && !g, d && l.on("click", function() { window.open(d, "_" + t.get("target")) }), f && c.on("click", function() { window.open(f, "_" + t.get("subtarget")) }), l.eventData = c.eventData = g ? { componentType: "title", componentIndex: t.componentIndex } : null, i.add(l), h && i.add(c);
                var p = i.getBoundingRect(),
                    m = t.getBoxLayoutParams();
                m.width = p.width, m.height = p.height;
                var v = Bo(m, { width: n.getWidth(), height: n.getHeight() }, t.get("padding"));
                o || (o = t.get("left") || t.get("right"), "middle" === o && (o = "center"), "right" === o ? v.x += v.width : "center" === o && (v.x += v.width / 2)), s || (s = t.get("top") || t.get("bottom"), "center" === s && (s = "middle"), "bottom" === s ? v.y += v.height : "middle" === s && (v.y += v.height / 2), s = s || "top"), i.attr("position", [v.x, v.y]);
                var y = { textAlign: o, textVerticalAlign: s };
                l.setStyle(y), c.setStyle(y), p = i.getBoundingRect();
                var x = v.margin,
                    _ = t.getItemStyle(["color", "opacity"]);
                _.fill = t.get("backgroundColor");
                var w = new cI({ shape: { x: p.x - x[3], y: p.y - x[0], width: p.width + x[1] + x[3], height: p.height + x[0] + x[2], r: t.get("borderRadius") }, style: _, subPixelOptimize: !0, silent: !0 });
                i.add(w)
            }
        }
    });
    var FO = oD.legend.selector,
        WO = { all: { type: "all", title: i(FO.all) }, inverse: { type: "inverse", title: i(FO.inverse) } },
        HO = _u({
            type: "legend.plain",
            dependencies: ["series"],
            layoutMode: { type: "box", ignoreSize: !0 },
            init: function(t, e, n) { this.mergeDefaultAndTheme(t, n), t.selected = t.selected || {}, this._updateSelector(t) },
            mergeOption: function(t) { HO.superCall(this, "mergeOption", t), this._updateSelector(t) },
            _updateSelector: function(t) {
                var e = t.selector;
                e === !0 && (e = t.selector = ["all", "inverse"]), _(e) && f(e, function(t, n) { b(t) && (t = { type: t }), e[n] = a(t, WO[t.type]) })
            },
            optionUpdated: function() { this._updateData(this.ecModel); var t = this._data; if (t[0] && "single" === this.get("selectedMode")) { for (var e = !1, n = 0; n < t.length; n++) { var i = t[n].get("name"); if (this.isSelected(i)) { this.select(i), e = !0; break } }!e && this.select(t[0].get("name")) } },
            _updateData: function(t) {
                var e = [],
                    n = [];
                t.eachRawSeries(function(i) {
                    var a = i.name;
                    n.push(a);
                    var r;
                    if (i.legendDataProvider) {
                        var o = i.legendDataProvider(),
                            s = o.mapArray(o.getName);
                        t.isSeriesFiltered(i) || (n = n.concat(s)), s.length ? e = e.concat(s) : r = !0
                    } else r = !0;
                    r && Ui(i) && e.push(i.name)
                }), this._availableNames = n;
                var i = this.get("data") || e,
                    a = g(i, function(t) { return ("string" == typeof t || "number" == typeof t) && (t = { name: t }), new to(t, this, this.ecModel) }, this);
                this._data = a
            },
            getData: function() {
                return this._data
            },
            select: function(t) {
                var e = this.option.selected,
                    n = this.get("selectedMode");
                if ("single" === n) {
                    var i = this._data;
                    f(i, function(t) { e[t.get("name")] = !1 })
                }
                e[t] = !0
            },
            unSelect: function(t) { "single" !== this.get("selectedMode") && (this.option.selected[t] = !1) },
            toggleSelected: function(t) {
                var e = this.option.selected;
                e.hasOwnProperty(t) || (e[t] = !0), this[e[t] ? "unSelect" : "select"](t)
            },
            allSelect: function() {
                var t = this._data,
                    e = this.option.selected;
                f(t, function(t) { e[t.get("name", !0)] = !0 })
            },
            inverseSelect: function() {
                var t = this._data,
                    e = this.option.selected;
                f(t, function(t) {
                    var n = t.get("name", !0);
                    e.hasOwnProperty(n) || (e[n] = !0), e[n] = !e[n]
                })
            },
            isSelected: function(t) { var e = this.option.selected; return !(e.hasOwnProperty(t) && !e[t]) && u(this._availableNames, t) >= 0 },
            getOrient: function() { return "vertical" === this.get("orient") ? { index: 1, name: "vertical" } : { index: 0, name: "horizontal" } },
            defaultOption: { zlevel: 0, z: 4, show: !0, orient: "horizontal", left: "center", top: 0, align: "auto", backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", borderRadius: 0, borderWidth: 0, padding: 5, itemGap: 10, itemWidth: 25, itemHeight: 14, inactiveColor: "#ccc", inactiveBorderColor: "#ccc", itemStyle: { borderWidth: 0 }, textStyle: { color: "#333" }, selectedMode: !0, selector: !1, selectorLabel: { show: !0, borderRadius: 10, padding: [3, 5, 3, 5], fontSize: 12, fontFamily: " sans-serif", color: "#666", borderWidth: 1, borderColor: "#666" }, emphasis: { selectorLabel: { show: !0, color: "#eee", backgroundColor: "#666" } }, selectorPosition: "auto", selectorItemGap: 7, selectorButtonGap: 10, tooltip: { show: !1 } }
        });
    fu("legendToggleSelect", "legendselectchanged", x(Lx, "toggleSelected")), fu("legendAllSelect", "legendselectall", x(Lx, "allSelect")), fu("legendInverseSelect", "legendinverseselect", x(Lx, "inverseSelect")), fu("legendSelect", "legendselected", x(Lx, "select")), fu("legendUnSelect", "legendunselected", x(Lx, "unSelect"));
    var XO = x,
        YO = f,
        UO = Vw,
        jO = wu({
            type: "legend.plain",
            newlineDisabled: !1,
            init: function() { this.group.add(this._contentGroup = new UO), this._backgroundEl, this.group.add(this._selectorGroup = new UO), this._isFirstRender = !0 },
            getContentGroup: function() { return this._contentGroup },
            getSelectorGroup: function() { return this._selectorGroup },
            render: function(t, e, n) {
                var i = this._isFirstRender;
                if (this._isFirstRender = !1, this.resetInner(), t.get("show", !0)) {
                    var a = t.get("align"),
                        r = t.get("orient");
                    a && "auto" !== a || (a = "right" === t.get("left") && "vertical" === r ? "right" : "left");
                    var o = t.get("selector", !0),
                        l = t.get("selectorPosition", !0);
                    !o || l && "auto" !== l || (l = "horizontal" === r ? "end" : "start"), this.renderInner(a, t, e, n, o, r, l);
                    var u = t.getBoxLayoutParams(),
                        h = { width: n.getWidth(), height: n.getHeight() },
                        c = t.get("padding"),
                        d = Bo(u, h, c),
                        f = this.layoutInner(t, a, d, i, o, l),
                        g = Bo(s({ width: f.width, height: f.height }, u), h, c);
                    this.group.attr("position", [g.x - f.x, g.y - f.y]), this.group.add(this._backgroundEl = Px(f, t))
                }
            },
            resetInner: function() { this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll() },
            renderInner: function(t, e, n, i, a, r, o) {
                var s = this.getContentGroup(),
                    l = B(),
                    u = e.get("selectedMode"),
                    h = [];
                n.eachRawSeries(function(t) {!t.get("legendHoverLink") && h.push(t.id) }), YO(e.getData(), function(a, r) {
                    var o = a.get("name");
                    if (!this.newlineDisabled && ("" === o || "\n" === o)) return void s.add(new UO({ newline: !0 }));
                    var c = n.getSeriesByName(o)[0];
                    if (!l.get(o))
                        if (c) {
                            var d = c.getData(),
                                f = d.getVisual("color"),
                                g = d.getVisual("borderColor");
                            "function" == typeof f && (f = f(c.getDataParams(0))), "function" == typeof g && (g = g(c.getDataParams(0)));
                            var p = d.getVisual("legendSymbol") || "roundRect",
                                m = d.getVisual("symbol"),
                                v = this._createItem(o, r, a, e, p, m, t, f, g, u);
                            v.on("click", XO(Nx, o, i)).on("mouseover", XO(Ox, c.name, null, i, h)).on("mouseout", XO(Ex, c.name, null, i, h)), l.set(o, !0)
                        } else n.eachRawSeries(function(n) {
                            if (!l.get(o) && n.legendDataProvider) {
                                var s = n.legendDataProvider(),
                                    c = s.indexOfName(o);
                                if (0 > c) return;
                                var d = s.getItemVisual(c, "color"),
                                    f = s.getItemVisual(c, "borderColor"),
                                    g = "roundRect",
                                    p = this._createItem(o, r, a, e, g, null, t, d, f, u);
                                p.on("click", XO(Nx, o, i)).on("mouseover", XO(Ox, null, o, i, h)).on("mouseout", XO(Ex, null, o, i, h)), l.set(o, !0)
                            }
                        }, this)
                }, this), a && this._createSelector(a, e, i, r, o)
            },
            _createSelector: function(t, e, n) {
                function i(t) {
                    var i = t.type,
                        r = new QS({ style: { x: 0, y: 0, align: "center", verticalAlign: "middle" }, onclick: function() { n.dispatchAction({ type: "all" === i ? "legendAllSelect" : "legendInverseSelect" }) } });
                    a.add(r);
                    var o = e.getModel("selectorLabel"),
                        s = e.getModel("emphasis.selectorLabel");
                    Cr(r.style, r.hoverStyle = {}, o, s, { defaultText: t.title, isRectText: !1 }), Mr(r)
                }
                var a = this.getSelectorGroup();
                YO(t, function(t) { i(t) })
            },
            _createItem: function(t, e, n, i, a, r, s, l, u, h) {
                var c = i.get("itemWidth"),
                    d = i.get("itemHeight"),
                    f = i.get("inactiveColor"),
                    g = i.get("inactiveBorderColor"),
                    p = i.get("symbolKeepAspect"),
                    m = i.getModel("itemStyle"),
                    v = i.isSelected(t),
                    y = new UO,
                    x = n.getModel("textStyle"),
                    _ = n.get("icon"),
                    w = n.getModel("tooltip"),
                    b = w.parentModel;
                a = _ || a;
                var S = zh(a, 0, 0, c, d, v ? l : f, null == p ? !0 : p);
                if (y.add(kx(S, a, m, u, g, v)), !_ && r && (r !== a || "none" === r)) {
                    var I = .8 * d;
                    "none" === r && (r = "circle");
                    var M = zh(r, (c - I) / 2, (d - I) / 2, I, I, v ? l : f, null == p ? !0 : p);
                    y.add(kx(M, r, m, u, g, v))
                }
                var D = "left" === s ? c + 5 : -5,
                    T = s,
                    A = i.get("formatter"),
                    C = t;
                "string" == typeof A && A ? C = A.replace("{name}", null != t ? t : "") : "function" == typeof A && (C = A(t)), y.add(new QS({ style: Pr({}, x, { text: C, x: D, y: d / 2, textFill: v ? x.getTextColor() : f, textAlign: T, textVerticalAlign: "middle" }) }));
                var L = new cI({ shape: y.getBoundingRect(), invisible: !0, tooltip: w.get("show") ? o({ content: t, formatter: b.get("formatter", !0) || function() { return t }, formatterParams: { componentType: "legend", legendIndex: i.componentIndex, name: t, $vars: ["name"] } }, w.option) : null });
                return y.add(L), y.eachChild(function(t) { t.silent = !0 }), L.silent = !h, this.getContentGroup().add(y), Mr(y), y.__legendDataIndex = e, y
            },
            layoutInner: function(t, e, n, i, a, r) {
                var o = this.getContentGroup(),
                    s = this.getSelectorGroup();
                aM(t.get("orient"), o, t.get("itemGap"), n.width, n.height);
                var l = o.getBoundingRect(),
                    u = [-l.x, -l.y];
                if (a) {
                    aM("horizontal", s, t.get("selectorItemGap", !0));
                    var h = s.getBoundingRect(),
                        c = [-h.x, -h.y],
                        d = t.get("selectorButtonGap", !0),
                        f = t.getOrient().index,
                        g = 0 === f ? "width" : "height",
                        p = 0 === f ? "height" : "width",
                        m = 0 === f ? "y" : "x";
                    "end" === r ? c[f] += l[g] + d : u[f] += h[g] + d, c[1 - f] += l[p] / 2 - h[p] / 2, s.attr("position", c), o.attr("position", u);
                    var v = { x: 0, y: 0 };
                    return v[g] = l[g] + d + h[g], v[p] = Math.max(l[p], h[p]), v[m] = Math.min(0, h[m] + c[1 - f]), v
                }
                return o.attr("position", u), this.group.getBoundingRect()
            },
            remove: function() { this.getContentGroup().removeAll(), this._isFirstRender = !0 }
        }),
        ZO = function(t) {
            var e = t.findComponents({ mainType: "legend" });
            e && e.length && t.filterSeries(function(t) {
                for (var n = 0; n < e.length; n++)
                    if (!e[n].isSelected(t.name)) return !1;
                return !0
            })
        };
    cu(JD.PROCESSOR.SERIES_FILTER, ZO), sM.registerSubTypeDefaulter("legend", function() { return "plain" });
    var qO = HO.extend({
            type: "legend.scroll",
            setScrollDataIndex: function(t) { this.option.scrollDataIndex = t },
            defaultOption: { scrollDataIndex: 0, pageButtonItemGap: 5, pageButtonGap: null, pageButtonPosition: "end", pageFormatter: "{current}/{total}", pageIcons: { horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"], vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"] }, pageIconColor: "#2f4554", pageIconInactiveColor: "#aaa", pageIconSize: 15, pageTextStyle: { color: "#333" }, animationDurationUpdate: 800 },
            init: function(t, e, n, i) {
                var a = Wo(t);
                qO.superCall(this, "init", t, e, n, i), zx(this, t, a)
            },
            mergeOption: function(t, e) { qO.superCall(this, "mergeOption", t, e), zx(this, this.option, t) }
        }),
        KO = Vw,
        $O = ["width", "height"],
        JO = ["x", "y"],
        QO = jO.extend({
            type: "legend.scroll",
            newlineDisabled: !0,
            init: function() { QO.superCall(this, "init"), this._currentIndex = 0, this.group.add(this._containerGroup = new KO), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new KO), this._showController },
            resetInner: function() { QO.superCall(this, "resetInner"), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null },
            renderInner: function(t, e, n, i, a, r, o) {
                function s(t, n) {
                    var a = t + "DataIndex",
                        r = qr(e.get("pageIcons", !0)[e.getOrient().name][n], { onclick: y(l._pageGo, l, a, e, i) }, { x: -h[0] / 2, y: -h[1] / 2, width: h[0], height: h[1] });
                    r.name = t, u.add(r)
                }
                var l = this;
                QO.superCall(this, "renderInner", t, e, n, i, a, r, o);
                var u = this._controllerGroup,
                    h = e.get("pageIconSize", !0);
                _(h) || (h = [h, h]), s("pagePrev", 0);
                var c = e.getModel("pageTextStyle");
                u.add(new QS({ name: "pageText", style: { textFill: c.getTextColor(), font: c.getFont(), textVerticalAlign: "middle", textAlign: "center" }, silent: !0 })), s("pageNext", 1)
            },
            layoutInner: function(t, e, n, a, r, o) {
                var s = this.getSelectorGroup(),
                    l = t.getOrient().index,
                    u = $O[l],
                    h = JO[l],
                    c = $O[1 - l],
                    d = JO[1 - l];
                r && aM("horizontal", s, t.get("selectorItemGap", !0));
                var f = t.get("selectorButtonGap", !0),
                    g = s.getBoundingRect(),
                    p = [-g.x, -g.y],
                    m = i(n);
                r && (m[u] = n[u] - g[u] - f);
                var v = this._layoutContentAndController(t, a, m, l, u, c, d);
                if (r) {
                    if ("end" === o) p[l] += v[u] + f;
                    else {
                        var y = g[u] + f;
                        p[l] -= y, v[h] -= y
                    }
                    v[u] += g[u] + f, p[1 - l] += v[d] + v[c] / 2 - g[c] / 2, v[c] = Math.max(v[c], g[c]), v[d] = Math.min(v[d], g[d] + p[1 - l]), s.attr("position", p)
                }
                return v
            },
            _layoutContentAndController: function(t, e, n, i, a, r, o) {
                var s = this.getContentGroup(),
                    l = this._containerGroup,
                    u = this._controllerGroup;
                aM(t.get("orient"), s, t.get("itemGap"), i ? n.width : null, i ? null : n.height), aM("horizontal", u, t.get("pageButtonItemGap", !0));
                var h = s.getBoundingRect(),
                    c = u.getBoundingRect(),
                    d = this._showController = h[a] > n[a],
                    f = [-h.x, -h.y];
                e || (f[i] = s.position[i]);
                var g = [0, 0],
                    p = [-c.x, -c.y],
                    m = C(t.get("pageButtonGap", !0), t.get("itemGap", !0));
                if (d) { var v = t.get("pageButtonPosition", !0); "end" === v ? p[i] += n[a] - c[a] : g[i] += c[a] + m }
                p[1 - i] += h[r] / 2 - c[r] / 2, s.attr("position", f), l.attr("position", g), u.attr("position", p);
                var y = { x: 0, y: 0 };
                if (y[a] = d ? n[a] : h[a], y[r] = Math.max(h[r], c[r]), y[o] = Math.min(0, c[o] + p[1 - i]), l.__rectSize = n[a], d) {
                    var x = { x: 0, y: 0 };
                    x[a] = Math.max(n[a] - c[a] - m, 0), x[r] = y[r], l.setClipPath(new cI({ shape: x })), l.__rectSize = x[a]
                } else u.eachChild(function(t) { t.attr({ invisible: !0, silent: !0 }) });
                var _ = this._getPageInfo(t);
                return null != _.pageIndex && Fr(s, { position: _.contentPosition }, d ? t : !1), this._updatePageInfoView(t, _), y
            },
            _pageGo: function(t, e, n) {
                var i = this._getPageInfo(e)[t];
                null != i && n.dispatchAction({ type: "legendScroll", scrollDataIndex: i, legendId: e.id })
            },
            _updatePageInfoView: function(t, e) {
                var n = this._controllerGroup;
                f(["pagePrev", "pageNext"], function(i) {
                    var a = null != e[i + "DataIndex"],
                        r = n.childOfName(i);
                    r && (r.setStyle("fill", a ? t.get("pageIconColor", !0) : t.get("pageIconInactiveColor", !0)), r.cursor = a ? "pointer" : "default")
                });
                var i = n.childOfName("pageText"),
                    a = t.get("pageFormatter"),
                    r = e.pageIndex,
                    o = null != r ? r + 1 : 0,
                    s = e.pageCount;
                i && a && i.setStyle("text", b(a) ? a.replace("{current}", o).replace("{total}", s) : a({ current: o, total: s }))
            },
            _getPageInfo: function(t) {
                function e(t) {
                    if (t) {
                        var e = t.getBoundingRect(),
                            n = e[l] + t.position[o];
                        return { s: n, e: n + e[s], i: t.__legendDataIndex }
                    }
                }

                function n(t, e) { return t.e >= e && t.s <= e + r }
                var i = t.get("scrollDataIndex", !0),
                    a = this.getContentGroup(),
                    r = this._containerGroup.__rectSize,
                    o = t.getOrient().index,
                    s = $O[o],
                    l = JO[o],
                    u = this._findTargetItemIndex(i),
                    h = a.children(),
                    c = h[u],
                    d = h.length,
                    f = d ? 1 : 0,
                    g = { contentPosition: a.position.slice(), pageCount: f, pageIndex: f - 1, pagePrevDataIndex: null, pageNextDataIndex: null };
                if (!c) return g;
                var p = e(c);
                g.contentPosition[o] = -p.s;
                for (var m = u + 1, v = p, y = p, x = null; d >= m; ++m) x = e(h[m]), (!x && y.e > v.s + r || x && !n(x, v.s)) && (v = y.i > v.i ? y : x, v && (null == g.pageNextDataIndex && (g.pageNextDataIndex = v.i), ++g.pageCount)), y = x;
                for (var m = u - 1, v = p, y = p, x = null; m >= -1; --m) x = e(h[m]), x && n(y, x.s) || !(v.i < y.i) || (y = v, null == g.pagePrevDataIndex && (g.pagePrevDataIndex = v.i), ++g.pageCount, ++g.pageIndex), v = x;
                return g
            },
            _findTargetItemIndex: function(t) {
                var e, n, i = this.getContentGroup();
                return this._showController && i.eachChild(function(i, a) {
                    var r = i.__legendDataIndex;
                    null == n && null != r && (n = a), r === t && (e = a)
                }), null != e ? e : n
            }
        });
    fu("legendScroll", "legendscroll", function(t, e) {
        var n = t.scrollDataIndex;
        null != n && e.eachComponent({ mainType: "legend", subType: "scroll", query: t }, function(t) { t.setScrollDataIndex(n) })
    }), _u({ type: "tooltip", dependencies: ["axisPointer"], defaultOption: { zlevel: 0, z: 60, show: !0, showContent: !0, trigger: "item", triggerOn: "mousemove|click", alwaysShowContent: !1, displayMode: "single", renderMode: "auto", confine: !1, showDelay: 0, hideDelay: 100, transitionDuration: .4, enterable: !1, backgroundColor: "rgba(50,50,50,0.7)", borderColor: "#333", borderRadius: 4, borderWidth: 0, padding: 5, extraCssText: "", axisPointer: { type: "line", axis: "auto", animation: "auto", animationDurationUpdate: 200, animationEasingUpdate: "exponentialOut", crossStyle: { color: "#999", width: 1, type: "dashed", textStyle: {} } }, textStyle: { color: "#fff", fontSize: 14 } } });
    var tE = f,
        eE = Do,
        nE = ["", "-webkit-", "-moz-", "-o-"],
        iE = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;";
    Gx.prototype = {
        constructor: Gx,
        _enterable: !0,
        update: function() {
            var t = this._container,
                e = t.currentStyle || document.defaultView.getComputedStyle(t),
                n = t.style;
            "absolute" !== n.position && "absolute" !== e.position && (n.position = "relative")
        },
        show: function(t) {
            clearTimeout(this._hideTimeout);
            var e = this.el;
            e.style.cssText = iE + Vx(t) + ";left:" + this._x + "px;top:" + this._y + "px;" + (t.get("extraCssText") || ""), e.style.display = e.innerHTML ? "block" : "none", e.style.pointerEvents = this._enterable ? "auto" : "none", this._show = !0
        },
        setContent: function(t) { this.el.innerHTML = null == t ? "" : t },
        setEnterable: function(t) { this._enterable = t },
        getSize: function() { var t = this.el; return [t.clientWidth, t.clientHeight] },
        moveTo: function(t, e) {
            var n, i = this._zr;
            i && i.painter && (n = i.painter.getViewportRootOffset()) && (t += n.offsetLeft, e += n.offsetTop);
            var a = this.el.style;
            a.left = t + "px", a.top = e + "px", this._x = t, this._y = e
        },
        hide: function() { this.el.style.display = "none", this._show = !1 },
        hideLater: function(t) {!this._show || this._inContent && this._enterable || (t ? (this._hideDelay = t, this._show = !1, this._hideTimeout = setTimeout(y(this.hide, this), t)) : this.hide()) },
        isShow: function() { return this._show },
        getOuterSize: function() {
            var t = this.el.clientWidth,
                e = this.el.clientHeight;
            if (document.defaultView && document.defaultView.getComputedStyle) {
                var n = document.defaultView.getComputedStyle(this.el);
                n && (t += parseInt(n.borderLeftWidth, 10) + parseInt(n.borderRightWidth, 10), e += parseInt(n.borderTopWidth, 10) + parseInt(n.borderBottomWidth, 10))
            }
            return { width: t, height: e }
        }
    }, Fx.prototype = {
        constructor: Fx,
        _enterable: !0,
        update: function() {},
        show: function() { this._hideTimeout && clearTimeout(this._hideTimeout), this.el.attr("show", !0), this._show = !0 },
        setContent: function(t, e, n) {
            this.el && this._zr.remove(this.el);
            for (var i = {}, a = t, r = "{marker", o = "|}", s = a.indexOf(r); s >= 0;) {
                var l = a.indexOf(o),
                    u = a.substr(s + r.length, l - s - r.length);
                i["marker" + u] = u.indexOf("sub") > -1 ? { textWidth: 4, textHeight: 4, textBorderRadius: 2, textBackgroundColor: e[u], textOffset: [3, 0] } : { textWidth: 10, textHeight: 10, textBorderRadius: 5, textBackgroundColor: e[u] }, a = a.substr(l + 1), s = a.indexOf("{marker")
            }
            this.el = new QS({ style: { rich: i, text: t, textLineHeight: 20, textBackgroundColor: n.get("backgroundColor"), textBorderRadius: n.get("borderRadius"), textFill: n.get("textStyle.color"), textPadding: n.get("padding") }, z: n.get("z") }), this._zr.add(this.el);
            var h = this;
            this.el.on("mouseover", function() { h._enterable && (clearTimeout(h._hideTimeout), h._show = !0), h._inContent = !0 }), this.el.on("mouseout", function() { h._enterable && h._show && h.hideLater(h._hideDelay), h._inContent = !1 })
        },
        setEnterable: function(t) { this._enterable = t },
        getSize: function() { var t = this.el.getBoundingRect(); return [t.width, t.height] },
        moveTo: function(t, e) { this.el && this.el.attr("position", [t, e]) },
        hide: function() { this.el && this.el.hide(), this._show = !1 },
        hideLater: function(t) {!this._show || this._inContent && this._enterable || (t ? (this._hideDelay = t, this._show = !1, this._hideTimeout = setTimeout(y(this.hide, this), t)) : this.hide()) },
        isShow: function() { return this._show },
        getOuterSize: function() { var t = this.getSize(); return { width: t[0], height: t[1] } }
    };
    var aE = y,
        rE = f,
        oE = lo,
        sE = new cI({ shape: { x: -1, y: -1, width: 2, height: 2 } });
    wu({
        type: "tooltip",
        init: function(t, e) {
            if (!D_.node) {
                var n = t.getComponent("tooltip"),
                    i = n.get("renderMode");
                this._renderMode = ta(i);
                var a;
                "html" === this._renderMode ? (a = new Gx(e.getDom(), e), this._newLine = "<br/>") : (a = new Fx(e), this._newLine = "\n"), this._tooltipContent = a
            }
        },
        render: function(t, e, n) {
            if (!D_.node) {
                this.group.removeAll(), this._tooltipModel = t, this._ecModel = e, this._api = n, this._lastDataByCoordSys = null, this._alwaysShowContent = t.get("alwaysShowContent");
                var i = this._tooltipContent;
                i.update(), i.setEnterable(t.get("enterable")), this._initGlobalListener(), this._keepShow()
            }
        },
        _initGlobalListener: function() {
            var t = this._tooltipModel,
                e = t.get("triggerOn");
            Yv("itemTooltip", this._api, aE(function(t, n, i) { "none" !== e && (e.indexOf(t) >= 0 ? this._tryShow(n, i) : "leave" === t && this._hide(i)) }, this))
        },
        _keepShow: function() {
            var t = this._tooltipModel,
                e = this._ecModel,
                n = this._api;
            if (null != this._lastX && null != this._lastY && "none" !== t.get("triggerOn")) {
                var i = this;
                clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {!n.isDisposed() && i.manuallyShowTip(t, e, n, { x: i._lastX, y: i._lastY }) })
            }
        },
        manuallyShowTip: function(t, e, n, i) {
            if (i.from !== this.uid && !D_.node) {
                var a = Hx(i, n);
                this._ticket = "";
                var r = i.dataByCoordSys;
                if (i.tooltip && null != i.x && null != i.y) {
                    var o = sE;
                    o.position = [i.x, i.y], o.update(), o.tooltip = i.tooltip, this._tryShow({ offsetX: i.x, offsetY: i.y, target: o }, a)
                } else if (r) this._tryShow({ offsetX: i.x, offsetY: i.y, position: i.position, event: {}, dataByCoordSys: i.dataByCoordSys, tooltipOption: i.tooltipOption }, a);
                else if (null != i.seriesIndex) {
                    if (this._manuallyAxisShowTip(t, e, n, i)) return;
                    var s = HN(i, e),
                        l = s.point[0],
                        u = s.point[1];
                    null != l && null != u && this._tryShow({ offsetX: l, offsetY: u, position: i.position, target: s.el, event: {} }, a)
                } else null != i.x && null != i.y && (n.dispatchAction({ type: "updateAxisPointer", x: i.x, y: i.y }), this._tryShow({ offsetX: i.x, offsetY: i.y, position: i.position, target: n.getZr().findHover(i.x, i.y).target, event: {} }, a))
            }
        },
        manuallyHideTip: function(t, e, n, i) { var a = this._tooltipContent;!this._alwaysShowContent && this._tooltipModel && a.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = null, i.from !== this.uid && this._hide(Hx(i, n)) },
        _manuallyAxisShowTip: function(t, e, n, i) {
            var a = i.seriesIndex,
                r = i.dataIndex,
                o = e.getComponent("axisPointer").coordSysAxesInfo;
            if (null != a && null != r && null != o) {
                var s = e.getSeriesByIndex(a);
                if (s) {
                    var l = s.getData(),
                        t = Wx([l.getItemModel(r), s, (s.coordinateSystem || {}).model, t]);
                    if ("axis" === t.get("trigger")) return n.dispatchAction({ type: "updateAxisPointer", seriesIndex: a, dataIndex: r, position: i.position }), !0
                }
            }
        },
        _tryShow: function(t, e) {
            var n = t.target,
                i = this._tooltipModel;
            if (i) {
                this._lastX = t.offsetX, this._lastY = t.offsetY;
                var a = t.dataByCoordSys;
                a && a.length ? this._showAxisTooltip(a, t) : n && null != n.dataIndex ? (this._lastDataByCoordSys = null, this._showSeriesItemTooltip(t, n, e)) : n && n.tooltip ? (this._lastDataByCoordSys = null, this._showComponentItemTooltip(t, n, e)) : (this._lastDataByCoordSys = null, this._hide(e))
            }
        },
        _showOrMove: function(t, e) {
            var n = t.get("showDelay");
            e = y(e, this), clearTimeout(this._showTimout), n > 0 ? this._showTimout = setTimeout(e, n) : e()
        },
        _showAxisTooltip: function(t, e) {
            var n = this._ecModel,
                i = this._tooltipModel,
                r = [e.offsetX, e.offsetY],
                o = [],
                s = [],
                l = Wx([e.tooltipOption, i]),
                u = this._renderMode,
                h = this._newLine,
                c = {};
            rE(t, function(t) {
                rE(t.dataByAxis, function(t) {
                    var e = n.getComponent(t.axisDim + "Axis", t.axisIndex),
                        i = t.value,
                        r = [];
                    if (e && null != i) {
                        var l = sy(i, e.axis, n, t.seriesDataIndices, t.valueLabelOpt);
                        f(t.seriesDataIndices, function(o) {
                            var h = n.getSeriesByIndex(o.seriesIndex),
                                d = o.dataIndexInside,
                                f = h && h.getDataParams(d);
                            if (f.axisDim = t.axisDim, f.axisIndex = t.axisIndex, f.axisType = t.axisType, f.axisId = t.axisId, f.axisValue = Lh(e.axis, i), f.axisValueLabel = l, f) {
                                s.push(f);
                                var g, p = h.formatTooltip(d, !0, null, u);
                                if (S(p)) {
                                    g = p.html;
                                    var m = p.markers;
                                    a(c, m)
                                } else g = p;
                                r.push(g)
                            }
                        });
                        var d = l;
                        o.push("html" !== u ? r.join(h) : (d ? To(d) + h : "") + r.join(h))
                    }
                })
            }, this), o.reverse(), o = o.join(this._newLine + this._newLine);
            var d = e.position;
            this._showOrMove(l, function() { this._updateContentNotChangedOnAxis(t) ? this._updatePosition(l, d, r[0], r[1], this._tooltipContent, s) : this._showTooltipContent(l, o, s, Math.random(), r[0], r[1], d, void 0, c) })
        },
        _showSeriesItemTooltip: function(t, e, n) {
            var i = this._ecModel,
                a = e.seriesIndex,
                r = i.getSeriesByIndex(a),
                o = e.dataModel || r,
                s = e.dataIndex,
                l = e.dataType,
                u = o.getData(),
                h = Wx([u.getItemModel(s), o, r && (r.coordinateSystem || {}).model, this._tooltipModel]),
                c = h.get("trigger");
            if (null == c || "item" === c) {
                var d, f, g = o.getDataParams(s, l),
                    p = o.formatTooltip(s, !1, l, this._renderMode);
                S(p) ? (d = p.html, f = p.markers) : (d = p, f = null);
                var m = "item_" + o.name + "_" + s;
                this._showOrMove(h, function() { this._showTooltipContent(h, d, g, m, t.offsetX, t.offsetY, t.position, t.target, f) }), n({ type: "showTip", dataIndexInside: s, dataIndex: u.getRawIndex(s), seriesIndex: a, from: this.uid })
            }
        },
        _showComponentItemTooltip: function(t, e, n) {
            var i = e.tooltip;
            if ("string" == typeof i) {
                var a = i;
                i = { content: a, formatter: a }
            }
            var r = new to(i, this._tooltipModel, this._ecModel),
                o = r.get("content"),
                s = Math.random();
            this._showOrMove(r, function() { this._showTooltipContent(r, o, r.get("formatterParams") || {}, s, t.offsetX, t.offsetY, t.position, e) }), n({ type: "showTip", from: this.uid })
        },
        _showTooltipContent: function(t, e, n, i, a, r, o, s, l) {
            if (this._ticket = "", t.get("showContent") && t.get("show")) {
                var u = this._tooltipContent,
                    h = t.get("formatter");
                o = o || t.get("position");
                var c = e;
                if (h && "string" == typeof h) c = Ao(h, n, !0);
                else if ("function" == typeof h) {
                    var d = aE(function(e, i) { e === this._ticket && (u.setContent(i, l, t), this._updatePosition(t, o, a, r, u, n, s)) }, this);
                    this._ticket = i, c = h(n, i, d)
                }
                u.setContent(c, l, t), u.show(t), this._updatePosition(t, o, a, r, u, n, s)
            }
        },
        _updatePosition: function(t, e, n, i, a, r, o) {
            var s = this._api.getWidth(),
                l = this._api.getHeight();
            e = e || t.get("position");
            var u = a.getSize(),
                h = t.get("align"),
                c = t.get("verticalAlign"),
                d = o && o.getBoundingRect().clone();
            if (o && d.applyTransform(o.transform), "function" == typeof e && (e = e([n, i], r, a.el, d, { viewSize: [s, l], contentSize: u.slice() })), _(e)) n = oE(e[0], s), i = oE(e[1], l);
            else if (S(e)) {
                e.width = u[0], e.height = u[1];
                var f = Bo(e, { width: s, height: l });
                n = f.x, i = f.y, h = null, c = null
            } else if ("string" == typeof e && o) {
                var g = Ux(e, d, u);
                n = g[0], i = g[1]
            } else {
                var g = Xx(n, i, a, s, l, h ? null : 20, c ? null : 20);
                n = g[0], i = g[1]
            }
            if (h && (n -= jx(h) ? u[0] / 2 : "right" === h ? u[0] : 0), c && (i -= jx(c) ? u[1] / 2 : "bottom" === c ? u[1] : 0), t.get("confine")) {
                var g = Yx(n, i, a, s, l);
                n = g[0], i = g[1]
            }
            a.moveTo(n, i)
        },
        _updateContentNotChangedOnAxis: function(t) {
            var e = this._lastDataByCoordSys,
                n = !!e && e.length === t.length;
            return n && rE(e, function(e, i) {
                var a = e.dataByAxis || {},
                    r = t[i] || {},
                    o = r.dataByAxis || [];
                n &= a.length === o.length, n && rE(a, function(t, e) {
                    var i = o[e] || {},
                        a = t.seriesDataIndices || [],
                        r = i.seriesDataIndices || [];
                    n &= t.value === i.value && t.axisType === i.axisType && t.axisId === i.axisId && a.length === r.length, n && rE(a, function(t, e) {
                        var i = r[e];
                        n &= t.seriesIndex === i.seriesIndex && t.dataIndex === i.dataIndex
                    })
                })
            }), this._lastDataByCoordSys = t, !!n
        },
        _hide: function(t) { this._lastDataByCoordSys = null, t({ type: "hideTip", from: this.uid }) },
        dispose: function(t, e) { D_.node || (this._tooltipContent.hide(), $v("itemTooltip", e)) }
    }), fu({ type: "showTip", event: "showTip", update: "tooltip:manuallyShowTip" }, function() {}), fu({ type: "hideTip", event: "hideTip", update: "tooltip:manuallyHideTip" }, function() {});
    var lE = Mo,
        uE = To,
        hE = _u({
            type: "marker",
            dependencies: ["series", "grid", "polar", "geo"],
            init: function(t, e, n) { this.mergeDefaultAndTheme(t, n), this._mergeOption(t, n, !1, !0) },
            isAnimationEnabled: function() { if (D_.node) return !1; var t = this.__hostSeries; return this.getShallow("animation") && t && t.isAnimationEnabled() },
            mergeOption: function(t, e) { this._mergeOption(t, e, !1, !1) },
            _mergeOption: function(t, e, n, i) {
                var a = this.constructor,
                    r = this.mainType + "Model";
                n || e.eachSeries(function(t) {
                    var n = t.get(this.mainType, !0),
                        s = t[r];
                    return n && n.data ? (s ? s._mergeOption(n, e, !0) : (i && Zx(n), f(n.data, function(t) { t instanceof Array ? (Zx(t[0]), Zx(t[1])) : Zx(t) }), s = new a(n, this, e), o(s, { mainType: this.mainType, seriesIndex: t.seriesIndex, name: t.name, createdBySelf: !0 }), s.__hostSeries = t), void(t[r] = s)) : void(t[r] = null)
                }, this)
            },
            formatTooltip: function(t) {
                var e = this.getData(),
                    n = this.getRawValue(t),
                    i = _(n) ? g(n, lE).join(", ") : lE(n),
                    a = e.getName(t),
                    r = uE(this.name);
                return (null != n || a) && (r += "<br />"), a && (r += uE(a), null != n && (r += " : ")), null != n && (r += uE(i)), r
            },
            getData: function() { return this._data },
            setData: function(t) { this._data = t }
        });
    c(hE, XM), hE.extend({ type: "markPoint", defaultOption: { zlevel: 0, z: 5, symbol: "pin", symbolSize: 50, tooltip: { trigger: "item" }, label: { show: !0, position: "inside" }, itemStyle: { borderWidth: 2 }, emphasis: { label: { show: !0 } } } });
    var cE = u,
        dE = x,
        fE = { min: dE($x, "min"), max: dE($x, "max"), average: dE($x, "average") },
        gE = wu({
            type: "marker",
            init: function() { this.markerGroupMap = B() },
            render: function(t, e, n) {
                var i = this.markerGroupMap;
                i.each(function(t) { t.__keep = !1 });
                var a = this.type + "Model";
                e.eachSeries(function(t) {
                    var i = t[a];
                    i && this.renderSeries(t, i, e, n)
                }, this), i.each(function(t) {!t.__keep && this.group.remove(t.group) }, this)
            },
            renderSeries: function() {}
        });
    gE.extend({
        type: "markPoint",
        updateTransform: function(t, e, n) {
            e.eachSeries(function(t) {
                var e = t.markPointModel;
                e && (a_(e.getData(), t, n), this.markerGroupMap.get(t.id).updateLayout(e))
            }, this)
        },
        renderSeries: function(t, e, n, i) {
            var a = t.coordinateSystem,
                r = t.id,
                o = t.getData(),
                s = this.markerGroupMap,
                l = s.get(r) || s.set(r, new nd),
                u = r_(a, t, e);
            e.setData(u), a_(e.getData(), t, i), u.each(function(t) {
                var n = u.getItemModel(t),
                    i = n.getShallow("symbol"),
                    a = n.getShallow("symbolSize"),
                    r = w(i),
                    s = w(a);
                if (r || s) {
                    var l = e.getRawValue(t),
                        h = e.getDataParams(t);
                    r && (i = i(l, h)), s && (a = a(l, h))
                }
                u.setItemVisual(t, { symbol: i, symbolSize: a, color: n.get("itemStyle.color") || o.getVisual("color") })
            }), l.updateData(u), this.group.add(l.group), u.eachItemGraphicEl(function(t) { t.traverse(function(t) { t.dataModel = e }) }), l.__keep = !0, l.group.silent = e.get("silent") || t.get("silent")
        }
    }), hu(function(t) { t.markPoint = t.markPoint || {} }), hE.extend({ type: "markLine", defaultOption: { zlevel: 0, z: 5, symbol: ["circle", "arrow"], symbolSize: [8, 16], precision: 2, tooltip: { trigger: "item" }, label: { show: !0, position: "end" }, lineStyle: { type: "dashed" }, emphasis: { label: { show: !0 }, lineStyle: { width: 3 } }, animationEasing: "linear" } });
    var pE = function(t, e, n, r) {
        var s = t.getData(),
            l = r.type;
        if (!_(r) && ("min" === l || "max" === l || "average" === l || "median" === l || null != r.xAxis || null != r.yAxis)) {
            var u, h;
            if (null != r.yAxis || null != r.xAxis) u = e.getAxis(null != r.yAxis ? "y" : "x"), h = A(r.yAxis, r.xAxis);
            else {
                var c = Qx(r, s, e, t);
                u = c.valueAxis;
                var d = Ju(s, c.valueDataDim);
                h = i_(s, d, l)
            }
            var f = "x" === u.dim ? 0 : 1,
                g = 1 - f,
                p = i(r),
                m = {};
            p.type = null, p.coord = [], m.coord = [], p.coord[g] = -1 / 0, m.coord[g] = 1 / 0;
            var v = n.get("precision");
            v >= 0 && "number" == typeof h && (h = +h.toFixed(Math.min(v, 20))), p.coord[f] = m.coord[f] = h, r = [p, m, { type: l, valueIndex: r.valueIndex, value: h }]
        }
        return r = [Jx(t, r[0]), Jx(t, r[1]), o({}, r[2])], r[2].type = r[2].type || "", a(r[2], r[0]), a(r[2], r[1]), r
    };
    gE.extend({
        type: "markLine",
        updateTransform: function(t, e, n) {
            e.eachSeries(function(t) {
                var e = t.markLineModel;
                if (e) {
                    var i = e.getData(),
                        a = e.__from,
                        r = e.__to;
                    a.each(function(e) { u_(a, e, !0, t, n), u_(r, e, !1, t, n) }), i.each(function(t) { i.setItemLayout(t, [a.getItemLayout(t), r.getItemLayout(t)]) }), this.markerGroupMap.get(t.id).updateLayout()
                }
            }, this)
        },
        renderSeries: function(t, e, n, i) {
            function a(e, n, a) {
                var r = e.getItemModel(n);
                u_(e, n, a, t, i), e.setItemVisual(n, { symbolSize: r.get("symbolSize") || p[a ? 0 : 1], symbol: r.get("symbol", !0) || g[a ? 0 : 1], color: r.get("itemStyle.color") || s.getVisual("color") })
            }
            var r = t.coordinateSystem,
                o = t.id,
                s = t.getData(),
                l = this.markerGroupMap,
                u = l.get(o) || l.set(o, new mp);
            this.group.add(u.group);
            var h = h_(r, t, e),
                c = h.from,
                d = h.to,
                f = h.line;
            e.__from = c, e.__to = d, e.setData(f);
            var g = e.get("symbol"),
                p = e.get("symbolSize");
            _(g) || (g = [g, g]), "number" == typeof p && (p = [p, p]), h.from.each(function(t) { a(c, t, !0), a(d, t, !1) }), f.each(function(t) {
                var e = f.getItemModel(t).get("lineStyle.color");
                f.setItemVisual(t, { color: e || c.getItemVisual(t, "color") }), f.setItemLayout(t, [c.getItemLayout(t), d.getItemLayout(t)]), f.setItemVisual(t, { fromSymbolSize: c.getItemVisual(t, "symbolSize"), fromSymbol: c.getItemVisual(t, "symbol"), toSymbolSize: d.getItemVisual(t, "symbolSize"), toSymbol: d.getItemVisual(t, "symbol") })
            }), u.updateData(f), h.line.eachItemGraphicEl(function(t) { t.traverse(function(t) { t.dataModel = e }) }), u.__keep = !0, u.group.silent = e.get("silent") || t.get("silent")
        }
    }), hu(function(t) { t.markLine = t.markLine || {} }), hE.extend({ type: "markArea", defaultOption: { zlevel: 0, z: 1, tooltip: { trigger: "item" }, animation: !1, label: { show: !0, position: "top" }, itemStyle: { borderWidth: 0 }, emphasis: { label: { show: !0, position: "top" } } } });
    var mE = function(t, e, n, i) {
            var a = Jx(t, i[0]),
                o = Jx(t, i[1]),
                s = A,
                l = a.coord,
                u = o.coord;
            l[0] = s(l[0], -1 / 0), l[1] = s(l[1], -1 / 0), u[0] = s(u[0], 1 / 0), u[1] = s(u[1], 1 / 0);
            var h = r([{}, a, o]);
            return h.coord = [a.coord, o.coord], h.x0 = a.x, h.y0 = a.y, h.x1 = o.x, h.y1 = o.y, h
        },
        vE = [
            ["x0", "y0"],
            ["x1", "y0"],
            ["x1", "y1"],
            ["x0", "y1"]
        ];
    gE.extend({
        type: "markArea",
        updateTransform: function(t, e, n) {
            e.eachSeries(function(t) {
                var e = t.markAreaModel;
                if (e) {
                    var i = e.getData();
                    i.each(function(e) {
                        var a = g(vE, function(a) { return g_(i, e, a, t, n) });
                        i.setItemLayout(e, a);
                        var r = i.getItemGraphicEl(e);
                        r.setShape("points", a)
                    })
                }
            }, this)
        },
        renderSeries: function(t, e, n, i) {
            var a = t.coordinateSystem,
                r = t.id,
                o = t.getData(),
                l = this.markerGroupMap,
                u = l.get(r) || l.set(r, { group: new Vw });
            this.group.add(u.group), u.__keep = !0;
            var h = p_(a, t, e);
            e.setData(h), h.each(function(e) { h.setItemLayout(e, g(vE, function(n) { return g_(h, e, n, t, i) })), h.setItemVisual(e, { color: o.getVisual("color") }) }), h.diff(u.__data).add(function(t) {
                var e = new sI({ shape: { points: h.getItemLayout(t) } });
                h.setItemGraphicEl(t, e), u.group.add(e)
            }).update(function(t, n) {
                var i = u.__data.getItemGraphicEl(n);
                Fr(i, { shape: { points: h.getItemLayout(t) } }, e, t), u.group.add(i), h.setItemGraphicEl(t, i)
            }).remove(function(t) {
                var e = u.__data.getItemGraphicEl(t);
                u.group.remove(e)
            }).execute(), h.eachItemGraphicEl(function(t, n) {
                var i = h.getItemModel(n),
                    a = i.getModel("label"),
                    r = i.getModel("emphasis.label"),
                    o = h.getItemVisual(n, "color");
                t.useStyle(s(i.getModel("itemStyle").getItemStyle(), { fill: an(o, .4), stroke: o })), t.hoverStyle = i.getModel("emphasis.itemStyle").getItemStyle(), Cr(t.style, t.hoverStyle, a, r, { labelFetcher: e, labelDataIndex: n, defaultText: h.getName(n) || "", isRectText: !0, autoColor: o }), Mr(t, {}), t.dataModel = e
            }), u.__data = h, u.group.silent = e.get("silent") || t.get("silent")
        }
    }), hu(function(t) { t.markArea = t.markArea || {} });
    var yE = function(t) {
        var e = t && t.timeline;
        _(e) || (e = e ? [e] : []), f(e, function(t) { t && m_(t) })
    };
    sM.registerSubTypeDefaulter("timeline", function() { return "slider" }), fu({ type: "timelineChange", event: "timelineChanged", update: "prepareAndUpdate" }, function(t, e) { var n = e.getComponent("timeline"); return n && null != t.currentIndex && (n.setCurrentIndex(t.currentIndex), !n.get("loop", !0) && n.isIndexMax() && n.setPlayState(!1)), e.resetOption("timeline"), s({ currentIndex: n.option.currentIndex }, t) }), fu({ type: "timelinePlayChange", event: "timelinePlayChanged", update: "update" }, function(t, e) {
        var n = e.getComponent("timeline");
        n && null != t.playState && n.setPlayState(t.playState)
    });
    var xE = sM.extend({
            type: "timeline",
            layoutMode: "box",
            defaultOption: { zlevel: 0, z: 4, show: !0, axisType: "time", realtime: !0, left: "20%", top: null, right: "20%", bottom: 0, width: null, height: 40, padding: 5, controlPosition: "left", autoPlay: !1, rewind: !1, loop: !0, playInterval: 2e3, currentIndex: 0, itemStyle: {}, label: { color: "#000" }, data: [] },
            init: function(t, e, n) { this._data, this._names, this.mergeDefaultAndTheme(t, n), this._initData() },
            mergeOption: function() { xE.superApply(this, "mergeOption", arguments), this._initData() },
            setCurrentIndex: function(t) {
                null == t && (t = this.option.currentIndex);
                var e = this._data.count();
                this.option.loop ? t = (t % e + e) % e : (t >= e && (t = e - 1), 0 > t && (t = 0)), this.option.currentIndex = t
            },
            getCurrentIndex: function() { return this.option.currentIndex },
            isIndexMax: function() { return this.getCurrentIndex() >= this._data.count() - 1 },
            setPlayState: function(t) { this.option.autoPlay = !!t },
            getPlayState: function() { return !!this.option.autoPlay },
            _initData: function() {
                var t = this.option,
                    e = t.data || [],
                    n = t.axisType,
                    a = this._names = [];
                if ("category" === n) {
                    var r = [];
                    f(e, function(t, e) {
                        var n, o = Wi(t);
                        S(t) ? (n = i(t), n.value = e) : n = e, r.push(n), b(o) || null != o && !isNaN(o) || (o = ""), a.push(o + "")
                    }), e = r
                }
                var o = { category: "ordinal", time: "time" }[n] || "number",
                    s = this._data = new PT([{ name: "value", type: o }], this);
                s.initData(e, a)
            },
            getData: function() { return this._data },
            getCategories: function() { return "category" === this.get("axisType") ? this._names.slice() : void 0 }
        }),
        _E = xE.extend({ type: "timeline.slider", defaultOption: { backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", borderWidth: 0, orient: "horizontal", inverse: !1, tooltip: { trigger: "item" }, symbol: "emptyCircle", symbolSize: 10, lineStyle: { show: !0, width: 2, color: "#304654" }, label: { position: "auto", show: !0, interval: "auto", rotate: 0, color: "#304654" }, itemStyle: { color: "#304654", borderWidth: 1 }, checkpointStyle: { symbol: "circle", symbolSize: 13, color: "#c23531", borderWidth: 5, borderColor: "rgba(194,53,49, 0.5)", animation: !0, animationDuration: 300, animationEasing: "quinticInOut" }, controlStyle: { show: !0, showPlayBtn: !0, showPrevBtn: !0, showNextBtn: !0, itemSize: 22, itemGap: 12, position: "left", playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z", stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z", nextIcon: "path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z", prevIcon: "path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z", color: "#304654", borderColor: "#304654", borderWidth: 1 }, emphasis: { label: { show: !0, color: "#c23531" }, itemStyle: { color: "#c23531" }, controlStyle: { color: "#c23531", borderColor: "#c23531", borderWidth: 2 } }, data: [] } });
    c(_E, XM);
    var wE = qM.extend({ type: "timeline" }),
        bE = function(t, e, n, i) { MA.call(this, t, e, n), this.type = i || "value", this.model = null };
    bE.prototype = { constructor: bE, getLabelModel: function() { return this.model.getModel("label") }, isHorizontal: function() { return "horizontal" === this.model.get("orient") } }, h(bE, MA);
    var SE = y,
        IE = f,
        ME = Math.PI;
    wE.extend({
        type: "timeline.slider",
        init: function(t, e) { this.api = e, this._axis, this._viewRect, this._timer, this._currentPointer, this._mainGroup, this._labelGroup },
        render: function(t, e, n) {
            if (this.model = t, this.api = n, this.ecModel = e, this.group.removeAll(), t.get("show", !0)) {
                var i = this._layout(t, n),
                    a = this._createGroup("mainGroup"),
                    r = this._createGroup("labelGroup"),
                    o = this._axis = this._createAxis(i, t);
                t.formatTooltip = function(t) { return To(o.scale.getLabel(t)) }, IE(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(e) { this["_render" + e](i, a, o, t) }, this), this._renderAxisLabel(i, r, o, t), this._position(i, t)
            }
            this._doPlayStop()
        },
        remove: function() { this._clearTimer(), this.group.removeAll() },
        dispose: function() { this._clearTimer() },
        _layout: function(t, e) {
            var n = t.get("label.position"),
                i = t.get("orient"),
                a = x_(t, e);
            null == n || "auto" === n ? n = "horizontal" === i ? a.y + a.height / 2 < e.getHeight() / 2 ? "-" : "+" : a.x + a.width / 2 < e.getWidth() / 2 ? "+" : "-" : isNaN(n) && (n = { horizontal: { top: "-", bottom: "+" }, vertical: { left: "-", right: "+" } }[i][n]);
            var r = { horizontal: "center", vertical: n >= 0 || "+" === n ? "left" : "right" },
                o = { horizontal: n >= 0 || "+" === n ? "top" : "bottom", vertical: "middle" },
                s = { horizontal: 0, vertical: ME / 2 },
                l = "vertical" === i ? a.height : a.width,
                u = t.getModel("controlStyle"),
                h = u.get("show", !0),
                c = h ? u.get("itemSize") : 0,
                d = h ? u.get("itemGap") : 0,
                f = c + d,
                g = t.get("label.rotate") || 0;
            g = g * ME / 180;
            var p, m, v, y, x = u.get("position", !0),
                _ = h && u.get("showPlayBtn", !0),
                w = h && u.get("showPrevBtn", !0),
                b = h && u.get("showNextBtn", !0),
                S = 0,
                I = l;
            return "left" === x || "bottom" === x ? (_ && (p = [0, 0], S += f), w && (m = [S, 0], S += f), b && (v = [I - c, 0], I -= f)) : (_ && (p = [I - c, 0], I -= f), w && (m = [0, 0], S += f), b && (v = [I - c, 0], I -= f)), y = [S, I], t.get("inverse") && y.reverse(), { viewRect: a, mainLength: l, orient: i, rotation: s[i], labelRotation: g, labelPosOpt: n, labelAlign: t.get("label.align") || r[i], labelBaseline: t.get("label.verticalAlign") || t.get("label.baseline") || o[i], playPosition: p, prevBtnPosition: m, nextBtnPosition: v, axisExtent: y, controlSize: c, controlGap: d }
        },
        _position: function(t) {
            function e(t) {
                var e = t.position;
                t.origin = [h[0][0] - e[0], h[1][0] - e[1]]
            }

            function n(t) {
                return [
                    [t.x, t.x + t.width],
                    [t.y, t.y + t.height]
                ]
            }

            function i(t, e, n, i, a) { t[i] += n[i][a] - e[i][a] }
            var a = this._mainGroup,
                r = this._labelGroup,
                o = t.viewRect;
            if ("vertical" === t.orient) {
                var s = Ae(),
                    l = o.x,
                    u = o.y + o.height;
                ke(s, s, [-l, -u]), Ne(s, s, -ME / 2), ke(s, s, [l, u]), o = o.clone(), o.applyTransform(s)
            }
            var h = n(o),
                c = n(a.getBoundingRect()),
                d = n(r.getBoundingRect()),
                f = a.position,
                g = r.position;
            g[0] = f[0] = h[0][0];
            var p = t.labelPosOpt;
            if (isNaN(p)) {
                var m = "+" === p ? 0 : 1;
                i(f, c, h, 1, m), i(g, d, h, 1, 1 - m)
            } else {
                var m = p >= 0 ? 0 : 1;
                i(f, c, h, 1, m), g[1] = f[1] + p
            }
            a.attr("position", f), r.attr("position", g), a.rotation = r.rotation = t.rotation, e(a), e(r)
        },
        _createAxis: function(t, e) {
            var n = e.getData(),
                i = e.get("axisType"),
                a = Th(e, i);
            a.getTicks = function() { return n.mapArray(["value"], function(t) { return t }) };
            var r = n.getDataExtent("value");
            a.setExtent(r[0], r[1]), a.niceTicks();
            var o = new bE("value", a, t.axisExtent, i);
            return o.model = e, o
        },
        _createGroup: function(t) { var e = this["_" + t] = new Vw; return this.group.add(e), e },
        _renderAxisLine: function(t, e, n, i) {
            var a = n.getExtent();
            i.get("lineStyle.show") && e.add(new fI({ shape: { x1: a[0], y1: 0, x2: a[1], y2: 0 }, style: o({ lineCap: "round" }, i.getModel("lineStyle").getLineStyle()), silent: !0, z2: 1 }))
        },
        _renderAxisTick: function(t, e, n, i) {
            var a = i.getData(),
                r = n.scale.getTicks();
            IE(r, function(t) {
                var r = n.dataToCoord(t),
                    o = a.getItemModel(t),
                    s = o.getModel("itemStyle"),
                    l = o.getModel("emphasis.itemStyle"),
                    u = { position: [r, 0], onclick: SE(this._changeTimeline, this, t) },
                    h = w_(o, s, e, u);
                Mr(h, l.getItemStyle()), o.get("tooltip") ? (h.dataIndex = t, h.dataModel = i) : h.dataIndex = h.dataModel = null
            }, this)
        },
        _renderAxisLabel: function(t, e, n, i) {
            var a = n.getLabelModel();
            if (a.get("show")) {
                var r = i.getData(),
                    o = n.getViewLabels();
                IE(o, function(i) {
                    var a = i.tickValue,
                        o = r.getItemModel(a),
                        s = o.getModel("label"),
                        l = o.getModel("emphasis.label"),
                        u = n.dataToCoord(i.tickValue),
                        h = new QS({ position: [u, 0], rotation: t.labelRotation - t.rotation, onclick: SE(this._changeTimeline, this, a), silent: !1 });
                    Pr(h.style, s, { text: i.formattedLabel, textAlign: t.labelAlign, textVerticalAlign: t.labelBaseline }), e.add(h), Mr(h, Pr({}, l))
                }, this)
            }
        },
        _renderControl: function(t, e, n, i) {
            function a(t, n, a, h) {
                if (t) {
                    var c = { position: t, origin: [r / 2, 0], rotation: h ? -o : 0, rectHover: !0, style: s, onclick: a },
                        d = __(i, n, u, c);
                    e.add(d), Mr(d, l)
                }
            }
            var r = t.controlSize,
                o = t.rotation,
                s = i.getModel("controlStyle").getItemStyle(),
                l = i.getModel("emphasis.controlStyle").getItemStyle(),
                u = [0, -r / 2, r, r],
                h = i.getPlayState(),
                c = i.get("inverse", !0);
            a(t.nextBtnPosition, "controlStyle.nextIcon", SE(this._changeTimeline, this, c ? "-" : "+")), a(t.prevBtnPosition, "controlStyle.prevIcon", SE(this._changeTimeline, this, c ? "+" : "-")), a(t.playPosition, "controlStyle." + (h ? "stopIcon" : "playIcon"), SE(this._handlePlayClick, this, !h), !0)
        },
        _renderCurrentPointer: function(t, e, n, i) {
            var a = i.getData(),
                r = i.getCurrentIndex(),
                o = a.getItemModel(r).getModel("checkpointStyle"),
                s = this,
                l = { onCreate: function(t) { t.draggable = !0, t.drift = SE(s._handlePointerDrag, s), t.ondragend = SE(s._handlePointerDragend, s), b_(t, r, n, i, !0) }, onUpdate: function(t) { b_(t, r, n, i) } };
            this._currentPointer = w_(o, o, this._mainGroup, {}, this._currentPointer, l)
        },
        _handlePlayClick: function(t) { this._clearTimer(), this.api.dispatchAction({ type: "timelinePlayChange", playState: t, from: this.uid }) },
        _handlePointerDrag: function(t, e, n) { this._clearTimer(), this._pointerChangeTimeline([n.offsetX, n.offsetY]) },
        _handlePointerDragend: function(t) { this._pointerChangeTimeline([t.offsetX, t.offsetY], !0) },
        _pointerChangeTimeline: function(t, e) {
            var n = this._toAxisCoord(t)[0],
                i = this._axis,
                a = ho(i.getExtent().slice());
            n > a[1] && (n = a[1]), n < a[0] && (n = a[0]), this._currentPointer.position[0] = n, this._currentPointer.dirty();
            var r = this._findNearestTick(n),
                o = this.model;
            (e || r !== o.getCurrentIndex() && o.get("realtime")) && this._changeTimeline(r)
        },
        _doPlayStop: function() {
            function t() {
                var t = this.model;
                this._changeTimeline(t.getCurrentIndex() + (t.get("rewind", !0) ? -1 : 1))
            }
            this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(SE(t, this), this.model.get("playInterval")))
        },
        _toAxisCoord: function(t) { var e = this._mainGroup.getLocalTransform(); return Xr(t, e, !0) },
        _findNearestTick: function(t) {
            var e, n = this.model.getData(),
                i = 1 / 0,
                a = this._axis;
            return n.each(["value"], function(n, r) {
                var o = a.dataToCoord(n),
                    s = Math.abs(o - t);
                i > s && (i = s, e = r)
            }), e
        },
        _clearTimer: function() { this._timer && (clearTimeout(this._timer), this._timer = null) },
        _changeTimeline: function(t) { var e = this.model.getCurrentIndex(); "+" === t ? t = e + 1 : "-" === t && (t = e - 1), this.api.dispatchAction({ type: "timelineChange", currentIndex: t, from: this.uid }) }
    }), hu(yE), t.version = BD, t.dependencies = VD, t.PRIORITY = JD, t.init = iu, t.connect = au, t.disConnect = ru, t.disconnect = yT, t.dispose = ou, t.getInstanceByDom = su, t.getInstanceById = lu, t.registerTheme = uu, t.registerPreprocessor = hu, t.registerProcessor = cu, t.registerPostUpdate = du, t.registerAction = fu, t.registerCoordinateSystem = gu, t.getCoordinateSystemDimensions = pu, t.registerLayout = mu, t.registerVisual = vu, t.registerLoading = xu, t.extendComponentModel = _u, t.extendComponentView = wu, t.extendSeriesModel = bu, t.extendChartView = Su, t.setCanvasCreator = Iu, t.registerMap = Mu, t.getMap = Du, t.dataTool = xT, t.zrender = zb, t.number = jI, t.format = tM, t.throttle = ol, t.helper = _A, t.matrix = sw, t.vector = U_, t.color = Dw, t.parseGeoJSON = bA, t.parseGeoJson = DA, t.util = TA, t.graphic = AA, t.List = PT, t.Model = to, t.Axis = MA, t.env = D_
});